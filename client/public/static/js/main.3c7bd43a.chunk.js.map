{"version":3,"sources":["MainMenu/ProductChoice/ProductChoice.module.css","MainMenu/RegionChoice/RegionChoice.module.css","App.module.css","TinyMap/TinyMap.module.css","MainMenu/MainMenu.module.css","LogIn/LogIn.module.css","common/constants/tabs.js","common/constants/colors.js","TinyMap/Marks.js","resources/station/station.selector.js","resources/tab/tab.selector.js","TinyMap/TinyMap.js","resources/user/user.types.js","common/base.api.js","common/constants/baseURL.js","resources/user/user.actions.js","resources/user/user.selector.js","Header/User.js","Header/Logo.js","Header/Header.js","resources/product/product.types.js","resources/product/product.actions.js","resources/product/product.selector.js","resources/station/station.types.js","resources/station/station.actions.js","MainMenu/ProductChoice/ProductSearch.js","common/components/tableConfig/StationDoneSwitch.js","common/components/tableConfig/tableColumns.js","MainMenu/ProductChoice/ProductTable.js","MainMenu/ProductChoice/ProductChoice.js","resources/region/region.types.js","resources/region/region.actions.js","resources/region/region.selector.js","MainMenu/RegionChoice/RegionSearch.js","MainMenu/RegionChoice/RegionTable.js","MainMenu/RegionChoice/RegionChoice.js","MainMenu/NewStation/NewStation.js","resources/tab/tab.types.js","resources/tab/tab.actions.js","MainMenu/MainMenu.js","LogIn/LogIn.js","App.js","resources/user/user.reducer.js","resources/product/product.reducer.js","resources/region/region.reducer.js","resources/station/station.reducer.js","resources/tab/tab.reducer.js","resources/store.js","index.js","Header/Header.module.css"],"names":["module","exports","PRODUCT_TAB","REGION_TAB","colors","Mark","selectedStations","map","station","color","done","colorForMap","geometry","place","modules","properties","balloonContentHeader","stationName","balloonContent","productName","needCount","balloonContentFooter","region","options","preset","iconColor","key","StationSelector","getSelectedByProductStations","state","selectedByProductStations","getSelectedByRegionStations","selectedByRegionStations","TabSelector","getActiveTab","tab","activeTab","connect","className","styles","defaultState","center","zoom","Marks","SET_CURRENT_USER","LOG_IN","api","axios","create","baseURL","timeout","headers","UserActions","setCurrentUser","id","dispatch","get","then","response","data","currentUser","type","logIn","username","password","post","UserSelector","getCurrentUser","user","mapDispatchToProps","size","onClick","avatar","name","Logo","logo","Header","header","SWITCH_ON_PRODUCT_TABLE_VISIBILITY","GET_ALL_PRODUCTS","PUSH_SELECTED_PRODUCT_ID","INC_PRODUCT_COLOR_INDEX","ProductActions","switchOnProductTableVisibility","getAllProducts","products","pushSelectedProductId","productId","incProductColorIndex","predIndex","colorIndex","ProductSelector","getProductTableVisibility","product","productTableVisibility","getSelectedProductIds","selectedProductIds","getNextProductColorIndex","nextProductColorIndex","allProducts","CREATE_STATION","PUSH_SELECTED_BY_PRODUCT_STATIONS","PUSH_SELECTED_BY_REGION_STATIONS","UPDATE_STATION_DONE","StationActions","createStation","newStationData","pushSelectedByProductStations","_id","stationsData","pushSelectedByRegionStations","regionId","updateStationDone","stationId","put","pushSelectedProductIds","incNextProductColor","nextProductColor","allProductsData","useState","productsInSearch","setProductsInSearch","setAllProducts","selectedValue","setSelectedValue","useEffect","fetchProducts","a","productsForSearch","value","label","search","dropdownMatchSelectWidth","style","width","onSelect","includes","onSearch","newProducts","filter","toString","toLowerCase","indexOf","Search","placeholder","enterButton","onChange","checked","defaultChecked","tableColumns","title","dataIndex","sorter","b","defaultSortOrder","render","StationDoneSwitch","columns","dataSource","pagination","pageSize","productTableVisability","table","SWITCH_ON_REGION_TABLE_VISIBILITY","GET_ALL_REGIONS","PUSH_SELECTED_REGIONS_ID","INC_REGION_COLOR_INDEX","RegionActions","switchOnRegionTableVisibility","getAllRegions","regions","pushSelectedRegionId","incRegionColorIndex","RegionSelector","getRegionTableVisibility","regionTableVisibility","getSelectedRegionIds","selectedRegionIds","getNextRegionColorIndex","nextRegionColorIndex","allRegions","pushSelectedRegionIds","nextRegionColor","allRegionsData","regionsInSearch","setRegionsInSearch","setAllRegions","fetchRegions","regionsForSearch","regionName","newRegions","regionTableVisability","onFinish","userId","labelCol","span","wrapperCol","layout","onFinishFailed","errorInfo","console","log","Item","Option","valuePropName","offset","htmlType","CHANGE_ACTIVE_TAB","TabActions","changeActiveTab","newActiveTabKey","TabPane","Tabs","defaultActiveKey","tabs","autoComplete","rules","required","message","Password","app","menu","path","element","to","initialState","userReducer","action","productReducer","regionReducer","StationReducer","newProdStations","push","newRegStations","tabReducer","reducers","combineReducers","stationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3c7bd43a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"ProductChoice_table__3b3pK\",\"search\":\"ProductChoice_search__2Y-QW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"RegionChoice_table__3X4Bg\",\"search\":\"RegionChoice_search__2uZdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__pQWe-\",\"menu\":\"App_menu__2HRcq\",\"username\":\"App_username__3EYJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"TinyMap_map__2-PwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"MainMenu_tabs__36HWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form\":\"LogIn_login-form__2cejJ\"};","export const PRODUCT_TAB = 'PRODUCT_TAB';\r\nexport const REGION_TAB = 'REGION_TAB';\r\nexport const CREATE_STATION_TAB = 'CREATE_STATION_TAB';","export const colors = [\r\n    '#dc143c',\r\n    '#3caa3c',\r\n    '#156fc1',\r\n    '#eaec35',\r\n    '#942010',\r\n    '#0b0038',\r\n    '#ffb21f',\r\n    '#ffbcb5v',\r\n    '#6ac954'\r\n];\r\n\r\nexport const gray = '#c0c0c0';","import React from \"react\";\r\nimport { Placemark } from 'react-yandex-maps';\r\nimport { colors, gray } from '../common/constants/colors';\r\n\r\nfunction Mark({ selectedStations }) {\r\n  return <div>\r\n    { selectedStations.map(station => {\r\n      const color = station.done ? gray : colors[station.colorForMap];\r\n\r\n      return <Placemark\r\n        key={station.key}\r\n        geometry={station.place}\r\n        modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n        properties={{\r\n          balloonContentHeader: `${station.stationName}`,\r\n          balloonContent: `Продукт: ${station.productName} --- ${station.done ? 'Выполнено!' : `Надо: ${station.needCount}`}`,\r\n          balloonContentFooter: station.region,\r\n        }}\r\n        options={{\r\n          preset: 'islands#circleIcon',\r\n          iconColor: color,\r\n        }}\r\n      /> })}\r\n  </div>\r\n}\r\n\r\nexport default Mark;","const StationSelector = {\r\n  getSelectedByProductStations: state => state.station.selectedByProductStations,\r\n  getSelectedByRegionStations: state => state.station.selectedByRegionStations,\r\n};\r\n\r\nexport default StationSelector;","const TabSelector = {\r\n  getActiveTab: state => state.tab.activeTab,\r\n};\r\n\r\nexport default TabSelector;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { YMaps, Map } from 'react-yandex-maps';\r\nimport styles from './TinyMap.module.css';\r\n\r\nimport { PRODUCT_TAB, REGION_TAB } from '../common/constants/tabs';\r\nimport Marks from './Marks';\r\n\r\nimport StationSelector from '../resources/station/station.selector';\r\nimport TabSelector from '../resources/tab/tab.selector';\r\n\r\nfunction TinyMap({ selectedByProductStations, selectedByRegionStations, activeTab }) {\r\n  return <YMaps>\r\n    <Map className={styles.map} defaultState={{ center:[19.441468, 17.496825], zoom: 2 }}>\r\n      { activeTab === PRODUCT_TAB && <Marks selectedStations={selectedByProductStations}/>}\r\n      { activeTab === REGION_TAB && <Marks selectedStations={selectedByRegionStations}/>}\r\n    </Map>\r\n  </YMaps>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedByProductStations: StationSelector.getSelectedByProductStations(state),\r\n  selectedByRegionStations: StationSelector.getSelectedByRegionStations(state),\r\n  activeTab: TabSelector.getActiveTab(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(TinyMap);","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n\r\nexport const LOG_IN = 'LOG_IN';","import axios from 'axios';\r\nimport { BASE_URL } from './constants/baseURL';\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 2000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\nexport default api;","export const BASE_URL = 'https://stormy-brook-68283.herokuapp.com'; \r\n// export const BASE_URL = 'http://localhost:3001';","import { SET_CURRENT_USER, LOG_IN } from './user.types';\r\nimport api from '../../common/base.api';\r\n\r\nconst UserActions = {\r\n  setCurrentUser: id => dispatch => \r\n    api.get(`/user/${id}`)\r\n      .then(response => response.data)\r\n      .then(currentUser => dispatch({ type: SET_CURRENT_USER, currentUser })),\r\n\r\n  logIn: (username, password) => dispatch =>\r\n    api.post(`/user/login`, { username, password })\r\n      .then(response => response.data)\r\n      .then(currentUser => dispatch({ type: LOG_IN, currentUser })),\r\n};\r\n\r\nexport default UserActions;","const UserSelector = {\r\n  getCurrentUser: state => state.user.currentUser,\r\n};\r\n\r\nexport default UserSelector;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Avatar, Button } from 'antd';\r\nimport UserActions from '../resources/user/user.actions';\r\nimport UserSelector from '../resources/user/user.selector';\r\nimport styles from './Header.module.css';\r\n\r\nfunction User({ currentUser, setCurrentUser }) {\r\n\r\n  const changeUser = () => {\r\n    // setCurrentUser('60e06fe6ad2cc121d81eb19a'); // Тонечка\r\n  };\r\n\r\n  return <div className={styles.user}>\r\n    <Button\r\n      size=\"small\"\r\n      onClick={changeUser}\r\n      className={styles['user-button']}>\r\n      Сменить власть\r\n    </Button>\r\n    <Avatar size={50} className={styles.avatar}>\r\n        {currentUser ? currentUser.name : 'Гость'}\r\n    </Avatar>\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setCurrentUser: UserActions.setCurrentUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User)","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nexport default function Logo() {\r\n  return <h2 className={styles.logo}> Tiny-Map </h2>\r\n}\r\n","import React from 'react';\r\nimport User from './User';\r\nimport Logo from './Logo';\r\nimport styles from './Header.module.css';\r\n\r\nexport default function Header() {\r\n  return <div className={styles.header}>\r\n    <Logo />\r\n    <User />\r\n  </div>\r\n};\r\n","export const SWITCH_ON_PRODUCT_TABLE_VISIBILITY = 'SWITCH_ON_PRODUCT_TABLE_VISIBILITY';\r\n\r\nexport const GET_ALL_PRODUCTS = 'GET_ALL_PRODUCTS';\r\n\r\nexport const PUSH_SELECTED_PRODUCT_ID = 'PUSH_SELECTED_PRODUCT_ID';\r\n\r\nexport const INC_PRODUCT_COLOR_INDEX = 'INC_PRODUCT_COLOR_INDEX';","import api from '../../common/base.api';\r\nimport {\r\n  SWITCH_ON_PRODUCT_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_PRODUCT_ID,\r\n  INC_PRODUCT_COLOR_INDEX,\r\n  GET_ALL_PRODUCTS,\r\n} from './product.types';\r\n\r\nconst ProductActions = {\r\n  switchOnProductTableVisibility: () => dispatch => dispatch({ type: SWITCH_ON_PRODUCT_TABLE_VISIBILITY }),\r\n\r\n  getAllProducts: () => dispatch =>\r\n    api.get('/product').then(response => response.data)\r\n    .then(products => dispatch({ type: GET_ALL_PRODUCTS, products })),\r\n\r\n  pushSelectedProductId: productId => dispatch => dispatch({ type: PUSH_SELECTED_PRODUCT_ID, productId}),\r\n\r\n  incProductColorIndex: predIndex => dispatch => dispatch({ type: INC_PRODUCT_COLOR_INDEX, colorIndex: predIndex + 1 })\r\n};\r\n\r\nexport default ProductActions;","const ProductSelector = {\r\n  getProductTableVisibility: state => state.product.productTableVisibility,\r\n\r\n  getSelectedProductIds: state => state.product.selectedProductIds,\r\n\r\n  getNextProductColorIndex: state => state.product.nextProductColorIndex,\r\n\r\n  getAllProducts: state => state.product.allProducts,\r\n};\r\n\r\nexport default ProductSelector;","export const CREATE_STATION = 'CREATE_STATION';\r\n\r\nexport const PUSH_SELECTED_BY_PRODUCT_STATIONS = 'PUSH_SELECTED_BY_PRODUCT_STATIONS';\r\nexport const PUSH_SELECTED_BY_REGION_STATIONS = 'PUSH_SELECTED_BY_REGION_STATIONS';\r\n\r\nexport const UPDATE_STATION_DONE = 'UPDATE_STATION_DONE';","import {\r\n  CREATE_STATION,\r\n  PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n  PUSH_SELECTED_BY_REGION_STATIONS,\r\n  UPDATE_STATION_DONE,\r\n} from './station.types';\r\nimport api from '../../common/base.api';\r\n\r\nconst StationActions = {\r\n  createStation: newStationData => dispatch => \r\n    api.post('/station', newStationData)\r\n      .then(() => dispatch({ type: CREATE_STATION })),\r\n  \r\n  pushSelectedByProductStations: (productId, currentUser, colorForMap) => dispatch => \r\n    api.get(`/station/product/${productId}/${currentUser._id}`)\r\n      .then(response => response.data)\r\n      .then(stationsData => dispatch({\r\n        type: PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n        stationsData: stationsData.map(station => {\r\n          station.colorForMap = colorForMap;\r\n          return station;\r\n        }),\r\n      })),\r\n\r\n  pushSelectedByRegionStations: (regionId, currentUser, colorForMap) => dispatch => \r\n    api.get(`/station/region/${regionId}/${currentUser._id}`)\r\n      .then(response => response.data)\r\n      .then(stationsData => dispatch({\r\n        type: PUSH_SELECTED_BY_REGION_STATIONS,\r\n        stationsData: stationsData.map(station => {\r\n          station.colorForMap = colorForMap;\r\n          return station;\r\n        }),\r\n      })),\r\n  \r\n  updateStationDone: ({ stationId, currentUser, done }) => dispatch =>\r\n    api.put(`/station/${stationId}/${currentUser._id}/done`, { done })\r\n      .then(response => response.data)\r\n      .then(() => dispatch({\r\n        type: UPDATE_STATION_DONE,\r\n        stationsData: { \r\n          stationId,\r\n          done,\r\n        }\r\n      })),\r\n};\r\n\r\nexport default StationActions;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input, AutoComplete } from 'antd';\r\nimport styles from './ProductChoice.module.css';\r\n\r\nimport ProductActions from '../../resources/product/product.actions';\r\nimport ProductSelector from '../../resources/product/product.selector';\r\nimport UserSelector from '../../resources/user/user.selector';\r\nimport StationActions from '../../resources/station/station.actions';\r\n\r\nfunction ProductSearch({\r\n  selectedProductIds,\r\n  currentUser,\r\n  nextProductColor,\r\n  allProductsData,\r\n  incNextProductColor,\r\n  switchOnProductTableVisibility,\r\n  pushSelectedProductIds,\r\n  pushSelectedByProductStations,\r\n}) {\r\n  const [productsInSearch, setProductsInSearch] = useState([]);\r\n  const [allProducts, setAllProducts] = useState([]);\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const productsForSearch = allProductsData.map(product => {\r\n        return {\r\n          value: product._id,\r\n          label: product.name,\r\n        }\r\n      });\r\n      setAllProducts(productsForSearch);\r\n      setProductsInSearch(productsForSearch);\r\n    };\r\n    fetchProducts();\r\n  }, [allProductsData]);\r\n\r\n  const onSelect = productId => {\r\n    if (productId && !selectedProductIds.includes(productId)) {\r\n      pushSelectedByProductStations(productId, currentUser, nextProductColor);\r\n      switchOnProductTableVisibility();\r\n      pushSelectedProductIds(productId);\r\n      incNextProductColor(nextProductColor);\r\n    }\r\n  };\r\n\r\n  const onSearch = productName => {\r\n    setSelectedValue(productName);\r\n    const newProducts = allProducts.filter((product) => \r\n      product.label.toString().toLowerCase().indexOf(productName.toString().toLowerCase()) > -1\r\n    );\r\n    setProductsInSearch(newProducts);\r\n  };\r\n\r\n  return <div className={styles.search}>\r\n    <AutoComplete\r\n      dropdownMatchSelectWidth={252}\r\n      style={{\r\n        width: 300,\r\n      }}\r\n      options={productsInSearch}\r\n      onSelect={onSelect}\r\n      onSearch={onSearch}\r\n      value={selectedValue}\r\n    >\r\n      <Input.Search size=\"large\" placeholder=\"название продукта\" enterButton />\r\n    </AutoComplete>\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedProductIds: ProductSelector.getSelectedProductIds(state),\r\n  nextProductColor: ProductSelector.getNextProductColorIndex(state),\r\n  allProductsData: ProductSelector.getAllProducts(state),\r\n\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  switchOnProductTableVisibility: ProductActions.switchOnProductTableVisibility,\r\n  pushSelectedProductIds: ProductActions.pushSelectedProductId,\r\n  incNextProductColor: ProductActions.incProductColorIndex,\r\n\r\n  pushSelectedByProductStations: StationActions.pushSelectedByProductStations,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductSearch)","import { Switch } from \"antd\";\r\nimport { connect } from 'react-redux';\r\nimport UserSelector from '../../../resources/user/user.selector';\r\nimport StationActions from \"../../../resources/station/station.actions\";\r\n\r\nfunction DoneSwitch({ station, currentUser, updateStationDone }) {\r\n  function onChange(checked) {\r\n    updateStationDone({\r\n      stationId: station.stationId,\r\n      currentUser,\r\n      done: checked,\r\n    });\r\n  }\r\n\r\n  if (!currentUser) {\r\n    return <div></div>\r\n  }\r\n  if (station.done) {\r\n    return <Switch onChange={onChange} defaultChecked/>\r\n  }\r\n  return <Switch onChange={onChange} />\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateStationDone: StationActions.updateStationDone,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoneSwitch);","import StationDoneSwitch from \"./StationDoneSwitch\";\r\n\r\nconst tableColumns = [\r\n  {\r\n    title: 'Product Name',\r\n    dataIndex: 'productName',\r\n    sorter: (a, b) => {\r\n      if (a.productName > b.productName) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n  {\r\n    title: 'Station Name',\r\n    dataIndex: 'stationName',\r\n    sorter: (a, b) => {\r\n      if (a.stationName > b.stationName) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n  {\r\n    title: 'Need Count',\r\n    dataIndex: 'needCount',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.needCount - b.needCount,\r\n  },\r\n  {\r\n    title: 'Done',\r\n    render: station => <StationDoneSwitch station={station} />\r\n  },\r\n  {\r\n    title: 'region',\r\n    dataIndex: 'region',\r\n    sorter: (a, b) => {\r\n      if (a.region > b.region) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n];\r\n\r\nexport default tableColumns;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StationSelector from '../../resources/station/station.selector';\r\nimport { Table } from 'antd';\r\nimport tableColumns from '../../common/components/tableConfig/tableColumns';\r\n\r\nfunction ProductTable({ selectedByProductStations }) {\r\n  return <Table\r\n    columns={tableColumns}\r\n    dataSource={selectedByProductStations}\r\n    size=\"middle\"\r\n    pagination={{ pageSize: 7 }}\r\n  />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedByProductStations: StationSelector.getSelectedByProductStations(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProductTable);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProductSearch from './ProductSearch';\r\nimport ProductTable from './ProductTable';\r\nimport styles from './ProductChoice.module.css';\r\nimport ProductSelector from '../../resources/product/product.selector';\r\n\r\nfunction ProductChoice({ productTableVisability }) {\r\n  return <div>\r\n    <ProductSearch/>\r\n    { productTableVisability && \r\n      <ProductTable\r\n        className={styles.table}\r\n      /> }\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  productTableVisability: ProductSelector.getProductTableVisibility(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProductChoice);","export const SWITCH_ON_REGION_TABLE_VISIBILITY = 'SWITCH_ON_REGION_TABLE_VISIBILITY';\r\n\r\nexport const GET_ALL_REGIONS = 'GET_ALL_REGIONS';\r\n\r\nexport const PUSH_SELECTED_REGIONS_ID = 'PUSH_SELECTED_REGIONS_ID';\r\n\r\nexport const INC_REGION_COLOR_INDEX = 'INC_REGION_COLOR_INDEX';","import api from '../../common/base.api';\r\nimport {\r\n  SWITCH_ON_REGION_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_REGIONS_ID,\r\n  INC_REGION_COLOR_INDEX,\r\n  GET_ALL_REGIONS,\r\n} from './region.types';\r\n\r\nconst RegionActions = {\r\n  switchOnRegionTableVisibility: () => dispatch => dispatch({ type: SWITCH_ON_REGION_TABLE_VISIBILITY }),\r\n\r\n  getAllRegions: () => dispatch =>\r\n    api.get('/region').then(response => response.data)\r\n    .then(regions => dispatch({ type: GET_ALL_REGIONS, regions })),\r\n\r\n  pushSelectedRegionId: regionId => dispatch => dispatch({ type: PUSH_SELECTED_REGIONS_ID, regionId}),\r\n\r\n  incRegionColorIndex: predIndex => dispatch => dispatch({ type: INC_REGION_COLOR_INDEX, colorIndex: predIndex + 1 }),\r\n};\r\n\r\nexport default RegionActions;","const RegionSelector = {\r\n    getRegionTableVisibility: state => state.region.regionTableVisibility,\r\n  \r\n    getSelectedRegionIds: state => state.region.selectedRegionIds,\r\n\r\n    getNextRegionColorIndex: state => state.region.nextRegionColorIndex,\r\n\r\n    getAllRegions: state => state.region.allRegions,\r\n  };\r\n  \r\n  export default RegionSelector;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input, AutoComplete } from 'antd';\r\nimport styles from './RegionChoice.module.css';\r\n\r\nimport RegionActions from '../../resources/region/region.actions';\r\nimport RegionSelector from '../../resources/region/region.selector';\r\nimport UserSelector from '../../resources/user/user.selector';\r\nimport StationActions from '../../resources/station/station.actions';\r\n\r\nfunction RegionSearch({\r\n  selectedRegionIds,\r\n  currentUser,\r\n  nextRegionColor,\r\n  allRegionsData,\r\n  incRegionColorIndex,\r\n  switchOnRegionTableVisibility,\r\n  pushSelectedRegionIds,\r\n  pushSelectedByRegionStations,\r\n}) {\r\n  const [regionsInSearch, setRegionsInSearch] = useState([]);\r\n  const [allRegions, setAllRegions] = useState([]);\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchRegions = async () => {\r\n      const regionsForSearch = allRegionsData.map(region => {\r\n        return {\r\n          value: region._id,\r\n          label: region.name,\r\n        }\r\n      });\r\n      setAllRegions(regionsForSearch);\r\n      setRegionsInSearch(regionsForSearch);\r\n    }\r\n    fetchRegions();\r\n  }, [allRegionsData]);\r\n\r\n  const onSelect = regionId => {\r\n    if (regionId && !selectedRegionIds.includes(regionId)) {\r\n      pushSelectedByRegionStations(regionId, currentUser, nextRegionColor);\r\n      switchOnRegionTableVisibility();\r\n      pushSelectedRegionIds(regionId);\r\n      incRegionColorIndex(nextRegionColor);\r\n    }\r\n  };\r\n\r\n  const onSearch = regionName => {\r\n    setSelectedValue(regionName);\r\n    const newRegions = allRegions.filter((region) => \r\n      region.label.toString().toLowerCase().indexOf(regionName.toString().toLowerCase()) > -1\r\n    );\r\n    setRegionsInSearch(newRegions);\r\n  };\r\n\r\n  return <div className={styles.search}>\r\n    <AutoComplete\r\n      dropdownMatchSelectWidth={252}\r\n      style={{\r\n        width: 300,\r\n      }}\r\n      options={regionsInSearch}\r\n      onSelect={onSelect}\r\n      onSearch={onSearch}\r\n      value={selectedValue}\r\n    >\r\n      <Input.Search size=\"large\" placeholder=\"название региона\" enterButton />\r\n    </AutoComplete>\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRegionIds: RegionSelector.getSelectedRegionIds(state),\r\n  nextRegionColor: RegionSelector.getNextRegionColorIndex(state),\r\n  allRegionsData: RegionSelector.getAllRegions(state),\r\n\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  switchOnRegionTableVisibility: RegionActions.switchOnRegionTableVisibility,\r\n  pushSelectedRegionIds: RegionActions.pushSelectedRegionId,\r\n  incRegionColorIndex: RegionActions.incRegionColorIndex,\r\n\r\n  pushSelectedByRegionStations: StationActions.pushSelectedByRegionStations,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegionSearch)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StationSelector from '../../resources/station/station.selector';\r\nimport { Table } from 'antd';\r\nimport tableColumns from '../../common/components/tableConfig/tableColumns';\r\n\r\nfunction RegionTable({ selectedByRegionStations }) {\r\n  return <Table\r\n    columns={tableColumns}\r\n    dataSource={selectedByRegionStations}\r\n    size=\"middle\"\r\n    pagination={{ pageSize: 7 }}\r\n  />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedByRegionStations: StationSelector.getSelectedByRegionStations(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(RegionTable);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport RegionSearch from './RegionSearch';\r\nimport RegionTable from './RegionTable';\r\nimport styles from './RegionChoice.module.css';\r\nimport RegionSelector from '../../resources/region/region.selector';\r\n\r\nfunction RegionChoice({ regionTableVisability }) {\r\n  return <div>\r\n    <RegionSearch />\r\n    { regionTableVisability && \r\n      <RegionTable\r\n        className={styles.table}\r\n      /> }\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  regionTableVisability: RegionSelector.getRegionTableVisibility(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(RegionChoice);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Input, Button, Select, Switch } from 'antd';\r\nimport UserSelector from '../../resources/user/user.selector';\r\nimport StationActions from '../../resources/station/station.actions';\r\n\r\nfunction NewStation({ currentUser, createStation }){\r\n  const onFinish = async newStationData => {\r\n    newStationData.userId = currentUser._id;\r\n    createStation(newStationData);\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return <Form \r\n    labelCol={{ span: 7 }}\r\n    wrapperCol={{ span: 14 }}\r\n    layout=\"horizontal\"\r\n    onFinish={onFinish}\r\n    onFinishFailed={onFinishFailed}>\r\n\r\n    <Form.Item label=\"Продукт\" name=\"productName\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Станция\" name=\"stationName\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Координаты\" name=\"place\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Регион\" name=\"region\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Сколько нужно\" name=\"needCount\">\r\n      <Select>\r\n        <Select.Option value={25}>25</Select.Option>\r\n        <Select.Option value={50}>50</Select.Option>\r\n        <Select.Option value={150}>150</Select.Option>\r\n        <Select.Option value={350}>350</Select.Option>\r\n        <Select.Option value={1000}>1000</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Выполнено\" name=\"done\" valuePropName=\"checked\">\r\n      <Switch />\r\n    </Form.Item>\r\n\r\n    <Form.Item wrapperCol={{span: 14, offset: 7}}>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n      Добавить\r\n      </Button>\r\n    </Form.Item>\r\n\r\n  </Form>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  createStation: StationActions.createStation,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewStation);\r\n","export const CHANGE_ACTIVE_TAB = 'CHANGE_ACTIVE_TAB';","import {\r\n  CHANGE_ACTIVE_TAB,\r\n} from './tab.types';\r\n\r\nconst TabActions = {\r\n  changeActiveTab: newActiveTabKey => dispatch => dispatch({ type: CHANGE_ACTIVE_TAB, newActiveTabKey }),\r\n};\r\n\r\nexport default TabActions;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Tabs } from 'antd';\r\nimport styles from './MainMenu.module.css';\r\nimport {\r\n  PRODUCT_TAB,\r\n  REGION_TAB,\r\n  CREATE_STATION_TAB,\r\n} from '../common/constants/tabs';\r\nimport ProductChoice from './ProductChoice/ProductChoice';\r\nimport RegionChoice from './RegionChoice/RegionChoice';\r\nimport NewStation from './NewStation/NewStation';\r\nimport TabActions from '../resources/tab/tab.actions';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction MainMenu({ changeActiveTab }) {\r\n  const tabChange = (key) => {\r\n    changeActiveTab(key);\r\n  };\r\n\r\n  return <div>\r\n    <Tabs defaultActiveKey=\"1\" onChange={tabChange} className={styles.tabs}>\r\n      <TabPane tab=\"По продуктам\" key={PRODUCT_TAB}>\r\n        <ProductChoice />\r\n      </TabPane>\r\n      <TabPane tab=\"По регионам\" key={REGION_TAB}>\r\n        <RegionChoice />\r\n      </TabPane>\r\n      <TabPane tab=\"Добавить новую станцию\" key={CREATE_STATION_TAB}>\r\n        <NewStation />\r\n      </TabPane>\r\n    </Tabs>\r\n  </div>\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeActiveTab: TabActions.changeActiveTab,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(MainMenu);\r\n","import { connect } from 'react-redux';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport styles from './LogIn.module.css';\r\nimport UserActions from '../resources/user/user.actions';\r\nimport ProductActions from '../resources/product/product.actions';\r\nimport RegionActions from '../resources/region/region.actions';\r\n\r\nconst LogIn = ({ logIn, getAllProducts, getAllRegions }) => {\r\n  const onFinish = ({ username, password }) => {\r\n    logIn(username, password);\r\n    getAllProducts();\r\n    getAllRegions();\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      labelCol={{ span: 7 }}\r\n      wrapperCol={{ span: 14 }}\r\n      name=\"basic\"\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n      className={styles['login-form']}\r\n    >\r\n      <Form.Item\r\n        label=\"Имя пользователя\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Введите имя пользователя',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Пароль\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Введите пароль',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"remember\"\r\n        valuePropName=\"checked\"\r\n        wrapperCol={{\r\n          offset: 7,\r\n          span: 14,\r\n        }}\r\n      >\r\n        <Checkbox>Запомнить меня</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 7,\r\n          span: 14,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  logIn: UserActions.logIn,\r\n\r\n  getAllProducts: ProductActions.getAllProducts,\r\n\r\n  getAllRegions: RegionActions.getAllRegions,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LogIn);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './App.module.css';\r\nimport TinyMap from './TinyMap/TinyMap';\r\nimport Header from './Header/Header';\r\nimport 'antd/dist/antd.css';\r\nimport './common/common.css';\r\n\r\nimport {\r\n  Routes,\r\n  Route,\r\n} from \"react-router\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport UserSelector from './resources/user/user.selector';\r\nimport MainMenu from './MainMenu/MainMenu';\r\nimport LogIn from './LogIn/LogIn';\r\n\r\nfunction App({ currentUser }) {\r\n  return (\r\n    <div className={styles.app}>\r\n      <TinyMap />\r\n      <div className={styles.menu}>\r\n        <Header />\r\n        {currentUser ?\r\n          (<Router>\r\n            <Routes>\r\n              <Route path=\"/\" element={<MainMenu />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n            </Routes>\r\n          </Router>)\r\n          : (<Router>\r\n            <Routes>\r\n              <Route path=\"/login\" element={<LogIn />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n            </Routes>\r\n          </Router>)\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { LOG_IN, SET_CURRENT_USER } from \"./user.types\";\r\n\r\nconst initialState = {\r\n  currentUser: null,\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.currentUser,\r\n      };\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;","import {\r\n  SWITCH_ON_PRODUCT_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_PRODUCT_ID,\r\n  INC_PRODUCT_COLOR_INDEX,\r\n  GET_ALL_PRODUCTS,\r\n} from './product.types';\r\n\r\nconst initialState = {\r\n  productTableVisibility: false,\r\n  selectedProductIds: [],\r\n  nextProductColorIndex: 0,\r\n  allProducts: [],\r\n}\r\n\r\nconst productReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_PRODUCTS: \r\n      return {\r\n        ...state,\r\n        allProducts: action.products,\r\n      }\r\n    case SWITCH_ON_PRODUCT_TABLE_VISIBILITY: \r\n      return {\r\n        ...state,\r\n        productTableVisibility: true,\r\n      };\r\n    \r\n    case PUSH_SELECTED_PRODUCT_ID: \r\n      return {\r\n        ...state,\r\n        selectedProductIds: [\r\n          ...state.selectedProductIds,\r\n          action.productId,\r\n        ]\r\n      };\r\n    \r\n    case INC_PRODUCT_COLOR_INDEX:\r\n      return {\r\n        ...state,\r\n        nextProductColorIndex: action.colorIndex,\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productReducer;","import {\r\n  SWITCH_ON_REGION_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_REGIONS_ID,\r\n  INC_REGION_COLOR_INDEX,\r\n  GET_ALL_REGIONS,\r\n} from './region.types';\r\n\r\nconst initialState = {\r\n  regionTableVisibility: false,\r\n  selectedRegionIds: [],\r\n  nextRegionColorIndex: 0,\r\n  allRegions: [],\r\n}\r\n\r\nconst regionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_REGIONS: \r\n      return {\r\n        ...state,\r\n        allRegions: action.regions,\r\n      }\r\n    case SWITCH_ON_REGION_TABLE_VISIBILITY: \r\n      return {\r\n        ...state,\r\n        regionTableVisibility: true,\r\n      };\r\n\r\n    case PUSH_SELECTED_REGIONS_ID: \r\n      return {\r\n        ...state,\r\n        selectedRegionIds: [\r\n          ...state.selectedRegionIds,\r\n          action.regionId,\r\n        ]\r\n      };\r\n\r\n    case INC_REGION_COLOR_INDEX:\r\n      return {\r\n        ...state,\r\n        nextRegionColorIndex: action.colorIndex,\r\n      };\r\n\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default regionReducer;","import {\r\n  CREATE_STATION,\r\n  PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n  PUSH_SELECTED_BY_REGION_STATIONS,\r\n  UPDATE_STATION_DONE,\r\n} from './station.types';\r\n\r\nconst initialState = {\r\n  selectedByProductStations: [],\r\n  selectedByRegionStations: [],\r\n};\r\n\r\nconst StationReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case PUSH_SELECTED_BY_PRODUCT_STATIONS: \r\n      return {\r\n        ...state,\r\n        selectedByProductStations: [\r\n          ...state.selectedByProductStations,\r\n          ...action.stationsData,\r\n        ],\r\n      };\r\n\r\n    case PUSH_SELECTED_BY_REGION_STATIONS:\r\n      return {\r\n        ...state,\r\n        selectedByRegionStations: [\r\n          ...state.selectedByRegionStations,\r\n          ...action.stationsData,\r\n        ]\r\n      }\r\n\r\n    case UPDATE_STATION_DONE:\r\n      return updateStationDone(state, action);\r\n    \r\n    case CREATE_STATION: \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default StationReducer;\r\n\r\nfunction updateStationDone(state, action) {\r\n  const newProdStations = [];\r\n  for (const station of state.selectedByProductStations) {\r\n    if (station.stationId === action.stationsData.stationId) {\r\n      newProdStations.push({\r\n        ...station,\r\n        done: action.stationsData.done,\r\n      });\r\n    } else {\r\n      newProdStations.push(station);\r\n    }\r\n  }\r\n\r\n  const newRegStations = [];\r\n  for (const station of state.selectedByRegionStations) {\r\n    if (station.stationId === action.stationsData.stationId) {\r\n      newRegStations.push({\r\n        ...station,\r\n        done: action.stationsData.done,\r\n      });\r\n    } else {\r\n      newRegStations.push(station);\r\n    }\r\n  }\r\n  return {\r\n    ...state,\r\n    selectedByProductStations: newProdStations,\r\n    selectedByRegionStations: newRegStations,\r\n  }\r\n}","import {\r\n  CHANGE_ACTIVE_TAB,\r\n} from './tab.types';\r\nimport {\r\n  PRODUCT_TAB,\r\n} from '../../common/constants/tabs';\r\n\r\nconst initialState = {\r\n  activeTab: PRODUCT_TAB,\r\n};\r\n\r\nconst tabReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case CHANGE_ACTIVE_TAB:\r\n      return {\r\n        ...state,\r\n        activeTab: action.newActiveTabKey,\r\n      };\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default tabReducer;\r\n","import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport userReducer from './user/user.reducer';\r\nimport productReducer from './product/product.reducer';\r\nimport regionReducer from './region/region.reducer';\r\nimport stationReducer from './station/station.reducer';\r\nimport tabReducer from './tab/tab.reducer';\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  product: productReducer,\r\n  region: regionReducer,\r\n  station: stationReducer,\r\n  tab: tabReducer,\r\n});\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './resources/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    <style>{'#root {width: 100%} '}</style>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__mWrfg\",\"logo\":\"Header_logo__3COiS\",\"user\":\"Header_user__1SWzi\",\"user-button\":\"Header_user-button__25kzA\",\"avatar\":\"Header_avatar__2EqOL\"};"],"sourceRoot":""}