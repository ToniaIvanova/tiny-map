{"version":3,"sources":["MainMenu/ProductChoice/ProductChoice.module.css","MainMenu/RegionChoice/RegionChoice.module.css","App.module.css","TinyMap/TinyMap.module.css","MainMenu/MainMenu.module.css","LogIn/LogIn.module.css","common/constants/tabs.js","common/constants/colors.js","common/getColor.js","TinyMap/Marks.js","resources/station/station.selector.js","resources/product/product.selector.js","resources/region/region.selector.js","resources/tab/tab.selector.js","TinyMap/TinyMap.js","resources/user/user.types.js","common/base.api.js","common/constants/baseURL.js","resources/user/user.actions.js","resources/user/user.selector.js","Header/User.js","Header/Logo.js","Header/Header.js","resources/product/product.types.js","resources/product/product.actions.js","resources/station/station.types.js","resources/station/station.actions.js","MainMenu/ProductChoice/ProductSearch.js","common/components/tableConfig/StationDoneSwitch.js","common/components/tableConfig/tableColumns.js","MainMenu/ProductChoice/ProductTable.js","MainMenu/ProductChoice/ProductChoice.js","resources/region/region.types.js","resources/region/region.actions.js","MainMenu/RegionChoice/RegionSearch.js","MainMenu/RegionChoice/RegionTable.js","MainMenu/RegionChoice/RegionChoice.js","MainMenu/NewStation/NewStation.js","resources/tab/tab.types.js","resources/tab/tab.actions.js","MainMenu/MainMenu.js","LogIn/LogIn.js","App.js","resources/user/user.reducer.js","resources/product/product.reducer.js","resources/region/region.reducer.js","resources/station/station.reducer.js","resources/tab/tab.reducer.js","resources/store.js","index.js","Header/Header.module.css"],"names":["module","exports","PRODUCT_TAB","REGION_TAB","colors","getColor","arr","value","item","regionId","color","productId","Mark","selectedStations","selectedIds","tab","map","station","idForColor","done","geometry","place","modules","properties","balloonContentHeader","stationName","balloonContent","productName","needCount","balloonContentFooter","region","options","preset","iconColor","key","StationSelector","getSelectedByProductStations","state","selectedByProductStations","getSelectedByRegionStations","selectedByRegionStations","ProductSelector","getProductTableVisibility","product","productTableVisibility","getSelectedProductIds","selectedProductIds","getNextProductColorIndex","nextProductColorIndex","getAllProducts","allProducts","RegionSelector","getRegionTableVisibility","regionTableVisibility","getSelectedRegionIds","selectedRegionIds","getNextRegionColorIndex","nextRegionColorIndex","getAllRegions","allRegions","TabSelector","getActiveTab","activeTab","connect","className","styles","defaultState","center","zoom","Marks","SET_CURRENT_USER","LOG_IN","api","axios","create","baseURL","timeout","headers","UserActions","setCurrentUser","id","dispatch","get","then","response","data","currentUser","type","logIn","username","password","post","UserSelector","getCurrentUser","user","mapDispatchToProps","size","onClick","avatar","name","Logo","logo","Header","header","SWITCH_ON_PRODUCT_TABLE_VISIBILITY","GET_ALL_PRODUCTS","PUSH_SELECTED_PRODUCT_ID","DELETE_SELECTED_PRODUCT_ID","ProductActions","switchOnProductTableVisibility","products","pushSelectedProductId","deleteSelectedProductId","CREATE_STATION","PUSH_SELECTED_BY_PRODUCT_STATIONS","PUSH_SELECTED_BY_REGION_STATIONS","DELETE_SELECTED_BY_PRODUCT_STATIONS","DELETE_SELECTED_BY_REGION_STATIONS","UPDATE_STATION_DONE","StationActions","createStation","newStationData","a","pushSelectedByProductStations","colorForMap","stationsData","pushSelectedByRegionStations","updateStationDone","stationId","stationData","deleteSelectedByProductStations","deleteSelectedByRegionStations","pushSelectedProductIds","nextProductColor","allProductsData","useState","productsInSearch","setProductsInSearch","useEffect","productsForSearch","_id","label","search","mode","showArrow","style","width","placeholder","tagRender","props","closable","onClose","onMouseDown","event","preventDefault","stopPropagation","marginRight","onSelect","includes","onDeselect","productForDelete","find","onChange","checked","defaultChecked","tableColumns","title","dataIndex","sorter","b","defaultSortOrder","render","StationDoneSwitch","filters","text","onFilter","columns","dataSource","pagination","pageSize","productTableVisability","table","SWITCH_ON_REGION_TABLE_VISIBILITY","GET_ALL_REGIONS","PUSH_SELECTED_REGION_ID","DELETE_SELECTED_REGION_ID","RegionActions","switchOnRegionTableVisibility","regions","pushSelectedRegionId","deleteSelectedRegionId","nextRegionColor","allRegionsData","regionsInSearch","setRegionsInSearch","regionsForSearch","regionForDelete","regionTableVisability","onFinish","userId","labelCol","span","wrapperCol","layout","onFinishFailed","errorInfo","console","log","Item","Option","valuePropName","offset","htmlType","CHANGE_ACTIVE_TAB","TabActions","changeActiveTab","newActiveTabKey","TabPane","Tabs","defaultActiveKey","tabs","autoComplete","rules","required","message","Password","app","menu","path","element","to","initialState","userReducer","action","freeColors","productReducer","pop","newSelectedProductIds","newFreeColors","indexForDelete","findIndex","productData","splice","push","regionReducer","newSelectedRegionIds","regionData","StationReducer","newStations","filter","regionName","newProdStations","newRegStations","tabReducer","reducers","combineReducers","stationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fa0d3706.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"ProductChoice_table__3b3pK\",\"search\":\"ProductChoice_search__2Y-QW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"RegionChoice_table__3X4Bg\",\"search\":\"RegionChoice_search__2uZdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__pQWe-\",\"menu\":\"App_menu__2HRcq\",\"username\":\"App_username__3EYJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"TinyMap_map__2-PwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"MainMenu_tabs__36HWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form\":\"LogIn_login-form__2cejJ\"};","export const PRODUCT_TAB = 'PRODUCT_TAB';\r\nexport const REGION_TAB = 'REGION_TAB';\r\nexport const CREATE_STATION_TAB = 'CREATE_STATION_TAB';","export const colors = [\r\n  '#942010',\r\n  '#0b0038',\r\n  '#ffb21f',\r\n  '#ffbcb5',\r\n  '#6ac954',\r\n  '#dc143c',\r\n  '#3caa3c',\r\n  '#156fc1',\r\n  '#eaec35',\r\n];\r\n\r\nexport const gray = '#c0c0c0';","import { colors } from './constants/colors';\r\n\r\nexport const getColor = (arr, value) => {\r\n  for (const item of arr) {\r\n    if(item.regionId === value) {\r\n      return item.color;\r\n    }\r\n    if(item.productId === value) {\r\n      return item.color;\r\n    }\r\n  }\r\n  return colors[0];\r\n}","import React from \"react\";\r\nimport { Placemark } from 'react-yandex-maps';\r\nimport { gray } from '../common/constants/colors';\r\nimport { PRODUCT_TAB } from \"../common/constants/tabs\";\r\nimport { getColor } from '../common/getColor';\r\n\r\nfunction Mark({ selectedStations, selectedIds, tab }) {\r\n  return <div>\r\n    { selectedStations.map(station => {\r\n      const idForColor = tab === PRODUCT_TAB ? station.productId : station.regionId;\r\n      const color = station.done ? gray : getColor(selectedIds, idForColor);\r\n\r\n      return <Placemark\r\n        key={station.key}\r\n        geometry={station.place}\r\n        modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n        properties={{\r\n          balloonContentHeader: `${station.stationName}`,\r\n          balloonContent: `Продукт: ${station.productName} --- ${station.done ? 'Выполнено!' : `Надо: ${station.needCount}`}`,\r\n          balloonContentFooter: station.region,\r\n        }}\r\n        options={{\r\n          preset: 'islands#circleIcon',\r\n          iconColor: color,\r\n        }}\r\n      /> })}\r\n  </div>\r\n}\r\n\r\nexport default Mark;\r\n","const StationSelector = {\r\n  getSelectedByProductStations: state => state.station.selectedByProductStations,\r\n  getSelectedByRegionStations: state => state.station.selectedByRegionStations,\r\n};\r\n\r\nexport default StationSelector;","const ProductSelector = {\r\n  getProductTableVisibility: state => state.product.productTableVisibility,\r\n\r\n  getSelectedProductIds: state => state.product.selectedProductIds,\r\n\r\n  getNextProductColorIndex: state => state.product.nextProductColorIndex,\r\n\r\n  getAllProducts: state => state.product.allProducts,\r\n};\r\n\r\nexport default ProductSelector;","const RegionSelector = {\r\n    getRegionTableVisibility: state => state.region.regionTableVisibility,\r\n  \r\n    getSelectedRegionIds: state => state.region.selectedRegionIds,\r\n\r\n    getNextRegionColorIndex: state => state.region.nextRegionColorIndex,\r\n\r\n    getAllRegions: state => state.region.allRegions,\r\n  };\r\n  \r\n  export default RegionSelector;","const TabSelector = {\r\n  getActiveTab: state => state.tab.activeTab,\r\n};\r\n\r\nexport default TabSelector;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { YMaps, Map } from 'react-yandex-maps';\r\nimport styles from './TinyMap.module.css';\r\n\r\nimport { PRODUCT_TAB, REGION_TAB } from '../common/constants/tabs';\r\nimport Marks from './Marks';\r\n\r\nimport StationSelector from '../resources/station/station.selector';\r\nimport ProductSelector from '../resources/product/product.selector';\r\nimport RegionSelector from '../resources/region/region.selector';\r\nimport TabSelector from '../resources/tab/tab.selector';\r\n\r\nfunction TinyMap({\r\n  selectedProductIds,\r\n  selectedByProductStations,\r\n\r\n  selectedRegionIds,\r\n  selectedByRegionStations,\r\n\r\n  activeTab\r\n}) {\r\n  return <YMaps>\r\n    <Map className={styles.map} defaultState={{ center:[19.441468, 17.496825], zoom: 2 }}>\r\n      { activeTab === PRODUCT_TAB && <Marks\r\n        selectedStations={selectedByProductStations}\r\n        selectedIds={selectedProductIds}\r\n        tab={PRODUCT_TAB}\r\n      />}\r\n      { activeTab === REGION_TAB && <Marks\r\n        selectedStations={selectedByRegionStations}\r\n        selectedIds={selectedRegionIds}\r\n        tab={REGION_TAB}\r\n      />}\r\n    </Map>\r\n  </YMaps>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedProductIds: ProductSelector.getSelectedProductIds(state),\r\n  selectedByProductStations: StationSelector.getSelectedByProductStations(state),\r\n  \r\n  selectedRegionIds: RegionSelector.getSelectedRegionIds(state),\r\n  selectedByRegionStations: StationSelector.getSelectedByRegionStations(state),\r\n\r\n  activeTab: TabSelector.getActiveTab(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(TinyMap);","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n\r\nexport const LOG_IN = 'LOG_IN';","import axios from 'axios';\r\nimport { BASE_URL } from './constants/baseURL';\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 2000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\nexport default api;","export const BASE_URL = 'https://stormy-brook-68283.herokuapp.com'; \r\n// export const BASE_URL = 'http://localhost:3001';","import { SET_CURRENT_USER, LOG_IN } from './user.types';\r\nimport api from '../../common/base.api';\r\n\r\nconst UserActions = {\r\n  setCurrentUser: id => dispatch => \r\n    api.get(`/user/${id}`)\r\n      .then(response => response.data)\r\n      .then(currentUser => dispatch({ type: SET_CURRENT_USER, currentUser })),\r\n\r\n  logIn: (username, password) => dispatch =>\r\n    api.post(`/user/login`, { username, password })\r\n      .then(response => response.data)\r\n      .then(currentUser => dispatch({ type: LOG_IN, currentUser })),\r\n};\r\n\r\nexport default UserActions;","const UserSelector = {\r\n  getCurrentUser: state => state.user.currentUser,\r\n};\r\n\r\nexport default UserSelector;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Avatar, Button } from 'antd';\r\nimport UserActions from '../resources/user/user.actions';\r\nimport UserSelector from '../resources/user/user.selector';\r\nimport styles from './Header.module.css';\r\n\r\nfunction User({ currentUser, setCurrentUser }) {\r\n\r\n  const changeUser = () => {\r\n    // setCurrentUser('60e06fe6ad2cc121d81eb19a'); // Тонечка\r\n  };\r\n\r\n  return <div className={styles.user}>\r\n    <Button\r\n      size=\"small\"\r\n      onClick={changeUser}\r\n      className={styles['user-button']}>\r\n      Сменить власть\r\n    </Button>\r\n    <Avatar size={50} className={styles.avatar}>\r\n        {currentUser ? currentUser.name : 'Гость'}\r\n    </Avatar>\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setCurrentUser: UserActions.setCurrentUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User)","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nexport default function Logo() {\r\n  return <h2 className={styles.logo}> Tiny-Map </h2>\r\n}\r\n","import React from 'react';\r\nimport User from './User';\r\nimport Logo from './Logo';\r\nimport styles from './Header.module.css';\r\n\r\nexport default function Header() {\r\n  return <div className={styles.header}>\r\n    <Logo />\r\n    <User />\r\n  </div>\r\n};\r\n","export const SWITCH_ON_PRODUCT_TABLE_VISIBILITY = 'SWITCH_ON_PRODUCT_TABLE_VISIBILITY';\r\n\r\nexport const GET_ALL_PRODUCTS = 'GET_ALL_PRODUCTS';\r\n\r\nexport const PUSH_SELECTED_PRODUCT_ID = 'PUSH_SELECTED_PRODUCT_ID';\r\nexport const DELETE_SELECTED_PRODUCT_ID = 'DELETE_SELECTED_PRODUCT_ID';","import api from '../../common/base.api';\r\nimport {\r\n  SWITCH_ON_PRODUCT_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_PRODUCT_ID,\r\n  DELETE_SELECTED_PRODUCT_ID,\r\n  GET_ALL_PRODUCTS,\r\n} from './product.types';\r\n\r\nconst ProductActions = {\r\n  switchOnProductTableVisibility: () => dispatch => dispatch({ type: SWITCH_ON_PRODUCT_TABLE_VISIBILITY }),\r\n\r\n  getAllProducts: () => dispatch =>\r\n    api.get('/product').then(response => response.data)\r\n    .then(products => dispatch({ type: GET_ALL_PRODUCTS, products })),\r\n\r\n  pushSelectedProductId: productId => dispatch => dispatch({\r\n    type: PUSH_SELECTED_PRODUCT_ID,\r\n    productId,\r\n  }),\r\n\r\n  deleteSelectedProductId: productId => dispatch => dispatch({\r\n    type: DELETE_SELECTED_PRODUCT_ID,\r\n    productId,\r\n  })\r\n};\r\n\r\nexport default ProductActions;","export const CREATE_STATION = 'CREATE_STATION';\r\n\r\nexport const PUSH_SELECTED_BY_PRODUCT_STATIONS = 'PUSH_SELECTED_BY_PRODUCT_STATIONS';\r\nexport const PUSH_SELECTED_BY_REGION_STATIONS = 'PUSH_SELECTED_BY_REGION_STATIONS';\r\n\r\nexport const DELETE_SELECTED_BY_PRODUCT_STATIONS = 'DELETE_SELECTED_BY_PRODUCT_STATIONS';\r\nexport const DELETE_SELECTED_BY_REGION_STATIONS = 'DELETE_SELECTED_BY_REGION_STATIONS';\r\n\r\nexport const UPDATE_STATION_DONE = 'UPDATE_STATION_DONE';","import {\r\n  CREATE_STATION,\r\n  PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n  PUSH_SELECTED_BY_REGION_STATIONS,\r\n  DELETE_SELECTED_BY_PRODUCT_STATIONS,\r\n  DELETE_SELECTED_BY_REGION_STATIONS,\r\n  UPDATE_STATION_DONE,\r\n} from './station.types';\r\nimport api from '../../common/base.api';\r\n\r\nconst StationActions = {\r\n  createStation: newStationData => async dispatch => {\r\n    await api.post('/station', newStationData);\r\n    return dispatch({ type: CREATE_STATION });\r\n  },\r\n  \r\n  pushSelectedByProductStations: (productId, currentUser, colorForMap) => async dispatch => {\r\n    const response = await api.post(`/station/product/${productId}`, currentUser);\r\n    const stationsData = response.data;\r\n    return dispatch({\r\n      type: PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n      stationsData: stationsData.map(station => {\r\n        station.colorForMap = colorForMap;\r\n        return station;\r\n      }),\r\n    });\r\n  },\r\n\r\n  pushSelectedByRegionStations: (regionId, currentUser) => async dispatch => {\r\n    const response = await api.post(`/station/region/${regionId}`, currentUser);\r\n    const stationsData = response.data;\r\n    return dispatch({\r\n      type: PUSH_SELECTED_BY_REGION_STATIONS,\r\n      stationsData,\r\n    });\r\n  },\r\n\r\n  updateStationDone: ({ stationId, currentUser, done }) => async dispatch => {\r\n    const response = await api.post(`/station/${stationId}/done`, { ...currentUser, done });\r\n    const stationData = response.data;\r\n    return dispatch({\r\n      type: UPDATE_STATION_DONE,\r\n      stationData: {\r\n        ...stationData,\r\n        done,\r\n      }\r\n    });\r\n  },\r\n\r\n  deleteSelectedByProductStations: product => dispatch => dispatch({\r\n    type: DELETE_SELECTED_BY_PRODUCT_STATIONS,\r\n    product,\r\n  }),\r\n\r\n  deleteSelectedByRegionStations: region => dispatch => dispatch({\r\n    type: DELETE_SELECTED_BY_REGION_STATIONS,\r\n    region,\r\n  }),\r\n};\r\n\r\nexport default StationActions;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Select, Tag } from 'antd';\r\nimport styles from './ProductChoice.module.css';\r\n\r\nimport { getColor } from '../../common/getColor';\r\n\r\nimport ProductActions from '../../resources/product/product.actions';\r\nimport ProductSelector from '../../resources/product/product.selector';\r\nimport UserSelector from '../../resources/user/user.selector';\r\nimport StationActions from '../../resources/station/station.actions';\r\n\r\nfunction ProductSearch({\r\n  selectedProductIds,\r\n  nextProductColor,\r\n  allProductsData,\r\n  currentUser,\r\n\r\n  switchOnProductTableVisibility,\r\n  pushSelectedProductIds,\r\n  deleteSelectedProductId,\r\n  pushSelectedByProductStations,\r\n  deleteSelectedByProductStations,\r\n}) {\r\n  const [productsInSearch, setProductsInSearch] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const productsForSearch = allProductsData.map(product => ({\r\n      value: product._id,\r\n      label: product.name,\r\n    }));\r\n    setProductsInSearch(productsForSearch);\r\n  }, [allProductsData]);\r\n\r\n  const onSelect = productId => {\r\n    if (productId && !selectedProductIds.includes(productId)) {\r\n      pushSelectedByProductStations(productId, currentUser, nextProductColor);\r\n      switchOnProductTableVisibility();\r\n      pushSelectedProductIds(productId);\r\n    }\r\n  };\r\n  \r\n  const onDeselect = productId => {\r\n    deleteSelectedProductId(productId);\r\n    const productForDelete = allProductsData.find(product => product._id === productId);\r\n    deleteSelectedByProductStations(productForDelete);\r\n  }\r\n\r\n  const tagRender = (props) => {\r\n    const { label, closable, onClose, value } = props;\r\n    const onPreventMouseDown = event => {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    };\r\n    const color = getColor(selectedProductIds, value);\r\n    return (\r\n      <Tag\r\n        color={color}\r\n        onMouseDown={onPreventMouseDown}\r\n        closable={closable}\r\n        onClose={onClose}\r\n        style={{ marginRight: 3 }}\r\n      >\r\n        {label}\r\n      </Tag>\r\n    );\r\n  }\r\n\r\n  return <div className={styles.search}>\r\n    <Select\r\n      mode=\"multiple\"\r\n      size=\"large\"\r\n      showArrow\r\n      style={{ width: '100%' }}\r\n      placeholder=\"выберете продукт\"\r\n      tagRender={tagRender}\r\n      options={productsInSearch}\r\n      onSelect={onSelect}\r\n      onDeselect={onDeselect}\r\n    />\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedProductIds: ProductSelector.getSelectedProductIds(state),\r\n  nextProductColor: ProductSelector.getNextProductColorIndex(state),\r\n  allProductsData: ProductSelector.getAllProducts(state),\r\n\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  switchOnProductTableVisibility: ProductActions.switchOnProductTableVisibility,\r\n  pushSelectedProductIds: ProductActions.pushSelectedProductId,\r\n  deleteSelectedProductId: ProductActions.deleteSelectedProductId,\r\n\r\n  pushSelectedByProductStations: StationActions.pushSelectedByProductStations,\r\n  deleteSelectedByProductStations: StationActions.deleteSelectedByProductStations,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductSearch)","import { Switch } from \"antd\";\r\nimport { connect } from 'react-redux';\r\nimport UserSelector from '../../../resources/user/user.selector';\r\nimport StationActions from \"../../../resources/station/station.actions\";\r\n\r\nfunction DoneSwitch({ station, currentUser, updateStationDone }) {\r\n  function onChange(checked) {\r\n    updateStationDone({\r\n      stationId: station.stationId,\r\n      currentUser,\r\n      done: checked,\r\n    });\r\n  }\r\n\r\n  if (!currentUser) {\r\n    return <div></div>\r\n  }\r\n  if (station.done) {\r\n    return <Switch onChange={onChange} defaultChecked/>\r\n  }\r\n  return <Switch onChange={onChange} />\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateStationDone: StationActions.updateStationDone,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoneSwitch);","import StationDoneSwitch from \"./StationDoneSwitch\";\r\n\r\nconst tableColumns = [\r\n  {\r\n    title: 'Продукт',\r\n    dataIndex: 'productName',\r\n    sorter: (a, b) => {\r\n      if (a.productName > b.productName) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n  {\r\n    title: 'Станция',\r\n    dataIndex: 'stationName',\r\n    sorter: (a, b) => {\r\n      if (a.stationName > b.stationName) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n  {\r\n    title: 'Нужно',\r\n    dataIndex: 'needCount',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.needCount - b.needCount,\r\n  },\r\n  {\r\n    title: 'Выполнено',\r\n    render: station => <StationDoneSwitch station={station} />,\r\n    filters: [\r\n      {\r\n        text: 'Done',\r\n        value: true,\r\n      },\r\n      {\r\n        text: 'Not Done',\r\n        value: false,\r\n      },\r\n    ],\r\n    onFilter: (value, station) => station.done === value,\r\n  },\r\n  {\r\n    title: 'Регион',\r\n    dataIndex: 'regionName',\r\n    sorter: (a, b) => {\r\n      if (a.region > b.region) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n];\r\n\r\nexport default tableColumns;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StationSelector from '../../resources/station/station.selector';\r\nimport { Table } from 'antd';\r\nimport tableColumns from '../../common/components/tableConfig/tableColumns';\r\n\r\nfunction ProductTable({ selectedByProductStations }) {\r\n  return <Table\r\n    columns={tableColumns}\r\n    dataSource={selectedByProductStations}\r\n    size=\"middle\"\r\n    pagination={{ pageSize: 7 }}\r\n  />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedByProductStations: StationSelector.getSelectedByProductStations(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProductTable);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProductSearch from './ProductSearch';\r\nimport ProductTable from './ProductTable';\r\nimport styles from './ProductChoice.module.css';\r\nimport ProductSelector from '../../resources/product/product.selector';\r\n\r\nfunction ProductChoice({ productTableVisability }) {\r\n  return <div>\r\n    <ProductSearch/>\r\n    { productTableVisability && \r\n      <ProductTable\r\n        className={styles.table}\r\n      /> }\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  productTableVisability: ProductSelector.getProductTableVisibility(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProductChoice);","export const SWITCH_ON_REGION_TABLE_VISIBILITY = 'SWITCH_ON_REGION_TABLE_VISIBILITY';\r\n\r\nexport const GET_ALL_REGIONS = 'GET_ALL_REGIONS';\r\n\r\nexport const PUSH_SELECTED_REGION_ID = 'PUSH_SELECTED_REGION_ID';\r\nexport const DELETE_SELECTED_REGION_ID = 'DELETE_SELECTED_REGION_ID';","import api from '../../common/base.api';\r\nimport {\r\n  SWITCH_ON_REGION_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_REGION_ID,\r\n  DELETE_SELECTED_REGION_ID,\r\n  GET_ALL_REGIONS,\r\n} from './region.types';\r\n\r\nconst RegionActions = {\r\n  switchOnRegionTableVisibility: () => dispatch => dispatch({ type: SWITCH_ON_REGION_TABLE_VISIBILITY }),\r\n\r\n  getAllRegions: () => dispatch =>\r\n    api.get('/region').then(response => response.data)\r\n    .then(regions => dispatch({ type: GET_ALL_REGIONS, regions })),\r\n\r\n  pushSelectedRegionId: regionId => dispatch => dispatch({\r\n    type: PUSH_SELECTED_REGION_ID,\r\n    regionId,\r\n  }),\r\n\r\n  deleteSelectedRegionId: regionId => dispatch => dispatch({\r\n    type: DELETE_SELECTED_REGION_ID,\r\n    regionId,\r\n  })\r\n};\r\n\r\nexport default RegionActions;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Select, Tag } from 'antd';\r\nimport styles from './RegionChoice.module.css';\r\n\r\nimport { getColor } from '../../common/getColor';\r\n\r\nimport RegionActions from '../../resources/region/region.actions';\r\nimport RegionSelector from '../../resources/region/region.selector';\r\nimport UserSelector from '../../resources/user/user.selector';\r\nimport StationActions from '../../resources/station/station.actions';\r\n\r\nfunction RegionSearch({\r\n  selectedRegionIds,\r\n  nextRegionColor,\r\n  allRegionsData,\r\n  currentUser,\r\n\r\n  switchOnRegionTableVisibility,\r\n  pushSelectedRegionId,\r\n  deleteSelectedRegionId,\r\n  pushSelectedByRegionStations,\r\n  deleteSelectedByRegionStations,\r\n}) {\r\n  const [regionsInSearch, setRegionsInSearch] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const regionsForSearch = allRegionsData.map(region => ({\r\n      value: region._id,\r\n      label: region.name,\r\n    }));\r\n    setRegionsInSearch(regionsForSearch);\r\n  }, [allRegionsData]);\r\n\r\n  const onSelect = regionId => {\r\n    if (regionId && !selectedRegionIds.includes(regionId)) {\r\n      pushSelectedRegionId(regionId);\r\n      pushSelectedByRegionStations(regionId, currentUser);\r\n      switchOnRegionTableVisibility();\r\n    }\r\n  };\r\n  \r\n  const onDeselect = regionId => {\r\n    deleteSelectedRegionId(regionId);\r\n    const regionForDelete = allRegionsData.find(region => region._id === regionId);\r\n    deleteSelectedByRegionStations(regionForDelete);\r\n  }\r\n\r\n  const tagRender = (props) => {\r\n    const { label, closable, onClose, value } = props;\r\n    const onPreventMouseDown = event => {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    };\r\n    const color = getColor(selectedRegionIds, value);\r\n    return (\r\n      <Tag\r\n        color={color}\r\n        onMouseDown={onPreventMouseDown}\r\n        closable={closable}\r\n        onClose={onClose}\r\n        style={{ marginRight: 3 }}\r\n      >\r\n        {label}\r\n      </Tag>\r\n    );\r\n  }\r\n\r\n  return <div className={styles.search}>\r\n    <Select\r\n      mode=\"multiple\"\r\n      size=\"large\"\r\n      showArrow\r\n      style={{ width: '100%' }}\r\n      placeholder=\"выберете регион\"\r\n      tagRender={tagRender}\r\n      options={regionsInSearch}\r\n      onSelect={onSelect}\r\n      onDeselect={onDeselect}\r\n    />\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRegionIds: RegionSelector.getSelectedRegionIds(state),\r\n  nextRegionColor: RegionSelector.getNextRegionColorIndex(state),\r\n  allRegionsData: RegionSelector.getAllRegions(state),\r\n\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  switchOnRegionTableVisibility: RegionActions.switchOnRegionTableVisibility,\r\n  pushSelectedRegionId: RegionActions.pushSelectedRegionId,\r\n  deleteSelectedRegionId: RegionActions.deleteSelectedRegionId,\r\n\r\n  pushSelectedByRegionStations: StationActions.pushSelectedByRegionStations,\r\n  deleteSelectedByRegionStations: StationActions.deleteSelectedByRegionStations,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegionSearch)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StationSelector from '../../resources/station/station.selector';\r\nimport { Table } from 'antd';\r\nimport tableColumns from '../../common/components/tableConfig/tableColumns';\r\n\r\nfunction RegionTable({ selectedByRegionStations }) {\r\n  return <Table\r\n    columns={tableColumns}\r\n    dataSource={selectedByRegionStations}\r\n    size=\"middle\"\r\n    pagination={{ pageSize: 7 }}\r\n  />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedByRegionStations: StationSelector.getSelectedByRegionStations(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(RegionTable);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport RegionSearch from './RegionSearch';\r\nimport RegionTable from './RegionTable';\r\nimport styles from './RegionChoice.module.css';\r\nimport RegionSelector from '../../resources/region/region.selector';\r\n\r\nfunction RegionChoice({ regionTableVisability }) {\r\n  return <div>\r\n    <RegionSearch />\r\n    { regionTableVisability && \r\n      <RegionTable\r\n        className={styles.table}\r\n      /> }\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  regionTableVisability: RegionSelector.getRegionTableVisibility(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(RegionChoice);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Input, Button, Select, Switch } from 'antd';\r\nimport UserSelector from '../../resources/user/user.selector';\r\nimport StationActions from '../../resources/station/station.actions';\r\n\r\nfunction NewStation({ currentUser, createStation }){\r\n  const onFinish = async newStationData => {\r\n    newStationData.userId = currentUser._id;\r\n    createStation(newStationData);\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return <Form \r\n    labelCol={{ span: 7 }}\r\n    wrapperCol={{ span: 14 }}\r\n    layout=\"horizontal\"\r\n    onFinish={onFinish}\r\n    onFinishFailed={onFinishFailed}>\r\n\r\n    <Form.Item label=\"Продукт\" name=\"productName\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Станция\" name=\"stationName\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Координаты\" name=\"place\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Регион\" name=\"region\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Сколько нужно\" name=\"needCount\">\r\n      <Select>\r\n        <Select.Option value={25}>25</Select.Option>\r\n        <Select.Option value={50}>50</Select.Option>\r\n        <Select.Option value={150}>150</Select.Option>\r\n        <Select.Option value={350}>350</Select.Option>\r\n        <Select.Option value={1000}>1000</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Выполнено\" name=\"done\" valuePropName=\"checked\">\r\n      <Switch />\r\n    </Form.Item>\r\n\r\n    <Form.Item wrapperCol={{span: 14, offset: 7}}>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n      Добавить\r\n      </Button>\r\n    </Form.Item>\r\n\r\n  </Form>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  createStation: StationActions.createStation,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewStation);\r\n","export const CHANGE_ACTIVE_TAB = 'CHANGE_ACTIVE_TAB';","import {\r\n  CHANGE_ACTIVE_TAB,\r\n} from './tab.types';\r\n\r\nconst TabActions = {\r\n  changeActiveTab: newActiveTabKey => dispatch => dispatch({ type: CHANGE_ACTIVE_TAB, newActiveTabKey }),\r\n};\r\n\r\nexport default TabActions;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Tabs } from 'antd';\r\nimport styles from './MainMenu.module.css';\r\nimport {\r\n  PRODUCT_TAB,\r\n  REGION_TAB,\r\n  CREATE_STATION_TAB,\r\n} from '../common/constants/tabs';\r\nimport ProductChoice from './ProductChoice/ProductChoice';\r\nimport RegionChoice from './RegionChoice/RegionChoice';\r\nimport NewStation from './NewStation/NewStation';\r\nimport TabActions from '../resources/tab/tab.actions';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction MainMenu({ changeActiveTab }) {\r\n  const tabChange = (key) => {\r\n    changeActiveTab(key);\r\n  };\r\n\r\n  return <div>\r\n    <Tabs defaultActiveKey=\"1\" onChange={tabChange} className={styles.tabs}>\r\n      <TabPane tab=\"По продуктам\" key={PRODUCT_TAB}>\r\n        <ProductChoice />\r\n      </TabPane>\r\n      <TabPane tab=\"По регионам\" key={REGION_TAB}>\r\n        <RegionChoice />\r\n      </TabPane>\r\n      <TabPane tab=\"Добавить новую станцию\" key={CREATE_STATION_TAB}>\r\n        <NewStation />\r\n      </TabPane>\r\n    </Tabs>\r\n  </div>\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeActiveTab: TabActions.changeActiveTab,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(MainMenu);\r\n","import { connect } from 'react-redux';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport styles from './LogIn.module.css';\r\nimport UserActions from '../resources/user/user.actions';\r\nimport ProductActions from '../resources/product/product.actions';\r\nimport RegionActions from '../resources/region/region.actions';\r\n\r\nconst LogIn = ({ logIn, getAllProducts, getAllRegions }) => {\r\n  const onFinish = ({ username, password }) => {\r\n    logIn(username, password);\r\n    getAllProducts();\r\n    getAllRegions();\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      labelCol={{ span: 7 }}\r\n      wrapperCol={{ span: 14 }}\r\n      name=\"basic\"\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n      className={styles['login-form']}\r\n    >\r\n      <Form.Item\r\n        label=\"Имя пользователя\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Введите имя пользователя',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Пароль\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Введите пароль',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"remember\"\r\n        valuePropName=\"checked\"\r\n        wrapperCol={{\r\n          offset: 7,\r\n          span: 14,\r\n        }}\r\n      >\r\n        <Checkbox>Запомнить меня</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 7,\r\n          span: 14,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  logIn: UserActions.logIn,\r\n\r\n  getAllProducts: ProductActions.getAllProducts,\r\n\r\n  getAllRegions: RegionActions.getAllRegions,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LogIn);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './App.module.css';\r\nimport TinyMap from './TinyMap/TinyMap';\r\nimport Header from './Header/Header';\r\nimport 'antd/dist/antd.css';\r\nimport './common/common.css';\r\n\r\nimport {\r\n  Routes,\r\n  Route,\r\n} from \"react-router\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport UserSelector from './resources/user/user.selector';\r\nimport MainMenu from './MainMenu/MainMenu';\r\nimport LogIn from './LogIn/LogIn';\r\n\r\nfunction App({ currentUser }) {\r\n  return (\r\n    <div className={styles.app}>\r\n      <TinyMap />\r\n      <div className={styles.menu}>\r\n        <Header />\r\n        {currentUser ?\r\n          (<Router>\r\n            <Routes>\r\n              <Route path=\"/\" element={<MainMenu />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n            </Routes>\r\n          </Router>)\r\n          : (<Router>\r\n            <Routes>\r\n              <Route path=\"/login\" element={<LogIn />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n            </Routes>\r\n          </Router>)\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { LOG_IN, SET_CURRENT_USER } from \"./user.types\";\r\n\r\nconst initialState = {\r\n  currentUser: null,\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.currentUser,\r\n      };\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;","import {\r\n  SWITCH_ON_PRODUCT_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_PRODUCT_ID,\r\n  DELETE_SELECTED_PRODUCT_ID,\r\n  GET_ALL_PRODUCTS,\r\n} from './product.types';\r\nimport { colors } from '../../common/constants/colors';\r\n\r\nconst initialState = {\r\n  productTableVisibility: false,\r\n  selectedProductIds: [],\r\n  freeColors: [...colors],\r\n  allProducts: [],\r\n}\r\n\r\nconst productReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_PRODUCTS: \r\n      return {\r\n        ...state,\r\n        allProducts: action.products,\r\n      }\r\n    case SWITCH_ON_PRODUCT_TABLE_VISIBILITY: \r\n      return {\r\n        ...state,\r\n        productTableVisibility: true,\r\n      };\r\n    \r\n    case PUSH_SELECTED_PRODUCT_ID: {\r\n      const color = state.freeColors.pop();\r\n      return {\r\n        ...state,\r\n        selectedProductIds: [\r\n          ...state.selectedProductIds,\r\n          {\r\n            productId: action.productId,\r\n            color,\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    \r\n    case DELETE_SELECTED_PRODUCT_ID: {\r\n      const newSelectedProductIds = state.selectedProductIds;\r\n      const newFreeColors = state.freeColors;\r\n\r\n      const indexForDelete = state.selectedProductIds.findIndex(productData => {\r\n        return productData.productId === action.productId;\r\n      });\r\n      const productForDelete = newSelectedProductIds.splice(indexForDelete, 1);\r\n      newFreeColors.push(productForDelete[0].color);\r\n\r\n      return {\r\n        ...state,\r\n        selectedProductIds: newSelectedProductIds,\r\n        freeColors: newFreeColors,\r\n      };\r\n    }\r\n\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productReducer;","import {\r\n  SWITCH_ON_REGION_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_REGION_ID,\r\n  DELETE_SELECTED_REGION_ID,\r\n  GET_ALL_REGIONS,\r\n} from './region.types';\r\nimport { colors } from '../../common/constants/colors';\r\n\r\nconst initialState = {\r\n  regionTableVisibility: false,\r\n  selectedRegionIds: [],\r\n  freeColors: [...colors],\r\n  allRegions: [],\r\n}\r\n\r\nconst regionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_REGIONS: \r\n      return {\r\n        ...state,\r\n        allRegions: action.regions,\r\n      }\r\n    case SWITCH_ON_REGION_TABLE_VISIBILITY: \r\n      return {\r\n        ...state,\r\n        regionTableVisibility: true,\r\n      };\r\n\r\n    case PUSH_SELECTED_REGION_ID: {\r\n      const color = state.freeColors.pop();\r\n      return {\r\n        ...state,\r\n        selectedRegionIds: [\r\n          ...state.selectedRegionIds,\r\n          {\r\n            regionId: action.regionId,\r\n            color,\r\n          }\r\n        ]\r\n      };\r\n    }\r\n\r\n    case DELETE_SELECTED_REGION_ID: {\r\n      const newSelectedRegionIds = state.selectedRegionIds;\r\n      const newFreeColors = state.freeColors;\r\n\r\n      const indexForDelete = state.selectedRegionIds.findIndex(regionData => {\r\n        return regionData.regionId === action.regionId;\r\n      });\r\n      const regionForDelete = newSelectedRegionIds.splice(indexForDelete, 1);\r\n      newFreeColors.push(regionForDelete[0].color);\r\n\r\n      return {\r\n        ...state,\r\n        selectedRegionIds: newSelectedRegionIds,\r\n        freeColors: newFreeColors,\r\n      };\r\n    }\r\n\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default regionReducer;","import {\r\n  CREATE_STATION,\r\n  PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n  PUSH_SELECTED_BY_REGION_STATIONS,\r\n  DELETE_SELECTED_BY_PRODUCT_STATIONS,\r\n  DELETE_SELECTED_BY_REGION_STATIONS,\r\n  UPDATE_STATION_DONE,\r\n} from './station.types';\r\n\r\nconst initialState = {\r\n  selectedByProductStations: [],\r\n  selectedByRegionStations: [],\r\n};\r\n\r\nconst StationReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case PUSH_SELECTED_BY_PRODUCT_STATIONS: \r\n      return {\r\n        ...state,\r\n        selectedByProductStations: [\r\n          ...state.selectedByProductStations,\r\n          ...action.stationsData,\r\n        ],\r\n      };\r\n\r\n    case PUSH_SELECTED_BY_REGION_STATIONS:\r\n      return {\r\n        ...state,\r\n        selectedByRegionStations: [\r\n          ...state.selectedByRegionStations,\r\n          ...action.stationsData,\r\n        ]\r\n      }\r\n\r\n    case DELETE_SELECTED_BY_PRODUCT_STATIONS: {\r\n      const newStations = state.selectedByProductStations\r\n        .filter(station => station.productName !== action.product.name);\r\n      return {\r\n        ...state,\r\n        selectedByProductStations: newStations,\r\n      }\r\n    }\r\n\r\n    case DELETE_SELECTED_BY_REGION_STATIONS: {\r\n      const newStations = state.selectedByRegionStations\r\n        .filter(station => station.regionName !== action.region.name);\r\n      return {\r\n        ...state,\r\n        selectedByRegionStations: newStations,\r\n      }\r\n    }\r\n      \r\n\r\n    case UPDATE_STATION_DONE:\r\n      return updateStationDone(state, action);\r\n    \r\n    case CREATE_STATION: \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default StationReducer;\r\n\r\nfunction updateStationDone(state, action) {\r\n  const newProdStations = [];\r\n  for (const station of state.selectedByProductStations) {\r\n    if (station.stationId === action.stationData.stationId) {\r\n      newProdStations.push({\r\n        ...station,\r\n        done: action.stationData.done,\r\n      });\r\n    } else {\r\n      newProdStations.push(station);\r\n    }\r\n  }\r\n\r\n  const newRegStations = [];\r\n  for (const station of state.selectedByRegionStations) {\r\n    if (station.stationId === action.stationData.stationId) {\r\n      newRegStations.push({\r\n        ...station,\r\n        done: action.stationData.done,\r\n      });\r\n    } else {\r\n      newRegStations.push(station);\r\n    }\r\n  }\r\n  return {\r\n    ...state,\r\n    selectedByProductStations: newProdStations,\r\n    selectedByRegionStations: newRegStations,\r\n  }\r\n}","import {\r\n  CHANGE_ACTIVE_TAB,\r\n} from './tab.types';\r\nimport {\r\n  PRODUCT_TAB,\r\n} from '../../common/constants/tabs';\r\n\r\nconst initialState = {\r\n  activeTab: PRODUCT_TAB,\r\n};\r\n\r\nconst tabReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case CHANGE_ACTIVE_TAB:\r\n      return {\r\n        ...state,\r\n        activeTab: action.newActiveTabKey,\r\n      };\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default tabReducer;\r\n","import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport userReducer from './user/user.reducer';\r\nimport productReducer from './product/product.reducer';\r\nimport regionReducer from './region/region.reducer';\r\nimport stationReducer from './station/station.reducer';\r\nimport tabReducer from './tab/tab.reducer';\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  product: productReducer,\r\n  region: regionReducer,\r\n  station: stationReducer,\r\n  tab: tabReducer,\r\n});\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './resources/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    <style>{'#root {width: 100%} '}</style>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__mWrfg\",\"logo\":\"Header_logo__3COiS\",\"user\":\"Header_user__1SWzi\",\"user-button\":\"Header_user-button__25kzA\",\"avatar\":\"Header_avatar__2EqOL\"};"],"sourceRoot":""}