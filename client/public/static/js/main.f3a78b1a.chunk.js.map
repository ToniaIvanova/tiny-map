{"version":3,"sources":["MainMenu/RegionChoice/RegionChoice.module.css","App.module.css","TinyMap/TinyMap.module.css","MainMenu/MainMenu.module.css","LogIn/LogIn.module.css","common/constants/tabs.js","common/constants/colors.js","TinyMap/Marks.js","resources/station/station.selector.js","resources/tab/tab.selector.js","TinyMap/TinyMap.js","resources/user/user.selector.js","api/base.api.js","common/constants/baseURL.js","api/product.api.js","resources/product/product.types.js","resources/product/product.actions.js","resources/product/product.selector.js","resources/station/station.types.js","resources/station/station.actions.js","MainMenu/ProductChoice/ProductSearch.js","common/components/tableConfig/StationDoneSwitch.js","common/components/tableConfig/tableColumns.js","MainMenu/ProductChoice/ProductTable.js","MainMenu/ProductChoice/ProductChoice.js","api/region.api.js","resources/region/region.types.js","resources/region/region.actions.js","resources/region/region.selector.js","MainMenu/RegionChoice/RegionSearch.js","MainMenu/RegionChoice/RegionTable.js","MainMenu/RegionChoice/RegionChoice.js","api/station.api.js","MainMenu/NewStation/NewStation.js","resources/user/user.types.js","resources/user/user.actions.js","MainMenu/Header/User.js","MainMenu/Header/Logo.js","MainMenu/Header/Header.js","resources/tab/tab.types.js","resources/tab/tab.actions.js","MainMenu/MainMenu.js","LogIn/LogIn.js","App.js","resources/user/user.reducer.js","resources/product/product.reducer.js","resources/region/region.reducer.js","resources/station/station.reducer.js","resources/tab/tab.reducer.js","resources/store.js","index.js","MainMenu/Header/Header.module.css","MainMenu/ProductChoice/ProductChoice.module.css"],"names":["module","exports","PRODUCT_TAB","REGION_TAB","colors","Mark","selectedStations","map","station","color","done","colorForMap","geometry","place","modules","properties","balloonContentHeader","stationName","balloonContent","productName","needCount","balloonContentFooter","region","options","preset","iconColor","key","StationSelector","getSelectedByProductStations","state","selectedByProductStations","getSelectedByRegionStations","selectedByRegionStations","TabSelector","getActiveTab","tab","activeTab","connect","className","styles","defaultState","center","zoom","Marks","UserSelector","getCurrentUser","user","currentUser","api","axios","create","baseURL","timeout","headers","getAllProducts","a","baseApi","get","SWITCH_ON_PRODUCT_TABLE_VISIBILITY","PUSH_SELECTED_PRODUCT_ID","INC_PRODUCT_COLOR_INDEX","ProductActions","switchOnProductTableVisibility","dispatch","type","pushSelectedProductId","productId","incProductColorIndex","predIndex","colorIndex","ProductSelector","getProductTableVisibility","product","productTableVisibility","getSelectedProductIds","selectedProductIds","getNextProductColorIndex","nextProductColorIndex","PUSH_SELECTED_BY_PRODUCT_STATIONS","PUSH_SELECTED_BY_REGION_STATIONS","UPDATE_STATION_DONE","StationActions","pushSelectedByProductStations","_id","then","response","data","stationsData","pushSelectedByRegionStations","regionId","updateStationDone","stationId","put","mapDispatchToProps","pushSelectedProductIds","incNextProductColor","nextProductColor","useState","productsInSearch","setProductsInSearch","allProducts","setAllProducts","selectedValue","setSelectedValue","useEffect","fetchProducts","ProductApi","productsData","productsForSearch","value","label","name","search","dropdownMatchSelectWidth","style","width","onSelect","includes","onSearch","newProducts","filter","toString","toLowerCase","indexOf","Search","size","placeholder","enterButton","onChange","checked","defaultChecked","tableColumns","title","dataIndex","sorter","b","defaultSortOrder","render","StationDoneSwitch","columns","dataSource","pagination","pageSize","productTableVisability","table","getAllRegions","SWITCH_ON_REGION_TABLE_VISIBILITY","PUSH_SELECTED_REGIONS_ID","INC_REGION_COLOR_INDEX","RegionActions","switchOnRegionTableVisibility","pushSelectedRegionId","incRegionColorIndex","RegionSelector","getRegionTableVisibility","regionTableVisibility","getSelectedRegionIds","selectedRegionIds","getNextRegionColorIndex","nextRegionColorIndex","pushSelectedRegionIds","nextRegionColor","regionsInSearch","setRegionsInSearch","allRegions","setAllRegions","fetchRegions","RegionApi","regionsData","regionsForSearch","console","log","regionName","newRegions","regionTableVisability","postNewStation","newStationData","post","putStationDone","stationDone","onFinish","userId","StationApi","labelCol","span","wrapperCol","layout","onFinishFailed","errorInfo","Item","Option","valuePropName","offset","htmlType","SET_CURRENT_USER","LOG_IN","UserActions","setCurrentUser","id","logIn","username","password","onClick","verticalAlign","margin","border","backgroundColor","Logo","logo","Header","header","CHANGE_ACTIVE_TAB","TabActions","changeActiveTab","newActiveTabKey","TabPane","Tabs","defaultActiveKey","tabs","autoComplete","rules","required","message","Password","app","menu","path","element","to","initialState","userReducer","action","productReducer","regionReducer","StationReducer","newProdStations","push","newRegStations","tabReducer","reducers","combineReducers","stationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f3a78b1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"RegionChoice_table__3X4Bg\",\"search\":\"RegionChoice_search__2uZdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__pQWe-\",\"menu\":\"App_menu__2HRcq\",\"username\":\"App_username__3EYJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"TinyMap_map__2-PwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"MainMenu_tabs__36HWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form\":\"LogIn_login-form__2cejJ\"};","export const PRODUCT_TAB = 'PRODUCT_TAB';\r\nexport const REGION_TAB = 'REGION_TAB';\r\nexport const CREATE_STATION_TAB = 'CREATE_STATION_TAB';","export const colors = [\r\n    '#dc143c',\r\n    '#3caa3c',\r\n    '#156fc1',\r\n    '#eaec35',\r\n    '#942010',\r\n    '#0b0038',\r\n    '#ffb21f',\r\n    '#ffbcb5v',\r\n    '#6ac954'\r\n];\r\n\r\nexport const gray = '#c0c0c0';","import React from \"react\";\r\nimport { Placemark } from 'react-yandex-maps';\r\nimport { colors, gray } from '../common/constants/colors';\r\n\r\nfunction Mark({ selectedStations }) {\r\n  return <div>\r\n    { selectedStations.map(station => {\r\n      const color = station.done ? gray : colors[station.colorForMap];\r\n\r\n      return <Placemark\r\n        key={station.key}\r\n        geometry={station.place}\r\n        modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n        properties={{\r\n          balloonContentHeader: `${station.stationName}`,\r\n          balloonContent: `Продукт: ${station.productName} --- ${station.done ? 'Выполнено!' : `Надо: ${station.needCount}`}`,\r\n          balloonContentFooter: station.region,\r\n        }}\r\n        options={{\r\n          preset: 'islands#circleIcon',\r\n          iconColor: color,\r\n        }}\r\n      /> })}\r\n  </div>\r\n}\r\n\r\nexport default Mark;","const StationSelector = {\r\n  getSelectedByProductStations: state => state.station.selectedByProductStations,\r\n  getSelectedByRegionStations: state => state.station.selectedByRegionStations,\r\n};\r\n\r\nexport default StationSelector;","const TabSelector = {\r\n  getActiveTab: state => state.tab.activeTab,\r\n};\r\n\r\nexport default TabSelector;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { YMaps, Map } from 'react-yandex-maps';\r\nimport styles from './TinyMap.module.css';\r\n\r\nimport { PRODUCT_TAB, REGION_TAB } from '../common/constants/tabs';\r\nimport Marks from './Marks';\r\n\r\nimport StationSelector from '../resources/station/station.selector';\r\nimport TabSelector from '../resources/tab/tab.selector';\r\n\r\nfunction TinyMap({ selectedByProductStations, selectedByRegionStations, activeTab }) {\r\n  return <YMaps>\r\n    <Map className={styles.map} defaultState={{ center:[19.441468, 17.496825], zoom: 2 }}>\r\n      { activeTab === PRODUCT_TAB && <Marks selectedStations={selectedByProductStations}/>}\r\n      { activeTab === REGION_TAB && <Marks selectedStations={selectedByRegionStations}/>}\r\n    </Map>\r\n  </YMaps>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedByProductStations: StationSelector.getSelectedByProductStations(state),\r\n  selectedByRegionStations: StationSelector.getSelectedByRegionStations(state),\r\n  activeTab: TabSelector.getActiveTab(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(TinyMap);","const UserSelector = {\r\n  getCurrentUser: state => state.user.currentUser,\r\n};\r\n\r\nexport default UserSelector;","import axios from 'axios';\r\nimport { BASE_URL } from '../common/constants/baseURL';\r\n\r\nconst api = axios.create({\r\n    baseURL: BASE_URL,\r\n    timeout: 3000,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n\r\nexport default api;","export const BASE_URL = 'https://stormy-brook-68283.herokuapp.com'; //'http://localhost:3001';","import baseApi from './base.api';\r\n\r\nclass ProductApi {\r\n  getAllProducts = async () => {\r\n    return baseApi.get('/product');\r\n  };\r\n}\r\n\r\nexport default new ProductApi();","export const SWITCH_ON_PRODUCT_TABLE_VISIBILITY = 'SWITCH_ON_PRODUCT_TABLE_VISIBILITY';\r\n\r\nexport const PUSH_SELECTED_PRODUCT_ID = 'PUSH_SELECTED_PRODUCT_ID';\r\n\r\nexport const INC_PRODUCT_COLOR_INDEX = 'INC_PRODUCT_COLOR_INDEX';","import {\r\n  SWITCH_ON_PRODUCT_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_PRODUCT_ID,\r\n  INC_PRODUCT_COLOR_INDEX,\r\n} from './product.types';\r\n\r\nconst ProductActions = {\r\n  switchOnProductTableVisibility: () => dispatch => dispatch({ type: SWITCH_ON_PRODUCT_TABLE_VISIBILITY }),\r\n\r\n  pushSelectedProductId: productId => dispatch => dispatch({ type: PUSH_SELECTED_PRODUCT_ID, productId}),\r\n\r\n  incProductColorIndex: predIndex => dispatch => dispatch({ type: INC_PRODUCT_COLOR_INDEX, colorIndex: predIndex + 1 })\r\n};\r\n\r\nexport default ProductActions;","const ProductSelector = {\r\n  getProductTableVisibility: state => state.product.productTableVisibility,\r\n\r\n  getSelectedProductIds: state => state.product.selectedProductIds,\r\n\r\n  getNextProductColorIndex: state => state.product.nextProductColorIndex,\r\n};\r\n\r\nexport default ProductSelector;","export const PUSH_SELECTED_BY_PRODUCT_STATIONS = 'PUSH_SELECTED_BY_PRODUCT_STATIONS';\r\nexport const PUSH_SELECTED_BY_REGION_STATIONS = 'PUSH_SELECTED_BY_REGION_STATIONS';\r\n\r\nexport const UPDATE_STATION_DONE = 'UPDATE_STATION_DONE';","import {\r\n  PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n  PUSH_SELECTED_BY_REGION_STATIONS,\r\n  UPDATE_STATION_DONE,\r\n} from './station.types';\r\nimport api from '../../api/base.api';\r\n\r\nconst StationActions = {\r\n  pushSelectedByProductStations: (productId, currentUser, colorForMap) => dispatch => \r\n    api.get(`/station/product/${productId}/${currentUser._id}`)\r\n      .then(response => response.data)\r\n      .then(stationsData => dispatch({\r\n        type: PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n        stationsData: stationsData.map(station => {\r\n          station.colorForMap = colorForMap;\r\n          return station;\r\n        }),\r\n      })),\r\n\r\n  pushSelectedByRegionStations: (regionId, currentUser, colorForMap) => dispatch => \r\n    api.get(`/station/region/${regionId}/${currentUser._id}`)\r\n      .then(response => response.data)\r\n      .then(stationsData => dispatch({\r\n        type: PUSH_SELECTED_BY_REGION_STATIONS,\r\n        stationsData: stationsData.map(station => {\r\n          station.colorForMap = colorForMap;\r\n          return station;\r\n        }),\r\n      })),\r\n  \r\n  updateStationDone: ({ stationId, currentUser, done }) => dispatch =>\r\n    api.put(`/station/${stationId}/${currentUser._id}/done`, { done })\r\n      .then(response => response.data)\r\n      .then(() => dispatch({\r\n        type: UPDATE_STATION_DONE,\r\n        stationsData: { \r\n          stationId,\r\n          done,\r\n        }\r\n      })),\r\n};\r\n\r\nexport default StationActions;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input, AutoComplete } from 'antd';\r\nimport styles from './ProductChoice.module.css';\r\n\r\nimport ProductApi from '../../api/product.api';\r\nimport ProductActions from '../../resources/product/product.actions';\r\nimport ProductSelector from '../../resources/product/product.selector';\r\nimport UserSelector from '../../resources/user/user.selector';\r\nimport StationActions from '../../resources/station/station.actions';\r\n\r\nfunction ProductSearch({\r\n  selectedProductIds,\r\n  currentUser,\r\n  nextProductColor,\r\n  incNextProductColor,\r\n  switchOnProductTableVisibility,\r\n  pushSelectedProductIds,\r\n  pushSelectedByProductStations,\r\n}) {\r\n  const [productsInSearch, setProductsInSearch] = useState([]);\r\n  const [allProducts, setAllProducts] = useState([]);\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const productsData = await ProductApi.getAllProducts();\r\n      const productsForSearch = productsData.data.map(product => {\r\n        return {\r\n          value: product._id,\r\n          label: product.name,\r\n        }\r\n      });\r\n      setAllProducts(productsForSearch);\r\n      setProductsInSearch(productsForSearch);\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const onSelect = productId => {\r\n    if (productId && !selectedProductIds.includes(productId)) {\r\n      pushSelectedByProductStations(productId, currentUser, nextProductColor);\r\n      switchOnProductTableVisibility();\r\n      pushSelectedProductIds(productId);\r\n      incNextProductColor(nextProductColor);\r\n    }\r\n  };\r\n\r\n  const onSearch = productName => {\r\n    setSelectedValue(productName);\r\n    const newProducts = allProducts.filter((product) => \r\n      product.label.toString().toLowerCase().indexOf(productName.toString().toLowerCase()) > -1\r\n    );\r\n    setProductsInSearch(newProducts);\r\n  };\r\n\r\n  return <div className={styles.search}>\r\n    <AutoComplete\r\n      dropdownMatchSelectWidth={252}\r\n      style={{\r\n        width: 300,\r\n      }}\r\n      options={productsInSearch}\r\n      onSelect={onSelect}\r\n      onSearch={onSearch}\r\n      value={selectedValue}\r\n    >\r\n      <Input.Search size=\"large\" placeholder=\"название продукта\" enterButton />\r\n    </AutoComplete>\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedProductIds: ProductSelector.getSelectedProductIds(state),\r\n  nextProductColor: ProductSelector.getNextProductColorIndex(state),\r\n\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  switchOnProductTableVisibility: ProductActions.switchOnProductTableVisibility,\r\n  pushSelectedProductIds: ProductActions.pushSelectedProductId,\r\n  incNextProductColor: ProductActions.incProductColorIndex,\r\n\r\n  pushSelectedByProductStations: StationActions.pushSelectedByProductStations,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductSearch)","import { Switch } from \"antd\";\r\nimport { connect } from 'react-redux';\r\nimport UserSelector from '../../../resources/user/user.selector';\r\nimport StationActions from \"../../../resources/station/station.actions\";\r\n\r\nfunction DoneSwitch({ station, currentUser, updateStationDone }) {\r\n  function onChange(checked) {\r\n    updateStationDone({\r\n      stationId: station.stationId,\r\n      currentUser,\r\n      done: checked,\r\n    });\r\n  }\r\n\r\n  if (!currentUser) {\r\n    return <div></div>\r\n  }\r\n  if (station.done) {\r\n    return <Switch onChange={onChange} defaultChecked/>\r\n  }\r\n  return <Switch onChange={onChange} />\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateStationDone: StationActions.updateStationDone,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoneSwitch);","import StationDoneSwitch from \"./StationDoneSwitch\";\r\n\r\nconst tableColumns = [\r\n  {\r\n    title: 'Product Name',\r\n    dataIndex: 'productName',\r\n    sorter: (a, b) => {\r\n      if (a.productName > b.productName) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n  {\r\n    title: 'Station Name',\r\n    dataIndex: 'stationName',\r\n    sorter: (a, b) => {\r\n      if (a.stationName > b.stationName) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n  {\r\n    title: 'Need Count',\r\n    dataIndex: 'needCount',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.needCount - b.needCount,\r\n  },\r\n  {\r\n    title: 'Done',\r\n    render: station => <StationDoneSwitch station={station} />\r\n  },\r\n  {\r\n    title: 'region',\r\n    dataIndex: 'region',\r\n    sorter: (a, b) => {\r\n      if (a.region > b.region) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n];\r\n\r\nexport default tableColumns;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StationSelector from '../../resources/station/station.selector';\r\nimport { Table } from 'antd';\r\nimport tableColumns from '../../common/components/tableConfig/tableColumns';\r\n\r\nfunction ProductTable({ selectedByProductStations }) {\r\n  return <Table\r\n    columns={tableColumns}\r\n    dataSource={selectedByProductStations}\r\n    size=\"middle\"\r\n    pagination={{ pageSize: 7 }}\r\n  />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedByProductStations: StationSelector.getSelectedByProductStations(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProductTable);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProductSearch from './ProductSearch';\r\nimport ProductTable from './ProductTable';\r\nimport styles from './ProductChoice.module.css';\r\nimport ProductSelector from '../../resources/product/product.selector';\r\n\r\nfunction ProductChoice({ productTableVisability }) {\r\n  return <div>\r\n    <ProductSearch/>\r\n    { productTableVisability && \r\n      <ProductTable\r\n        className={styles.table}\r\n      /> }\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  productTableVisability: ProductSelector.getProductTableVisibility(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProductChoice);","import baseApi from './base.api';\r\n\r\nclass RegionApi {\r\n  getAllRegions = async () => {\r\n    return baseApi.get('/region');\r\n  };\r\n}\r\n\r\nexport default new RegionApi();","export const SWITCH_ON_REGION_TABLE_VISIBILITY = 'SWITCH_ON_REGION_TABLE_VISIBILITY';\r\n\r\nexport const PUSH_SELECTED_REGIONS_ID = 'PUSH_SELECTED_REGIONS_ID';\r\n\r\nexport const INC_REGION_COLOR_INDEX = 'INC_REGION_COLOR_INDEX';","import {\r\n  SWITCH_ON_REGION_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_REGIONS_ID,\r\n  INC_REGION_COLOR_INDEX,\r\n} from './region.types';\r\n\r\nconst RegionActions = {\r\n  switchOnRegionTableVisibility: () => dispatch => dispatch({ type: SWITCH_ON_REGION_TABLE_VISIBILITY }),\r\n\r\n  pushSelectedRegionId: regionId => dispatch => dispatch({ type: PUSH_SELECTED_REGIONS_ID, regionId}),\r\n\r\n  incRegionColorIndex: predIndex => dispatch => dispatch({ type: INC_REGION_COLOR_INDEX, colorIndex: predIndex + 1 }),\r\n};\r\n\r\nexport default RegionActions;","const RegionSelector = {\r\n    getRegionTableVisibility: state => state.region.regionTableVisibility,\r\n  \r\n    getSelectedRegionIds: state => state.region.selectedRegionIds,\r\n\r\n    getNextRegionColorIndex: state => state.region.nextRegionColorIndex,\r\n  };\r\n  \r\n  export default RegionSelector;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input, AutoComplete } from 'antd';\r\nimport styles from './RegionChoice.module.css';\r\n\r\nimport RegionApi from '../../api/region.api';\r\nimport RegionActions from '../../resources/region/region.actions';\r\nimport RegionSelector from '../../resources/region/region.selector';\r\nimport UserSelector from '../../resources/user/user.selector';\r\nimport StationActions from '../../resources/station/station.actions';\r\n\r\nfunction RegionSearch({\r\n  selectedRegionIds,\r\n  currentUser,\r\n  nextRegionColor,\r\n  incRegionColorIndex,\r\n  switchOnRegionTableVisibility,\r\n  pushSelectedRegionIds,\r\n  pushSelectedByRegionStations,\r\n}) {\r\n  const [regionsInSearch, setRegionsInSearch] = useState([]);\r\n  const [allRegions, setAllRegions] = useState([]);\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchRegions = async () => {\r\n      const regionsData = await RegionApi.getAllRegions();\r\n      const regionsForSearch = regionsData.data.map(region => {\r\n        return {\r\n          value: region._id,\r\n          label: region.name,\r\n        }\r\n      });\r\n      setAllRegions(regionsForSearch);\r\n      setRegionsInSearch(regionsForSearch);\r\n    }\r\n    fetchRegions();\r\n  }, []);\r\n\r\n  const onSelect = regionId => {\r\n    if (regionId && !selectedRegionIds.includes(regionId)) {\r\n      pushSelectedByRegionStations(regionId, currentUser, nextRegionColor);\r\n      switchOnRegionTableVisibility();\r\n      pushSelectedRegionIds(regionId);\r\n      incRegionColorIndex(nextRegionColor);\r\n    }\r\n    console.log({ selectedRegionIds });\r\n  };\r\n\r\n  const onSearch = regionName => {\r\n    setSelectedValue(regionName);\r\n    const newRegions = allRegions.filter((region) => \r\n      region.label.toString().toLowerCase().indexOf(regionName.toString().toLowerCase()) > -1\r\n    );\r\n    setRegionsInSearch(newRegions);\r\n  };\r\n\r\n  return <div className={styles.search}>\r\n    <AutoComplete\r\n      dropdownMatchSelectWidth={252}\r\n      style={{\r\n        width: 300,\r\n      }}\r\n      options={regionsInSearch}\r\n      onSelect={onSelect}\r\n      onSearch={onSearch}\r\n      value={selectedValue}\r\n    >\r\n      <Input.Search size=\"large\" placeholder=\"название региона\" enterButton />\r\n    </AutoComplete>\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRegionIds: RegionSelector.getSelectedRegionIds(state),\r\n  nextRegionColor: RegionSelector.getNextRegionColorIndex(state),\r\n\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  switchOnRegionTableVisibility: RegionActions.switchOnRegionTableVisibility,\r\n  pushSelectedRegionIds: RegionActions.pushSelectedRegionId,\r\n  incRegionColorIndex: RegionActions.incRegionColorIndex,\r\n\r\n  pushSelectedByRegionStations: StationActions.pushSelectedByRegionStations,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegionSearch)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StationSelector from '../../resources/station/station.selector';\r\nimport { Table } from 'antd';\r\nimport tableColumns from '../../common/components/tableConfig/tableColumns';\r\n\r\nfunction RegionTable({ selectedByRegionStations }) {\r\n  return <Table\r\n    columns={tableColumns}\r\n    dataSource={selectedByRegionStations}\r\n    size=\"middle\"\r\n  />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedByRegionStations: StationSelector.getSelectedByRegionStations(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(RegionTable);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport RegionSearch from './RegionSearch';\r\nimport RegionTable from './RegionTable';\r\nimport styles from './RegionChoice.module.css';\r\nimport RegionSelector from '../../resources/region/region.selector';\r\n\r\nfunction RegionChoice({ regionTableVisability }) {\r\n  return <div>\r\n    <RegionSearch />\r\n    { regionTableVisability && \r\n      <RegionTable\r\n        className={styles.table}\r\n      /> }\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  regionTableVisability: RegionSelector.getRegionTableVisibility(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(RegionChoice);","import baseApi from './base.api';\r\n\r\nclass StationApi {\r\n  postNewStation = async newStationData => {\r\n    return baseApi.post('/station', newStationData);\r\n  };\r\n\r\n  putStationDone = async ({ stationId, currentUser, done }) => {\r\n    return (await baseApi.put(`/station/${stationId}/${currentUser._id}/done`, { done })).data.stationDone;\r\n  };\r\n}\r\n\r\nexport default new StationApi();","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Input, Button, Select, Switch } from 'antd';\r\nimport StationApi from '../../api/station.api';\r\nimport UserSelector from '../../resources/user/user.selector';\r\n\r\nfunction NewStation({ currentUser }){\r\n  \r\n  const onFinish = async newStationData => {\r\n    newStationData.userId = currentUser._id;\r\n    await StationApi.postNewStation(newStationData);\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return <Form \r\n    labelCol={{ span: 7 }}\r\n    wrapperCol={{ span: 14 }}\r\n    layout=\"horizontal\"\r\n    onFinish={onFinish}\r\n    onFinishFailed={onFinishFailed}>\r\n\r\n    <Form.Item label=\"Продукт\" name=\"productName\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Станция\" name=\"stationName\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Координаты\" name=\"place\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Регион\" name=\"region\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Сколько нужно\" name=\"needCount\">\r\n      <Select>\r\n        <Select.Option value={25}>25</Select.Option>\r\n        <Select.Option value={50}>50</Select.Option>\r\n        <Select.Option value={150}>150</Select.Option>\r\n        <Select.Option value={350}>350</Select.Option>\r\n        <Select.Option value={1000}>1000</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Выполнено\" name=\"done\" valuePropName=\"checked\">\r\n      <Switch />\r\n    </Form.Item>\r\n\r\n    <Form.Item wrapperCol={{span: 14, offset: 7}}>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n      Добавить\r\n      </Button>\r\n    </Form.Item>\r\n\r\n  </Form>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewStation);\r\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n\r\nexport const LOG_IN = 'LOG_IN';","import { SET_CURRENT_USER, LOG_IN } from './user.types';\r\nimport api from '../../api/base.api';\r\n\r\nconst UserActions = {\r\n  setCurrentUser: id => dispatch => \r\n    api.get(`/user/${id}`)\r\n      .then(response => response.data)\r\n      .then(currentUser => dispatch({ type: SET_CURRENT_USER, currentUser })),\r\n\r\n  logIn: (username, password) => dispatch =>\r\n    api.post(`/user/login`, { username, password })\r\n      .then(response => response.data)\r\n      .then(currentUser => dispatch({ type: LOG_IN, currentUser })),\r\n};\r\n\r\nexport default UserActions;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Avatar, Button } from 'antd';\r\nimport UserActions from '../../resources/user/user.actions';\r\nimport UserSelector from '../../resources/user/user.selector';\r\nimport styles from './Header.module.css';\r\n\r\nfunction User({ currentUser, setCurrentUser }) {\r\n\r\n  const changeUser = () => {\r\n    // setCurrentUser('60e06fe6ad2cc121d81eb19a'); // Тонечка\r\n  };\r\n\r\n  return <div className={styles.user}>\r\n    <Button size=\"small\" onClick={changeUser}\r\n      style={{\r\n        verticalAlign: 'middle',\r\n        margin: '5px',\r\n        border: 'none',\r\n      }}>\r\n      Сменить власть\r\n    </Button>\r\n    <Avatar size={50} style={{\r\n        backgroundColor: '#1890ff',\r\n        verticalAlign: 'middle'\r\n      }}>\r\n        {currentUser ? currentUser.name : 'Гость'}\r\n    </Avatar>\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setCurrentUser: UserActions.setCurrentUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User)","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nexport default function Logo() {\r\n  return <h2 className={styles.logo}> Tiny-Map </h2>\r\n}\r\n","import React from 'react';\r\nimport User from './User';\r\nimport Logo from './Logo';\r\nimport styles from './Header.module.css';\r\n\r\nexport default function Header() {\r\n  return <div className={styles.header}>\r\n    <Logo />\r\n    <User />\r\n  </div>\r\n};\r\n","export const CHANGE_ACTIVE_TAB = 'CHANGE_ACTIVE_TAB';","import {\r\n  CHANGE_ACTIVE_TAB,\r\n} from './tab.types';\r\n\r\nconst TabActions = {\r\n  changeActiveTab: newActiveTabKey => dispatch => dispatch({ type: CHANGE_ACTIVE_TAB, newActiveTabKey }),\r\n};\r\n\r\nexport default TabActions;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Tabs } from 'antd';\r\nimport styles from './MainMenu.module.css';\r\nimport {\r\n  PRODUCT_TAB,\r\n  REGION_TAB,\r\n  CREATE_STATION_TAB,\r\n} from '../common/constants/tabs';\r\nimport ProductChoice from './ProductChoice/ProductChoice';\r\nimport RegionChoice from './RegionChoice/RegionChoice';\r\nimport NewStation from './NewStation/NewStation';\r\nimport Header from './Header/Header';\r\nimport TabActions from '../resources/tab/tab.actions';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction MainMenu({ changeActiveTab }) {\r\n  const tabChange = (key) => {\r\n    changeActiveTab(key);\r\n  };\r\n\r\n  return <div>\r\n    <Header />\r\n    <Tabs defaultActiveKey=\"1\" onChange={tabChange} className={styles.tabs}>\r\n      <TabPane tab=\"По продуктам\" key={PRODUCT_TAB}>\r\n        <ProductChoice />\r\n      </TabPane>\r\n      <TabPane tab=\"По регионам\" key={REGION_TAB}>\r\n        <RegionChoice />\r\n      </TabPane>\r\n      <TabPane tab=\"Добавить новую станцию\" key={CREATE_STATION_TAB}>\r\n        <NewStation />\r\n      </TabPane>\r\n    </Tabs>\r\n  </div>\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeActiveTab: TabActions.changeActiveTab,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(MainMenu);\r\n","import { connect } from 'react-redux';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport styles from './LogIn.module.css';\r\nimport UserActions from '../resources/user/user.actions';\r\n\r\nconst LogIn = ({ logIn }) => {\r\n  const onFinish = ({ username, password }) => {\r\n    logIn(username, password);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      labelCol={{ span: 7 }}\r\n      wrapperCol={{ span: 14 }}\r\n      name=\"basic\"\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n      className={styles['login-form']}\r\n    >\r\n      <Form.Item\r\n        label=\"Имя пользователя\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Введите имя пользователя',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Пароль\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Введите пароль',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"remember\"\r\n        valuePropName=\"checked\"\r\n        wrapperCol={{\r\n          offset: 7,\r\n          span: 14,\r\n        }}\r\n      >\r\n        <Checkbox>Запомнить меня</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 7,\r\n          span: 14,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  logIn: UserActions.logIn,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LogIn);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './App.module.css';\r\nimport TinyMap from './TinyMap/TinyMap';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport {\r\n  Routes,\r\n  Route,\r\n} from \"react-router\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport UserSelector from './resources/user/user.selector';\r\nimport MainMenu from './MainMenu/MainMenu';\r\nimport LogIn from './LogIn/LogIn';\r\n\r\nfunction App({ currentUser }) {\r\n  return (\r\n    <div className={styles.app}>\r\n      <TinyMap />\r\n      <div className={styles.menu}>\r\n        {currentUser ?\r\n          (<Router>\r\n            <Routes>\r\n              <Route path=\"/\" element={<MainMenu />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n            </Routes>\r\n          </Router>)\r\n          : (<Router>\r\n            <Routes>\r\n              <Route path=\"/login\" element={<LogIn />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n            </Routes>\r\n          </Router>)\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { LOG_IN, SET_CURRENT_USER } from \"./user.types\";\r\n\r\nconst initialState = {\r\n  currentUser: null,\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.currentUser,\r\n      };\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;","import {\r\n  SWITCH_ON_PRODUCT_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_PRODUCT_ID,\r\n  INC_PRODUCT_COLOR_INDEX,\r\n} from './product.types';\r\n\r\nconst initialState = {\r\n  productTableVisibility: false,\r\n  selectedProductIds: [],\r\n  nextProductColorIndex: 0,\r\n}\r\n\r\nconst productReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SWITCH_ON_PRODUCT_TABLE_VISIBILITY: \r\n      return {\r\n        ...state,\r\n        productTableVisibility: true,\r\n      };\r\n    \r\n    case PUSH_SELECTED_PRODUCT_ID: \r\n      return {\r\n        ...state,\r\n        selectedProductIds: [\r\n          ...state.selectedProductIds,\r\n          action.productId,\r\n        ]\r\n      };\r\n    \r\n    case INC_PRODUCT_COLOR_INDEX:\r\n      return {\r\n        ...state,\r\n        nextProductColorIndex: action.colorIndex,\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productReducer;","import {\r\n  SWITCH_ON_REGION_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_REGIONS_ID,\r\n  INC_REGION_COLOR_INDEX,\r\n} from './region.types';\r\n\r\nconst initialState = {\r\n  regionTableVisibility: false,\r\n  selectedRegionIds: [],\r\n  nextRegionColorIndex: 0,\r\n}\r\n\r\nconst regionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SWITCH_ON_REGION_TABLE_VISIBILITY: \r\n      return {\r\n        ...state,\r\n        regionTableVisibility: true,\r\n      };\r\n\r\n    case PUSH_SELECTED_REGIONS_ID: \r\n      return {\r\n        ...state,\r\n        selectedRegionIds: [\r\n          ...state.selectedRegionIds,\r\n          action.regionId,\r\n        ]\r\n      };\r\n\r\n    case INC_REGION_COLOR_INDEX:\r\n      return {\r\n        ...state,\r\n        nextRegionColorIndex: action.colorIndex,\r\n      };\r\n\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default regionReducer;","import {\r\n  PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n  PUSH_SELECTED_BY_REGION_STATIONS,\r\n  UPDATE_STATION_DONE,\r\n} from './station.types';\r\n\r\nconst initialState = {\r\n  selectedByProductStations: [],\r\n  selectedByRegionStations: [],\r\n};\r\n\r\nconst StationReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case PUSH_SELECTED_BY_PRODUCT_STATIONS: {\r\n      console.log({ action });\r\n      return {\r\n        ...state,\r\n        selectedByProductStations: [\r\n          ...state.selectedByProductStations,\r\n          ...action.stationsData,\r\n        ],\r\n      };\r\n    }\r\n    case PUSH_SELECTED_BY_REGION_STATIONS:\r\n      return {\r\n        ...state,\r\n        selectedByRegionStations: [\r\n          ...state.selectedByRegionStations,\r\n          ...action.stationsData,\r\n        ]\r\n      }\r\n    case UPDATE_STATION_DONE: {\r\n      const newProdStations = [];\r\n      for (const station of state.selectedByProductStations) {\r\n        if (station.stationId === action.stationsData.stationId) {\r\n          newProdStations.push({\r\n            ...station,\r\n            done: action.stationsData.done,\r\n          });\r\n        } else {\r\n          newProdStations.push(station);\r\n        }\r\n      }\r\n\r\n      const newRegStations = [];\r\n      for (const station of state.selectedByRegionStations) {\r\n        if (station.stationId === action.stationsData.stationId) {\r\n          newRegStations.push({\r\n            ...station,\r\n            done: action.stationsData.done,\r\n          });\r\n        } else {\r\n          newRegStations.push(station);\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        selectedByProductStations: newProdStations,\r\n        selectedByRegionStations: newRegStations,\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default StationReducer;","import {\r\n  CHANGE_ACTIVE_TAB,\r\n} from './tab.types';\r\nimport {\r\n  PRODUCT_TAB,\r\n} from '../../common/constants/tabs';\r\n\r\nconst initialState = {\r\n  activeTab: PRODUCT_TAB,\r\n};\r\n\r\nconst tabReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case CHANGE_ACTIVE_TAB:\r\n      return {\r\n        ...state,\r\n        activeTab: action.newActiveTabKey,\r\n      };\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default tabReducer;\r\n","import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport userReducer from './user/user.reducer';\r\nimport productReducer from './product/product.reducer';\r\nimport regionReducer from './region/region.reducer';\r\nimport stationReducer from './station/station.reducer';\r\nimport tabReducer from './tab/tab.reducer';\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  product: productReducer,\r\n  region: regionReducer,\r\n  station: stationReducer,\r\n  tab: tabReducer,\r\n});\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './resources/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    <style>{'#root {width: 100%} '}</style>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__cqiW7\",\"logo\":\"Header_logo__1xxfX\",\"user\":\"Header_user__14npU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"ProductChoice_table__3b3pK\",\"search\":\"ProductChoice_search__2Y-QW\"};"],"sourceRoot":""}