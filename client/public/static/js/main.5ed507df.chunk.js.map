{"version":3,"sources":["MainMenu/ProductChoice/ProductChoice.module.css","MainMenu/RegionChoice/RegionChoice.module.css","App.module.css","TinyMap/TinyMap.module.css","MainMenu/MainMenu.module.css","common/constants/tabs.js","common/constants/colors.js","common/getColor.js","TinyMap/Marks.js","resources/station/station.selector.js","resources/product/product.selector.js","resources/region/region.selector.js","resources/tab/tab.selector.js","TinyMap/TinyMap.js","resources/user/user.selector.js","resources/root.types.js","Header/User.js","resources/root.action.js","Header/Logo.js","Header/Header.js","common/base.api.js","common/constants/baseURL.js","resources/product/product.types.js","resources/product/product.actions.js","resources/station/station.types.js","resources/station/station.actions.js","MainMenu/ProductChoice/ProductSearch.js","common/components/tableConfig/StationDoneSwitch.js","common/components/tableConfig/tableColumns.js","MainMenu/ProductChoice/ProductTable.js","MainMenu/ProductChoice/ProductChoice.js","resources/region/region.types.js","resources/region/region.actions.js","MainMenu/RegionChoice/RegionSearch.js","MainMenu/RegionChoice/RegionTable.js","MainMenu/RegionChoice/RegionChoice.js","MainMenu/NewStation/NewStation.js","resources/tab/tab.types.js","resources/tab/tab.actions.js","resources/user/user.types.js","resources/user/user.actions.js","MainMenu/Rating/tableColumns.js","MainMenu/Rating/Rating.js","MainMenu/MainMenu.js","Authorization/LogIn.js","Authorization/SignUp.js","Authorization/Authorization.js","App.js","resources/user/user.reducer.js","resources/product/product.reducer.js","resources/region/region.reducer.js","resources/station/station.reducer.js","resources/tab/tab.reducer.js","resources/store.js","index.js","Header/Header.module.css","Authorization/Authorization.module.css"],"names":["module","exports","PRODUCT_TAB","REGION_TAB","colors","getColor","arr","value","item","regionId","color","productId","Mark","selectedStations","selectedIds","tab","map","station","idForColor","done","geometry","place","modules","properties","balloonContentHeader","stationName","balloonContent","productName","needCount","balloonContentFooter","region","options","preset","iconColor","key","StationSelector","getSelectedByProductStations","state","selectedByProductStations","getSelectedByRegionStations","selectedByRegionStations","ProductSelector","getProductTableVisibility","product","productTableVisibility","getSelectedProductIds","selectedProductIds","getNextProductColorIndex","nextProductColorIndex","getAllProducts","allProducts","RegionSelector","getRegionTableVisibility","regionTableVisibility","getSelectedRegionIds","selectedRegionIds","getNextRegionColorIndex","nextRegionColorIndex","getAllRegions","allRegions","TabSelector","getActiveTab","activeTab","connect","className","styles","defaultState","center","zoom","Marks","UserSelector","getCurrentUser","user","currentUser","getError","errorType","getUserRatings","userRatings","LOG_OUT","mapDispatchToProps","logOut","dispatch","type","title","icon","QuestionCircleOutlined","style","onConfirm","localStorage","setItem","size","avatar","name","Logo","logo","Header","header","api","axios","create","baseURL","timeout","headers","SWITCH_ON_PRODUCT_TABLE_VISIBILITY","GET_ALL_PRODUCTS","PUSH_SELECTED_PRODUCT_ID","DELETE_SELECTED_PRODUCT_ID","ProductActions","switchOnProductTableVisibility","get","then","response","data","products","pushSelectedProductId","deleteSelectedProductId","CREATE_STATION","PUSH_SELECTED_BY_PRODUCT_STATIONS","PUSH_SELECTED_BY_REGION_STATIONS","DELETE_SELECTED_BY_PRODUCT_STATIONS","DELETE_SELECTED_BY_REGION_STATIONS","UPDATE_STATION_DONE","StationActions","createStation","newStationData","a","post","pushSelectedByProductStations","colorForMap","stationsData","pushSelectedByRegionStations","updateStationDone","stationId","stationData","deleteSelectedByProductStations","deleteSelectedByRegionStations","pushSelectedProductIds","nextProductColor","allProductsData","useState","productsInSearch","setProductsInSearch","useEffect","productsForSearch","_id","label","search","mode","showArrow","width","placeholder","tagRender","props","closable","onClose","onMouseDown","event","preventDefault","stopPropagation","marginRight","onSelect","includes","onDeselect","productForDelete","find","onChange","checked","defaultChecked","tableColumns","dataIndex","sorter","b","defaultSortOrder","render","StationDoneSwitch","filters","text","onFilter","columns","dataSource","pagination","pageSize","productTableVisability","table","SWITCH_ON_REGION_TABLE_VISIBILITY","GET_ALL_REGIONS","PUSH_SELECTED_REGION_ID","DELETE_SELECTED_REGION_ID","RegionActions","switchOnRegionTableVisibility","regions","pushSelectedRegionId","deleteSelectedRegionId","nextRegionColor","allRegionsData","regionsInSearch","setRegionsInSearch","regionsForSearch","regionForDelete","regionTableVisability","onFinish","userId","labelCol","span","wrapperCol","layout","onFinishFailed","errorInfo","console","log","Item","Option","valuePropName","offset","htmlType","CHANGE_ACTIVE_TAB","TabActions","changeActiveTab","newActiveTabKey","SET_CURRENT_USER","GET_PROFILE_BY_TOKEN","LOG_IN","LOG_IN_ERROR","SIGN_UP","SIGN_UP_ERROR","RESOLVE_ERROR","RATING","UserActions","setCurrentUser","id","getProdileByToken","token","logIn","username","password","errorMessage","access_token","signUp","resolveError","getRating","TabPane","Tabs","defaultActiveKey","tabs","isAdmin","nameStatus","setNameStatus","nameHelp","setNameHelp","passwordStatus","setPasswordStatus","passwordHelp","setPasswordHelp","autoComplete","validateStatus","help","rules","required","message","Password","setValidateStatus","setHelp","getFieldValue","validator","_","Promise","reject","Error","resolve","getItem","app","menu","path","element","to","initialState","userReducer","action","freeColors","productReducer","pop","newSelectedProductIds","newFreeColors","indexForDelete","findIndex","productData","splice","push","regionReducer","newSelectedRegionIds","regionData","StationReducer","newStations","filter","regionName","newProdStations","newRegStations","tabReducer","reducers","combineReducers","stationReducer","store","createStore","undefined","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5ed507df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"ProductChoice_table__3b3pK\",\"search\":\"ProductChoice_search__2Y-QW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"RegionChoice_table__3X4Bg\",\"search\":\"RegionChoice_search__2uZdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__pQWe-\",\"menu\":\"App_menu__2HRcq\",\"username\":\"App_username__3EYJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"TinyMap_map__2-PwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"MainMenu_tabs__36HWd\"};","export const PRODUCT_TAB = 'PRODUCT_TAB';\r\nexport const REGION_TAB = 'REGION_TAB';\r\nexport const CREATE_STATION_TAB = 'CREATE_STATION_TAB';\r\nexport const RATING_TAB = 'RATING_TAB';\r\n\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const SIGN_UP = 'SIGN_UP';","export const colors = [\r\n  '#942010',\r\n  '#0b0038',\r\n  '#ffb21f',\r\n  '#ffbcb5',\r\n  '#6ac954',\r\n  '#dc143c',\r\n  '#3caa3c',\r\n  '#156fc1',\r\n  '#eaec35',\r\n];\r\n\r\nexport const gray = '#c0c0c0';","import { colors } from './constants/colors';\r\n\r\nexport const getColor = (arr, value) => {\r\n  for (const item of arr) {\r\n    if(item.regionId === value) {\r\n      return item.color;\r\n    }\r\n    if(item.productId === value) {\r\n      return item.color;\r\n    }\r\n  }\r\n  return colors[0];\r\n}","import React from \"react\";\r\nimport { Placemark } from 'react-yandex-maps';\r\nimport { gray } from '../common/constants/colors';\r\nimport { PRODUCT_TAB } from \"../common/constants/tabs\";\r\nimport { getColor } from '../common/getColor';\r\n\r\nfunction Mark({ selectedStations, selectedIds, tab }) {\r\n  return <div>\r\n    { selectedStations.map(station => {\r\n      const idForColor = tab === PRODUCT_TAB ? station.productId : station.regionId;\r\n      const color = station.done ? gray : getColor(selectedIds, idForColor);\r\n\r\n      return <Placemark\r\n        key={station.key}\r\n        geometry={station.place}\r\n        modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n        properties={{\r\n          balloonContentHeader: `${station.stationName}`,\r\n          balloonContent: `Продукт: ${station.productName} --- ${station.done ? 'Выполнено!' : `Надо: ${station.needCount}`}`,\r\n          balloonContentFooter: station.region,\r\n        }}\r\n        options={{\r\n          preset: 'islands#circleIcon',\r\n          iconColor: color,\r\n        }}\r\n      /> })}\r\n  </div>\r\n}\r\n\r\nexport default Mark;\r\n","const StationSelector = {\r\n  getSelectedByProductStations: state => state.station.selectedByProductStations,\r\n  getSelectedByRegionStations: state => state.station.selectedByRegionStations,\r\n};\r\n\r\nexport default StationSelector;","const ProductSelector = {\r\n  getProductTableVisibility: state => state.product.productTableVisibility,\r\n\r\n  getSelectedProductIds: state => state.product.selectedProductIds,\r\n\r\n  getNextProductColorIndex: state => state.product.nextProductColorIndex,\r\n\r\n  getAllProducts: state => state.product.allProducts,\r\n};\r\n\r\nexport default ProductSelector;","const RegionSelector = {\r\n    getRegionTableVisibility: state => state.region.regionTableVisibility,\r\n  \r\n    getSelectedRegionIds: state => state.region.selectedRegionIds,\r\n\r\n    getNextRegionColorIndex: state => state.region.nextRegionColorIndex,\r\n\r\n    getAllRegions: state => state.region.allRegions,\r\n  };\r\n  \r\n  export default RegionSelector;","const TabSelector = {\r\n  getActiveTab: state => state.tab.activeTab,\r\n};\r\n\r\nexport default TabSelector;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { YMaps, Map } from 'react-yandex-maps';\r\nimport styles from './TinyMap.module.css';\r\n\r\nimport { PRODUCT_TAB, REGION_TAB } from '../common/constants/tabs';\r\nimport Marks from './Marks';\r\n\r\nimport StationSelector from '../resources/station/station.selector';\r\nimport ProductSelector from '../resources/product/product.selector';\r\nimport RegionSelector from '../resources/region/region.selector';\r\nimport TabSelector from '../resources/tab/tab.selector';\r\n\r\nfunction TinyMap({\r\n  selectedProductIds,\r\n  selectedByProductStations,\r\n\r\n  selectedRegionIds,\r\n  selectedByRegionStations,\r\n\r\n  activeTab\r\n}) {\r\n  return <YMaps>\r\n    <Map className={styles.map} defaultState={{ center:[19.441468, 17.496825], zoom: 2 }}>\r\n      { activeTab === PRODUCT_TAB && <Marks\r\n        selectedStations={selectedByProductStations}\r\n        selectedIds={selectedProductIds}\r\n        tab={PRODUCT_TAB}\r\n      />}\r\n      { activeTab === REGION_TAB && <Marks\r\n        selectedStations={selectedByRegionStations}\r\n        selectedIds={selectedRegionIds}\r\n        tab={REGION_TAB}\r\n      />}\r\n    </Map>\r\n  </YMaps>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedProductIds: ProductSelector.getSelectedProductIds(state),\r\n  selectedByProductStations: StationSelector.getSelectedByProductStations(state),\r\n  \r\n  selectedRegionIds: RegionSelector.getSelectedRegionIds(state),\r\n  selectedByRegionStations: StationSelector.getSelectedByRegionStations(state),\r\n\r\n  activeTab: TabSelector.getActiveTab(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(TinyMap);","const UserSelector = {\r\n  getCurrentUser: state => state.user.currentUser,\r\n\r\n  getError: state => state.user.errorType,\r\n\r\n  getUserRatings: state => state.user.userRatings,\r\n};\r\n\r\nexport default UserSelector;","export const LOG_OUT = 'LOG_OUT';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Avatar, Button, Popconfirm } from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport styles from './Header.module.css';\r\n\r\nimport UserSelector from '../resources/user/user.selector';\r\nimport RootAction from '../resources/root.action';\r\n\r\nfunction User({ currentUser, logOut }) {\r\n\r\n  const changeUser = () => {\r\n    logOut();\r\n    localStorage.setItem('user-token', '');\r\n  };\r\n\r\n  return <div className={styles.user}>\r\n    <Popconfirm\r\n      title=\"Хотите уйти\"\r\n      icon={<QuestionCircleOutlined style={{ color: 'red' }}/>}\r\n      onConfirm={changeUser}\r\n    >\r\n      <Button\r\n        size=\"small\"\r\n        className={styles['user-button']}>\r\n        Сменить власть\r\n      </Button>\r\n    </Popconfirm>\r\n    <Avatar size={50} className={styles.avatar}>\r\n        {currentUser ? currentUser.name : 'Гость'}\r\n    </Avatar>\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logOut: RootAction.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User)","import { LOG_OUT } from \"./root.types\";\r\n\r\nconst RootAction = {\r\n  logOut: () => dispatch => dispatch({ type: LOG_OUT }),\r\n}\r\nexport default RootAction;\r\n","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nexport default function Logo() {\r\n  return <h2 className={styles.logo}> Tiny-Map </h2>\r\n}\r\n","import React from 'react';\r\nimport User from './User';\r\nimport Logo from './Logo';\r\nimport styles from './Header.module.css';\r\n\r\nexport default function Header() {\r\n  return <div className={styles.header}>\r\n    <Logo />\r\n    <User />\r\n  </div>\r\n};\r\n","import axios from 'axios';\r\nimport { BASE_URL } from './constants/baseURL';\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 2000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\nexport default api;","export const BASE_URL = 'https://stormy-brook-68283.herokuapp.com'; \r\n// export const BASE_URL = 'http://localhost:3001';","export const SWITCH_ON_PRODUCT_TABLE_VISIBILITY = 'SWITCH_ON_PRODUCT_TABLE_VISIBILITY';\r\n\r\nexport const GET_ALL_PRODUCTS = 'GET_ALL_PRODUCTS';\r\n\r\nexport const PUSH_SELECTED_PRODUCT_ID = 'PUSH_SELECTED_PRODUCT_ID';\r\nexport const DELETE_SELECTED_PRODUCT_ID = 'DELETE_SELECTED_PRODUCT_ID';","import api from '../../common/base.api';\r\nimport {\r\n  SWITCH_ON_PRODUCT_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_PRODUCT_ID,\r\n  DELETE_SELECTED_PRODUCT_ID,\r\n  GET_ALL_PRODUCTS,\r\n} from './product.types';\r\n\r\nconst ProductActions = {\r\n  switchOnProductTableVisibility: () => dispatch => dispatch({ type: SWITCH_ON_PRODUCT_TABLE_VISIBILITY }),\r\n\r\n  getAllProducts: () => dispatch =>\r\n    api.get('/product').then(response => response.data)\r\n    .then(products => dispatch({ type: GET_ALL_PRODUCTS, products })),\r\n\r\n  pushSelectedProductId: productId => dispatch => dispatch({\r\n    type: PUSH_SELECTED_PRODUCT_ID,\r\n    productId,\r\n  }),\r\n\r\n  deleteSelectedProductId: productId => dispatch => dispatch({\r\n    type: DELETE_SELECTED_PRODUCT_ID,\r\n    productId,\r\n  })\r\n};\r\n\r\nexport default ProductActions;","export const CREATE_STATION = 'CREATE_STATION';\r\n\r\nexport const PUSH_SELECTED_BY_PRODUCT_STATIONS = 'PUSH_SELECTED_BY_PRODUCT_STATIONS';\r\nexport const PUSH_SELECTED_BY_REGION_STATIONS = 'PUSH_SELECTED_BY_REGION_STATIONS';\r\n\r\nexport const DELETE_SELECTED_BY_PRODUCT_STATIONS = 'DELETE_SELECTED_BY_PRODUCT_STATIONS';\r\nexport const DELETE_SELECTED_BY_REGION_STATIONS = 'DELETE_SELECTED_BY_REGION_STATIONS';\r\n\r\nexport const UPDATE_STATION_DONE = 'UPDATE_STATION_DONE';","import {\r\n  CREATE_STATION,\r\n  PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n  PUSH_SELECTED_BY_REGION_STATIONS,\r\n  DELETE_SELECTED_BY_PRODUCT_STATIONS,\r\n  DELETE_SELECTED_BY_REGION_STATIONS,\r\n  UPDATE_STATION_DONE,\r\n} from './station.types';\r\nimport api from '../../common/base.api';\r\n\r\nconst StationActions = {\r\n  createStation: newStationData => async dispatch => {\r\n    await api.post('/station', newStationData);\r\n    return dispatch({ type: CREATE_STATION });\r\n  },\r\n  \r\n  pushSelectedByProductStations: (productId, currentUser, colorForMap) => async dispatch => {\r\n    const response = await api.post(`/station/product/${productId}`, currentUser);\r\n    const stationsData = response.data;\r\n    return dispatch({\r\n      type: PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n      stationsData: stationsData.map(station => {\r\n        station.colorForMap = colorForMap;\r\n        return station;\r\n      }),\r\n    });\r\n  },\r\n\r\n  pushSelectedByRegionStations: (regionId, currentUser) => async dispatch => {\r\n    const response = await api.post(`/station/region/${regionId}`, currentUser);\r\n    const stationsData = response.data;\r\n    return dispatch({\r\n      type: PUSH_SELECTED_BY_REGION_STATIONS,\r\n      stationsData,\r\n    });\r\n  },\r\n\r\n  updateStationDone: ({ stationId, currentUser, done }) => async dispatch => {\r\n    const response = await api.post(`/station/${stationId}/done`, { ...currentUser, done });\r\n    const stationData = response.data;\r\n    return dispatch({\r\n      type: UPDATE_STATION_DONE,\r\n      stationData: {\r\n        ...stationData,\r\n        done,\r\n      }\r\n    });\r\n  },\r\n\r\n  deleteSelectedByProductStations: product => dispatch => dispatch({\r\n    type: DELETE_SELECTED_BY_PRODUCT_STATIONS,\r\n    product,\r\n  }),\r\n\r\n  deleteSelectedByRegionStations: region => dispatch => dispatch({\r\n    type: DELETE_SELECTED_BY_REGION_STATIONS,\r\n    region,\r\n  }),\r\n};\r\n\r\nexport default StationActions;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Select, Tag } from 'antd';\r\nimport styles from './ProductChoice.module.css';\r\n\r\nimport { getColor } from '../../common/getColor';\r\n\r\nimport ProductActions from '../../resources/product/product.actions';\r\nimport ProductSelector from '../../resources/product/product.selector';\r\nimport UserSelector from '../../resources/user/user.selector';\r\nimport StationActions from '../../resources/station/station.actions';\r\n\r\nfunction ProductSearch({\r\n  selectedProductIds,\r\n  nextProductColor,\r\n  allProductsData,\r\n  currentUser,\r\n\r\n  switchOnProductTableVisibility,\r\n  pushSelectedProductIds,\r\n  deleteSelectedProductId,\r\n  pushSelectedByProductStations,\r\n  deleteSelectedByProductStations,\r\n}) {\r\n  const [productsInSearch, setProductsInSearch] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const productsForSearch = allProductsData.map(product => ({\r\n      value: product._id,\r\n      label: product.name,\r\n    }));\r\n    setProductsInSearch(productsForSearch);\r\n  }, [allProductsData]);\r\n\r\n  const onSelect = productId => {\r\n    if (productId && !selectedProductIds.includes(productId)) {\r\n      pushSelectedByProductStations(productId, currentUser, nextProductColor);\r\n      switchOnProductTableVisibility();\r\n      pushSelectedProductIds(productId);\r\n    }\r\n  };\r\n  \r\n  const onDeselect = productId => {\r\n    deleteSelectedProductId(productId);\r\n    const productForDelete = allProductsData.find(product => product._id === productId);\r\n    deleteSelectedByProductStations(productForDelete);\r\n  }\r\n\r\n  const tagRender = (props) => {\r\n    const { label, closable, onClose, value } = props;\r\n    const onPreventMouseDown = event => {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    };\r\n    const color = getColor(selectedProductIds, value);\r\n    return (\r\n      <Tag\r\n        color={color}\r\n        onMouseDown={onPreventMouseDown}\r\n        closable={closable}\r\n        onClose={onClose}\r\n        style={{ marginRight: 3 }}\r\n      >\r\n        {label}\r\n      </Tag>\r\n    );\r\n  }\r\n\r\n  return <div className={styles.search}>\r\n    <Select\r\n      mode=\"multiple\"\r\n      size=\"large\"\r\n      showArrow\r\n      style={{ width: '100%' }}\r\n      placeholder=\"выберите продукт\"\r\n      tagRender={tagRender}\r\n      options={productsInSearch}\r\n      onSelect={onSelect}\r\n      onDeselect={onDeselect}\r\n    />\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedProductIds: ProductSelector.getSelectedProductIds(state),\r\n  nextProductColor: ProductSelector.getNextProductColorIndex(state),\r\n  allProductsData: ProductSelector.getAllProducts(state),\r\n\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  switchOnProductTableVisibility: ProductActions.switchOnProductTableVisibility,\r\n  pushSelectedProductIds: ProductActions.pushSelectedProductId,\r\n  deleteSelectedProductId: ProductActions.deleteSelectedProductId,\r\n\r\n  pushSelectedByProductStations: StationActions.pushSelectedByProductStations,\r\n  deleteSelectedByProductStations: StationActions.deleteSelectedByProductStations,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductSearch)","import { Switch } from \"antd\";\r\nimport { connect } from 'react-redux';\r\nimport UserSelector from '../../../resources/user/user.selector';\r\nimport StationActions from \"../../../resources/station/station.actions\";\r\n\r\nfunction DoneSwitch({ station, currentUser, updateStationDone }) {\r\n  function onChange(checked) {\r\n    updateStationDone({\r\n      stationId: station.stationId,\r\n      currentUser,\r\n      done: checked,\r\n    });\r\n  }\r\n\r\n  if (!currentUser) {\r\n    return <div></div>\r\n  }\r\n  if (station.done) {\r\n    return <Switch onChange={onChange} defaultChecked/>\r\n  }\r\n  return <Switch onChange={onChange} />\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateStationDone: StationActions.updateStationDone,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoneSwitch);","import StationDoneSwitch from \"./StationDoneSwitch\";\r\n\r\nconst tableColumns = [\r\n  {\r\n    title: 'Продукт',\r\n    dataIndex: 'productName',\r\n    sorter: (a, b) => {\r\n      if (a.productName > b.productName) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n  {\r\n    title: 'Станция',\r\n    dataIndex: 'stationName',\r\n    sorter: (a, b) => {\r\n      if (a.stationName > b.stationName) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n  {\r\n    title: 'Нужно',\r\n    dataIndex: 'needCount',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.needCount - b.needCount,\r\n  },\r\n  {\r\n    title: 'Выполнено',\r\n    render: station => <StationDoneSwitch station={station} />,\r\n    filters: [\r\n      {\r\n        text: 'Выполненые',\r\n        value: true,\r\n      },\r\n      {\r\n        text: 'Невыполненые',\r\n        value: false,\r\n      },\r\n    ],\r\n    onFilter: (value, station) => station.done === value,\r\n  },\r\n  {\r\n    title: 'Регион',\r\n    dataIndex: 'regionName',\r\n    sorter: (a, b) => {\r\n      if (a.region > b.region) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n];\r\n\r\nexport default tableColumns;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StationSelector from '../../resources/station/station.selector';\r\nimport { Table } from 'antd';\r\nimport tableColumns from '../../common/components/tableConfig/tableColumns';\r\n\r\nfunction ProductTable({ selectedByProductStations }) {\r\n  return <Table\r\n    columns={tableColumns}\r\n    dataSource={selectedByProductStations}\r\n    size=\"middle\"\r\n    pagination={{ pageSize: 7 }}\r\n  />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedByProductStations: StationSelector.getSelectedByProductStations(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProductTable);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProductSearch from './ProductSearch';\r\nimport ProductTable from './ProductTable';\r\nimport styles from './ProductChoice.module.css';\r\nimport ProductSelector from '../../resources/product/product.selector';\r\n\r\nfunction ProductChoice({ productTableVisability }) {\r\n  return <div>\r\n    <ProductSearch/>\r\n    { productTableVisability && \r\n      <ProductTable\r\n        className={styles.table}\r\n      /> }\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  productTableVisability: ProductSelector.getProductTableVisibility(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProductChoice);","export const SWITCH_ON_REGION_TABLE_VISIBILITY = 'SWITCH_ON_REGION_TABLE_VISIBILITY';\r\n\r\nexport const GET_ALL_REGIONS = 'GET_ALL_REGIONS';\r\n\r\nexport const PUSH_SELECTED_REGION_ID = 'PUSH_SELECTED_REGION_ID';\r\nexport const DELETE_SELECTED_REGION_ID = 'DELETE_SELECTED_REGION_ID';","import api from '../../common/base.api';\r\nimport {\r\n  SWITCH_ON_REGION_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_REGION_ID,\r\n  DELETE_SELECTED_REGION_ID,\r\n  GET_ALL_REGIONS,\r\n} from './region.types';\r\n\r\nconst RegionActions = {\r\n  switchOnRegionTableVisibility: () => dispatch => dispatch({ type: SWITCH_ON_REGION_TABLE_VISIBILITY }),\r\n\r\n  getAllRegions: () => dispatch =>\r\n    api.get('/region').then(response => response.data)\r\n    .then(regions => dispatch({ type: GET_ALL_REGIONS, regions })),\r\n\r\n  pushSelectedRegionId: regionId => dispatch => dispatch({\r\n    type: PUSH_SELECTED_REGION_ID,\r\n    regionId,\r\n  }),\r\n\r\n  deleteSelectedRegionId: regionId => dispatch => dispatch({\r\n    type: DELETE_SELECTED_REGION_ID,\r\n    regionId,\r\n  })\r\n};\r\n\r\nexport default RegionActions;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Select, Tag } from 'antd';\r\nimport styles from './RegionChoice.module.css';\r\n\r\nimport { getColor } from '../../common/getColor';\r\n\r\nimport RegionActions from '../../resources/region/region.actions';\r\nimport RegionSelector from '../../resources/region/region.selector';\r\nimport UserSelector from '../../resources/user/user.selector';\r\nimport StationActions from '../../resources/station/station.actions';\r\n\r\nfunction RegionSearch({\r\n  selectedRegionIds,\r\n  nextRegionColor,\r\n  allRegionsData,\r\n  currentUser,\r\n\r\n  switchOnRegionTableVisibility,\r\n  pushSelectedRegionId,\r\n  deleteSelectedRegionId,\r\n  pushSelectedByRegionStations,\r\n  deleteSelectedByRegionStations,\r\n}) {\r\n  const [regionsInSearch, setRegionsInSearch] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const regionsForSearch = allRegionsData.map(region => ({\r\n      value: region._id,\r\n      label: region.name,\r\n    }));\r\n    setRegionsInSearch(regionsForSearch);\r\n  }, [allRegionsData]);\r\n\r\n  const onSelect = regionId => {\r\n    if (regionId && !selectedRegionIds.includes(regionId)) {\r\n      pushSelectedRegionId(regionId);\r\n      pushSelectedByRegionStations(regionId, currentUser);\r\n      switchOnRegionTableVisibility();\r\n    }\r\n  };\r\n  \r\n  const onDeselect = regionId => {\r\n    deleteSelectedRegionId(regionId);\r\n    const regionForDelete = allRegionsData.find(region => region._id === regionId);\r\n    deleteSelectedByRegionStations(regionForDelete);\r\n  }\r\n\r\n  const tagRender = (props) => {\r\n    const { label, closable, onClose, value } = props;\r\n    const onPreventMouseDown = event => {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    };\r\n    const color = getColor(selectedRegionIds, value);\r\n    return (\r\n      <Tag\r\n        color={color}\r\n        onMouseDown={onPreventMouseDown}\r\n        closable={closable}\r\n        onClose={onClose}\r\n        style={{ marginRight: 3 }}\r\n      >\r\n        {label}\r\n      </Tag>\r\n    );\r\n  }\r\n\r\n  return <div className={styles.search}>\r\n    <Select\r\n      mode=\"multiple\"\r\n      size=\"large\"\r\n      showArrow\r\n      style={{ width: '100%' }}\r\n      placeholder=\"выберите регион\"\r\n      tagRender={tagRender}\r\n      options={regionsInSearch}\r\n      onSelect={onSelect}\r\n      onDeselect={onDeselect}\r\n    />\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRegionIds: RegionSelector.getSelectedRegionIds(state),\r\n  nextRegionColor: RegionSelector.getNextRegionColorIndex(state),\r\n  allRegionsData: RegionSelector.getAllRegions(state),\r\n\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  switchOnRegionTableVisibility: RegionActions.switchOnRegionTableVisibility,\r\n  pushSelectedRegionId: RegionActions.pushSelectedRegionId,\r\n  deleteSelectedRegionId: RegionActions.deleteSelectedRegionId,\r\n\r\n  pushSelectedByRegionStations: StationActions.pushSelectedByRegionStations,\r\n  deleteSelectedByRegionStations: StationActions.deleteSelectedByRegionStations,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegionSearch)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StationSelector from '../../resources/station/station.selector';\r\nimport { Table } from 'antd';\r\nimport tableColumns from '../../common/components/tableConfig/tableColumns';\r\n\r\nfunction RegionTable({ selectedByRegionStations }) {\r\n  return <Table\r\n    columns={tableColumns}\r\n    dataSource={selectedByRegionStations}\r\n    size=\"middle\"\r\n    pagination={{ pageSize: 7 }}\r\n  />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedByRegionStations: StationSelector.getSelectedByRegionStations(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(RegionTable);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport RegionSearch from './RegionSearch';\r\nimport RegionTable from './RegionTable';\r\nimport styles from './RegionChoice.module.css';\r\nimport RegionSelector from '../../resources/region/region.selector';\r\n\r\nfunction RegionChoice({ regionTableVisability }) {\r\n  return <div>\r\n    <RegionSearch />\r\n    { regionTableVisability && \r\n      <RegionTable\r\n        className={styles.table}\r\n      /> }\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  regionTableVisability: RegionSelector.getRegionTableVisibility(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(RegionChoice);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Input, Button, Select, Switch } from 'antd';\r\nimport UserSelector from '../../resources/user/user.selector';\r\nimport StationActions from '../../resources/station/station.actions';\r\n\r\nfunction NewStation({ currentUser, createStation }){\r\n  const onFinish = async newStationData => {\r\n    newStationData.userId = currentUser._id;\r\n    createStation(newStationData);\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return <Form \r\n    labelCol={{ span: 7 }}\r\n    wrapperCol={{ span: 14 }}\r\n    layout=\"horizontal\"\r\n    onFinish={onFinish}\r\n    onFinishFailed={onFinishFailed}>\r\n\r\n    <Form.Item label=\"Продукт\" name=\"productName\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Станция\" name=\"stationName\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Координаты\" name=\"place\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Регион\" name=\"region\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Сколько нужно\" name=\"needCount\">\r\n      <Select>\r\n        <Select.Option value={25}>25</Select.Option>\r\n        <Select.Option value={50}>50</Select.Option>\r\n        <Select.Option value={150}>150</Select.Option>\r\n        <Select.Option value={350}>350</Select.Option>\r\n        <Select.Option value={1000}>1000</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Выполнено\" name=\"done\" valuePropName=\"checked\">\r\n      <Switch />\r\n    </Form.Item>\r\n\r\n    <Form.Item wrapperCol={{span: 14, offset: 7}}>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n      Добавить\r\n      </Button>\r\n    </Form.Item>\r\n\r\n  </Form>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  createStation: StationActions.createStation,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewStation);\r\n","export const CHANGE_ACTIVE_TAB = 'CHANGE_ACTIVE_TAB';","import {\r\n  CHANGE_ACTIVE_TAB,\r\n} from './tab.types';\r\n\r\nconst TabActions = {\r\n  changeActiveTab: newActiveTabKey => dispatch => dispatch({ type: CHANGE_ACTIVE_TAB, newActiveTabKey }),\r\n};\r\n\r\nexport default TabActions;","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const GET_PROFILE_BY_TOKEN = 'GET_PROFILE_BY_TOKEN';\r\n\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const LOG_IN_ERROR = 'LOG_IN_ERROR';\r\nexport const SIGN_UP = 'SIGN_UP';\r\nexport const SIGN_UP_ERROR = 'SIGN_UP_ERROR';\r\n\r\nexport const RESOLVE_ERROR = 'RESOLVE_ERROR';\r\n\r\nexport const RATING = 'RATING';","import {\r\n  SET_CURRENT_USER,\r\n  GET_PROFILE_BY_TOKEN,\r\n  LOG_IN,\r\n  LOG_IN_ERROR,\r\n  SIGN_UP,\r\n  SIGN_UP_ERROR,\r\n  RESOLVE_ERROR,\r\n  RATING,\r\n} from './user.types';\r\nimport api from '../../common/base.api';\r\n\r\nconst UserActions = {\r\n  setCurrentUser: id => async dispatch => {\r\n    const response = await api.get(`/user/${id}`);\r\n    const currentUser = response.data;\r\n    return dispatch({ type: SET_CURRENT_USER, currentUser });\r\n  },\r\n\r\n  getProdileByToken: token => async dispatch => {\r\n    if (!token) return;\r\n    const response = await api.get('/user/profile', { headers: { \"Authorization\" : `Bearer ${token}` } });\r\n    console.log({ response });\r\n    const currentUser = response.data;\r\n    if (currentUser.name) {\r\n      return dispatch({ type: GET_PROFILE_BY_TOKEN, currentUser });\r\n    }\r\n  },\r\n\r\n  logIn: (username, password) => async dispatch => {\r\n    const response = await api.post('/user/login', { username, password });\r\n    const currentUser = response.data;\r\n    if (currentUser.errorMessage) {\r\n      return dispatch({ type: LOG_IN_ERROR, errorMessage: currentUser.errorMessage });\r\n    }\r\n    if (currentUser.access_token) {\r\n      localStorage.setItem('user-token', currentUser.access_token);\r\n    }\r\n    return dispatch({ type: LOG_IN, currentUser });\r\n  },\r\n\r\n  signUp: (username, password) => async dispatch => {\r\n    const response = await api.post('/user/sign-up', { username, password });\r\n    const currentUser = response.data;\r\n    if (currentUser.errorMessage) {\r\n      return dispatch({ type: SIGN_UP_ERROR, errorMessage: currentUser.errorMessage });\r\n    }\r\n    if (currentUser.access_token) {\r\n      localStorage.setItem('user-token', currentUser.access_token);\r\n    }\r\n    return dispatch({ type: SIGN_UP, currentUser });\r\n  },\r\n\r\n  resolveError: () => dispatch => dispatch({ type: RESOLVE_ERROR }),\r\n\r\n  getRating: () => async dispatch => {\r\n    const response = await api.get('user/rating');\r\n    const userRatings = response.data;\r\n    return dispatch({ type: RATING, userRatings });\r\n  }\r\n};\r\n\r\nexport default UserActions;","const tableColumns = [\r\n  {\r\n    title: 'Имя',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: 'Рейтинг',\r\n    dataIndex: 'rating',\r\n  },\r\n];\r\n\r\nexport default tableColumns;","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table } from 'antd';\r\nimport UserSelector from '../../resources/user/user.selector';\r\nimport UserActions from '../../resources/user/user.actions';\r\nimport tableColumns from './tableColumns';\r\n\r\nfunction Rating({ currentUser, userRatings, getRating }){\r\n  useEffect(() => {\r\n    getRating();\r\n  }, [userRatings, getRating]);\r\n\r\n  return <Table\r\n    columns={tableColumns}\r\n    dataSource={userRatings}\r\n    size=\"middle\"\r\n    pagination={{ pageSize: 7 }}\r\n  />\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n  userRatings: UserSelector.getUserRatings(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getRating: UserActions.getRating,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Rating);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Tabs } from 'antd';\r\nimport styles from './MainMenu.module.css';\r\nimport {\r\n  PRODUCT_TAB,\r\n  REGION_TAB,\r\n  CREATE_STATION_TAB,\r\n  RATING_TAB,\r\n} from '../common/constants/tabs';\r\nimport ProductChoice from './ProductChoice/ProductChoice';\r\nimport RegionChoice from './RegionChoice/RegionChoice';\r\nimport NewStation from './NewStation/NewStation';\r\nimport TabActions from '../resources/tab/tab.actions';\r\nimport UserSelector from '../resources/user/user.selector';\r\nimport Rating from './Rating/Rating';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction MainMenu({ currentUser, changeActiveTab }) {\r\n  const tabChange = key => {\r\n    changeActiveTab(key);\r\n  };\r\n\r\n  return <div>\r\n    <Tabs defaultActiveKey=\"1\" onChange={tabChange} className={styles.tabs}>\r\n      <TabPane tab=\"По продуктам\" key={PRODUCT_TAB}>\r\n        <ProductChoice />\r\n      </TabPane>\r\n      <TabPane tab=\"По регионам\" key={REGION_TAB}>\r\n        <RegionChoice />\r\n      </TabPane>\r\n      {currentUser.isAdmin && <TabPane tab=\"Добавить новую станцию\" key={CREATE_STATION_TAB}>\r\n        <NewStation />\r\n      </TabPane>}\r\n      <TabPane tab=\"Рейтинг\" key={RATING_TAB}>\r\n        <Rating />\r\n      </TabPane>\r\n    </Tabs>\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  changeActiveTab: TabActions.changeActiveTab,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainMenu);\r\n","import { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport styles from './Authorization.module.css';\r\nimport UserActions from '../resources/user/user.actions';\r\nimport UserSelector from '../resources/user/user.selector';\r\n\r\nconst LogIn = ({\r\n  errorType,\r\n  logIn,\r\n  resolveError,\r\n}) => {\r\n  const [nameStatus, setNameStatus] = useState('');\r\n  const [nameHelp, setNameHelp] = useState(null);\r\n  const [passwordStatus, setPasswordStatus] = useState('');\r\n  const [passwordHelp, setPasswordHelp] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (errorType === 'USER_NOT_EXIST') {\r\n      setNameStatus('error');\r\n      setNameHelp('Такого пользователя не существует');\r\n    }\r\n    if (errorType === 'WRONG_PASSWORD') {\r\n      setPasswordStatus('error');\r\n      setPasswordHelp('Неправильный пароль');\r\n    }\r\n  },[errorType]);\r\n\r\n  const onFinish = ({ username, password }) => {\r\n    logIn(username, password);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const onChange = () => {\r\n    if (errorType) {\r\n      resolveError();\r\n      setNameStatus('');\r\n      setNameHelp(null);\r\n      setPasswordStatus('');\r\n      setPasswordHelp(null);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      layout='vertical'\r\n      wrapperCol={{ span: 16 }}\r\n      name=\"login\"\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n      className={styles['login-form']}\r\n      onChange={onChange}\r\n    >\r\n      <Form.Item\r\n        label=\"Имя пользователя\"\r\n        name=\"username\"\r\n        validateStatus={nameStatus}\r\n        help={nameHelp}\r\n        rules={[{\r\n          required: true,\r\n          message: 'Введите имя пользователя',\r\n        }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Пароль\"\r\n        name=\"password\"\r\n        validateStatus={passwordStatus}\r\n        help={passwordHelp}\r\n        rules={[{\r\n          required: true,\r\n          message: 'Введите пароль',\r\n        }]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className={styles['submit-button']}>Подтвердить</Button>\r\n        <Form.Item name=\"remember\" valuePropName=\"checked\" className={styles['remember-me']}>\r\n          <Checkbox>Запомнить меня</Checkbox>\r\n        </Form.Item>\r\n      </Form.Item>\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errorType: UserSelector.getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logIn: UserActions.logIn,\r\n  resolveError: UserActions.resolveError,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);\r\n","import { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport styles from './Authorization.module.css';\r\n\r\nimport UserActions from '../resources/user/user.actions';\r\nimport UserSelector from '../resources/user/user.selector';\r\nimport ProductActions from '../resources/product/product.actions';\r\nimport RegionActions from '../resources/region/region.actions';\r\n\r\nconst SignUp = ({\r\n  errorType,\r\n  signUp,\r\n  resolveError,\r\n  getAllProducts,\r\n  getAllRegions\r\n}) => {\r\n  const [validateStatus, setValidateStatus] = useState('');\r\n  const [help, setHelp] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (errorType) {\r\n      setValidateStatus('error');\r\n      setHelp('Такой пользователь уже существует');\r\n    }\r\n  },[errorType]);\r\n\r\n  const onFinish = async ({ username, password }) => {\r\n    signUp(username, password);\r\n    console.log({ errorType });\r\n    getAllProducts();\r\n    getAllRegions();\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const onChange = () => {\r\n    if (errorType) {\r\n      resolveError();\r\n      setValidateStatus('');\r\n      setHelp(null);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      layout='vertical'\r\n      wrapperCol={{ span: 16 }}\r\n      name=\"sign-up\"\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n      className={styles['login-form']}\r\n      onChange={onChange}\r\n    >\r\n      <Form.Item\r\n        label=\"Имя пользователя\"\r\n        name=\"username\"\r\n        validateStatus={validateStatus}\r\n        help={help}\r\n        rules={[{\r\n          required: true,\r\n          message: 'Введите имя пользователя',\r\n        }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Пароль\"\r\n        name=\"password\"\r\n        rules={[{\r\n          required: true,\r\n          message: 'Введите пароль',\r\n        }]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Повторите пароль\"\r\n        name=\"repassword\"\r\n        rules={[{\r\n          required: true,\r\n          message: 'Повторите пароль',\r\n        },\r\n        ({ getFieldValue }) => ({\r\n          validator(_, value) {\r\n            if (!value || getFieldValue('password') === value) {\r\n              return Promise.resolve();\r\n            }\r\n            return Promise.reject(new Error('Не совпадают!'));\r\n          },\r\n        })]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">Вход</Button>\r\n        <Form.Item name=\"remember\" valuePropName=\"checked\" className={styles['remember-me']}>\r\n          <Checkbox>Запомнить меня</Checkbox>\r\n        </Form.Item>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errorType: UserSelector.getError(state),\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  signUp: UserActions.signUp,\r\n  resolveError: UserActions.resolveError,\r\n\r\n  getAllProducts: ProductActions.getAllProducts,\r\n\r\n  getAllRegions: RegionActions.getAllRegions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Tabs } from 'antd';\r\nimport {\r\n  LOG_IN,\r\n  SIGN_UP,\r\n} from '../common/constants/tabs';\r\nimport LogIn from './LogIn';\r\nimport SignUp from './SignUp';\r\nimport UserActions from '../resources/user/user.actions';\r\nimport ProductActions from '../resources/product/product.actions';\r\nimport RegionActions from '../resources/region/region.actions';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction Authorization({\r\n  getProdileByToken,\r\n  getAllProducts,\r\n  getAllRegions,\r\n}) {\r\n  useEffect(() => {\r\n    getProdileByToken(localStorage.getItem('user-token'));\r\n    getAllProducts();\r\n    getAllRegions();\r\n  }, [getAllProducts, getAllRegions, getProdileByToken]);\r\n\r\n  return <div>\r\n    <Tabs>\r\n      <TabPane tab=\"Вход\" key={LOG_IN}>\r\n        <LogIn />\r\n      </TabPane>\r\n      <TabPane tab=\"Регистрация\" key={SIGN_UP}>\r\n        <SignUp />\r\n      </TabPane>\r\n    </Tabs>\r\n  </div>\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getProdileByToken: UserActions.getProdileByToken,\r\n  getAllProducts: ProductActions.getAllProducts,\r\n  getAllRegions: RegionActions.getAllRegions,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Authorization);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './App.module.css';\r\nimport TinyMap from './TinyMap/TinyMap';\r\nimport Header from './Header/Header';\r\nimport 'antd/dist/antd.css';\r\nimport './common/common.css';\r\n\r\nimport {\r\n  Routes,\r\n  Route,\r\n} from \"react-router\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport UserSelector from './resources/user/user.selector';\r\nimport MainMenu from './MainMenu/MainMenu';\r\nimport Authorization from './Authorization/Authorization';\r\n\r\nfunction App({ currentUser }) {\r\n  return (\r\n    <div className={styles.app}>\r\n      <TinyMap />\r\n      <div className={styles.menu}>\r\n        <Header />\r\n        {currentUser ?\r\n          (<Router>\r\n            <Routes>\r\n              <Route path=\"/\" element={<MainMenu />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n            </Routes>\r\n          </Router>)\r\n          : (<Router>\r\n            <Routes>\r\n              <Route path=\"/login\" element={<Authorization />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n            </Routes>\r\n          </Router>)\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import {\r\n  SET_CURRENT_USER,\r\n  GET_PROFILE_BY_TOKEN,\r\n  LOG_IN,\r\n  LOG_IN_ERROR,\r\n  SIGN_UP,\r\n  SIGN_UP_ERROR,\r\n  RESOLVE_ERROR,\r\n  RATING,\r\n} from './user.types';\r\n\r\nconst initialState = {\r\n  currentUser: null,\r\n  errorType: null,\r\n  userRatings: null,\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n    case GET_PROFILE_BY_TOKEN:\r\n    case LOG_IN:\r\n    case SIGN_UP:\r\n      return {\r\n        ...state,\r\n        currentUser:{\r\n          name: action.currentUser.name,\r\n          _id: action.currentUser._id,\r\n          isAdmin: action.currentUser.isAdmin,\r\n        }\r\n      };\r\n\r\n    case LOG_IN_ERROR:\r\n    case SIGN_UP_ERROR:\r\n      return {\r\n        ...state,\r\n        errorType: action.errorMessage,\r\n      }\r\n\r\n    case RESOLVE_ERROR:\r\n      return {\r\n        ...state,\r\n        errorType: null,\r\n      }\r\n    \r\n    case RATING:\r\n      return {\r\n        ...state,\r\n        userRatings: action.userRatings,\r\n      }\r\n\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;","import {\r\n  SWITCH_ON_PRODUCT_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_PRODUCT_ID,\r\n  DELETE_SELECTED_PRODUCT_ID,\r\n  GET_ALL_PRODUCTS,\r\n} from './product.types';\r\nimport { colors } from '../../common/constants/colors';\r\n\r\nconst initialState = {\r\n  productTableVisibility: false,\r\n  selectedProductIds: [],\r\n  freeColors: [...colors],\r\n  allProducts: [],\r\n}\r\n\r\nconst productReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_PRODUCTS: \r\n      return {\r\n        ...state,\r\n        allProducts: action.products,\r\n      }\r\n    case SWITCH_ON_PRODUCT_TABLE_VISIBILITY: \r\n      return {\r\n        ...state,\r\n        productTableVisibility: true,\r\n      };\r\n    \r\n    case PUSH_SELECTED_PRODUCT_ID: {\r\n      const color = state.freeColors.pop();\r\n      return {\r\n        ...state,\r\n        selectedProductIds: [\r\n          ...state.selectedProductIds,\r\n          {\r\n            productId: action.productId,\r\n            color,\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    \r\n    case DELETE_SELECTED_PRODUCT_ID: {\r\n      const newSelectedProductIds = state.selectedProductIds;\r\n      const newFreeColors = state.freeColors;\r\n\r\n      const indexForDelete = state.selectedProductIds.findIndex(productData => {\r\n        return productData.productId === action.productId;\r\n      });\r\n      const productForDelete = newSelectedProductIds.splice(indexForDelete, 1);\r\n      newFreeColors.push(productForDelete[0].color);\r\n\r\n      return {\r\n        ...state,\r\n        selectedProductIds: newSelectedProductIds,\r\n        freeColors: newFreeColors,\r\n      };\r\n    }\r\n\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productReducer;","import {\r\n  SWITCH_ON_REGION_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_REGION_ID,\r\n  DELETE_SELECTED_REGION_ID,\r\n  GET_ALL_REGIONS,\r\n} from './region.types';\r\nimport { colors } from '../../common/constants/colors';\r\n\r\nconst initialState = {\r\n  regionTableVisibility: false,\r\n  selectedRegionIds: [],\r\n  freeColors: [...colors],\r\n  allRegions: [],\r\n}\r\n\r\nconst regionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_REGIONS: \r\n      return {\r\n        ...state,\r\n        allRegions: action.regions,\r\n      }\r\n    case SWITCH_ON_REGION_TABLE_VISIBILITY: \r\n      return {\r\n        ...state,\r\n        regionTableVisibility: true,\r\n      };\r\n\r\n    case PUSH_SELECTED_REGION_ID: {\r\n      const color = state.freeColors.pop();\r\n      return {\r\n        ...state,\r\n        selectedRegionIds: [\r\n          ...state.selectedRegionIds,\r\n          {\r\n            regionId: action.regionId,\r\n            color,\r\n          }\r\n        ]\r\n      };\r\n    }\r\n\r\n    case DELETE_SELECTED_REGION_ID: {\r\n      const newSelectedRegionIds = state.selectedRegionIds;\r\n      const newFreeColors = state.freeColors;\r\n\r\n      const indexForDelete = state.selectedRegionIds.findIndex(regionData => {\r\n        return regionData.regionId === action.regionId;\r\n      });\r\n      const regionForDelete = newSelectedRegionIds.splice(indexForDelete, 1);\r\n      newFreeColors.push(regionForDelete[0].color);\r\n\r\n      return {\r\n        ...state,\r\n        selectedRegionIds: newSelectedRegionIds,\r\n        freeColors: newFreeColors,\r\n      };\r\n    }\r\n\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default regionReducer;","import {\r\n  CREATE_STATION,\r\n  PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n  PUSH_SELECTED_BY_REGION_STATIONS,\r\n  DELETE_SELECTED_BY_PRODUCT_STATIONS,\r\n  DELETE_SELECTED_BY_REGION_STATIONS,\r\n  UPDATE_STATION_DONE,\r\n} from './station.types';\r\n\r\nconst initialState = {\r\n  selectedByProductStations: [],\r\n  selectedByRegionStations: [],\r\n};\r\n\r\nconst StationReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case PUSH_SELECTED_BY_PRODUCT_STATIONS: \r\n      return {\r\n        ...state,\r\n        selectedByProductStations: [\r\n          ...state.selectedByProductStations,\r\n          ...action.stationsData,\r\n        ],\r\n      };\r\n\r\n    case PUSH_SELECTED_BY_REGION_STATIONS:\r\n      return {\r\n        ...state,\r\n        selectedByRegionStations: [\r\n          ...state.selectedByRegionStations,\r\n          ...action.stationsData,\r\n        ]\r\n      }\r\n\r\n    case DELETE_SELECTED_BY_PRODUCT_STATIONS: {\r\n      const newStations = state.selectedByProductStations\r\n        .filter(station => station.productName !== action.product.name);\r\n      return {\r\n        ...state,\r\n        selectedByProductStations: newStations,\r\n      }\r\n    }\r\n\r\n    case DELETE_SELECTED_BY_REGION_STATIONS: {\r\n      const newStations = state.selectedByRegionStations\r\n        .filter(station => station.regionName !== action.region.name);\r\n      return {\r\n        ...state,\r\n        selectedByRegionStations: newStations,\r\n      }\r\n    }\r\n      \r\n\r\n    case UPDATE_STATION_DONE:\r\n      return updateStationDone(state, action);\r\n    \r\n    case CREATE_STATION: \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default StationReducer;\r\n\r\nfunction updateStationDone(state, action) {\r\n  const newProdStations = [];\r\n  for (const station of state.selectedByProductStations) {\r\n    if (station.stationId === action.stationData.stationId) {\r\n      newProdStations.push({\r\n        ...station,\r\n        done: action.stationData.done,\r\n      });\r\n    } else {\r\n      newProdStations.push(station);\r\n    }\r\n  }\r\n\r\n  const newRegStations = [];\r\n  for (const station of state.selectedByRegionStations) {\r\n    if (station.stationId === action.stationData.stationId) {\r\n      newRegStations.push({\r\n        ...station,\r\n        done: action.stationData.done,\r\n      });\r\n    } else {\r\n      newRegStations.push(station);\r\n    }\r\n  }\r\n  return {\r\n    ...state,\r\n    selectedByProductStations: newProdStations,\r\n    selectedByRegionStations: newRegStations,\r\n  }\r\n}","import {\r\n  CHANGE_ACTIVE_TAB,\r\n} from './tab.types';\r\nimport {\r\n  PRODUCT_TAB,\r\n} from '../../common/constants/tabs';\r\n\r\nconst initialState = {\r\n  activeTab: PRODUCT_TAB,\r\n};\r\n\r\nconst tabReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case CHANGE_ACTIVE_TAB:\r\n      return {\r\n        ...state,\r\n        activeTab: action.newActiveTabKey,\r\n      };\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default tabReducer;\r\n","import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport userReducer from './user/user.reducer';\r\nimport productReducer from './product/product.reducer';\r\nimport regionReducer from './region/region.reducer';\r\nimport stationReducer from './station/station.reducer';\r\nimport tabReducer from './tab/tab.reducer';\r\nimport { LOG_OUT } from './root.types';\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  product: productReducer,\r\n  region: regionReducer,\r\n  station: stationReducer,\r\n  tab: tabReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === LOG_OUT) {\r\n    return reducers(undefined, action);\r\n  }\r\n  return reducers(state, action);\r\n}\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './resources/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    <style>{'#root {width: 100%} '}</style>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__mWrfg\",\"logo\":\"Header_logo__3COiS\",\"user\":\"Header_user__1SWzi\",\"user-button\":\"Header_user-button__25kzA\",\"avatar\":\"Header_avatar__2EqOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form\":\"Authorization_login-form__1oUMC\",\"remember-me\":\"Authorization_remember-me__DqKaF\"};"],"sourceRoot":""}