{"version":3,"sources":["LogIn/LogIn.module.css","common/constants/tabs.js","common/constants/colors.js","map/Marks.js","resources/station/station.selector.js","resources/tab/tab.selector.js","map/TinyMap.js","resources/user/user.selector.js","common/constants/baseURL.js","api/base.api.js","api/product.api.js","resources/product/product.types.js","resources/product/product.actions.js","resources/product/product.selector.js","resources/station/station.types.js","resources/station/station.actions.js","productChoice/ProductSearch.js","api/station.api.js","common/constants/defaultUser.js","common/components/tableConfig/StationDoneSwitch.js","common/components/tableConfig/tableColumns.js","productChoice/ProductTable.js","productChoice/ProductChoice.js","api/region.api.js","resources/region/region.types.js","resources/region/region.actions.js","resources/region/region.selector.js","regionChoice/RegionSearch.js","regionChoice/RegionTable.js","regionChoice/RegionChoice.js","newStation/NewStation.js","resources/user/user.types.js","resources/user/user.actions.js","Header/User.js","Header/Logo.js","Header/Header.js","resources/tab/tab.types.js","resources/tab/tab.actions.js","MainMenu/MainMenu.js","LogIn/LogIn.js","App.js","resources/user/user.reducer.js","resources/product/product.reducer.js","resources/region/region.reducer.js","resources/station/station.reducer.js","resources/tab/tab.reducer.js","resources/store.js","index.js","styles.module.css"],"names":["module","exports","PRODUCT_TAB","REGION_TAB","colors","Mark","selectedStations","map","station","color","done","colorForMap","geometry","place","modules","properties","balloonContentHeader","stationName","balloonContent","productName","needCount","balloonContentFooter","region","options","preset","iconColor","StationSelector","getSelectedByProductStations","state","selectedByProductStations","getSelectedByRegionStations","selectedByRegionStations","TabSelector","getActiveTab","tab","activeTab","connect","className","styles","defaultState","center","zoom","Marks","UserSelector","getCurrentUser","user","currentUser","BASE_URL","api","axios","create","baseURL","timeout","headers","getAllProducts","a","baseApi","get","SWITCH_ON_PRODUCT_TABLE_VISIBILITY","PUSH_SELECTED_PRODUCT_ID","INC_PRODUCT_COLOR_INDEX","ProductActions","switchOnProductTableVisibility","dispatch","type","pushSelectedProductId","productId","incProductColorIndex","predIndex","colorIndex","ProductSelector","getProductTableVisibility","product","productTableVisibility","getSelectedProductIds","selectedProductIds","getNextProductColorIndex","nextProductColorIndex","PUSH_SELECTED_BY_PRODUCT_STATIONS","PUSH_SELECTED_BY_REGION_STATIONS","StationActions","pushSelectedByProductStations","fetch","_id","method","then","response","json","stationsData","pushSelectedByRegionStations","regionId","mapDispatchToProps","pushSelectedProductIds","incNextProductColor","nextProductColor","useState","productsInSearch","setProductsInSearch","allProducts","setAllProducts","selectedValue","setSelectedValue","useEffect","fetchProducts","ProductApi","productsData","productsForSearch","data","value","label","name","dropdownMatchSelectWidth","style","width","onSelect","includes","onSearch","newProducts","filter","toString","toLowerCase","indexOf","Search","size","placeholder","enterButton","postNewStation","newStationData","post","putStationDone","stationId","put","stationDone","Guest","onChange","checked","StationApi","defaultChecked","tableColumns","title","dataIndex","sorter","b","defaultSortOrder","render","StationDoneSwitch","columns","dataSource","productTableVisability","table","getAllRegions","SWITCH_ON_REGION_TABLE_VISIBILITY","PUSH_SELECTED_REGIONS_ID","INC_REGION_COLOR_INDEX","RegionActions","switchOnRegionTableVisibility","pushSelectedRegionId","incRegionColorIndex","RegionSelector","getRegionTableVisibility","regionTableVisibility","getSelectedRegionIds","selectedRegionIds","getNextRegionColorIndex","nextRegionColorIndex","pushSelectedRegionIds","nextRegionColor","regionsInSearch","setRegionsInSearch","allRegions","setAllRegions","fetchRegions","RegionApi","regionsData","regionsForSearch","console","log","regionName","newRegions","regionTableVisability","onFinish","userId","labelCol","span","wrapperCol","layout","onFinishFailed","errorInfo","Item","Option","valuePropName","Text","offset","htmlType","SET_CURRENT_USER","LOG_IN","UserActions","setCurrentUser","id","logIn","username","password","display","float","onClick","verticalAlign","margin","border","backgroundColor","Logo","height","Header","justifyContent","CHANGE_ACTIVE_TAB","TabActions","changeActiveTab","newActiveTabKey","TabPane","Tabs","defaultActiveKey","key","autoComplete","rules","required","message","Password","app","menu","path","element","to","initialState","userReducer","action","productReducer","regionReducer","StationReducer","tabReducer","reducers","combineReducers","stationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.97d4893d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form\":\"LogIn_login-form__2cejJ\"};","export const PRODUCT_TAB = 'PRODUCT_TAB';\r\nexport const REGION_TAB = 'REGION_TAB';\r\nexport const CREATE_STATION_TAB = 'CREATE_STATION_TAB';","export const colors = [\r\n    '#dc143c',\r\n    '#3caa3c',\r\n    '#156fc1',\r\n    '#eaec35',\r\n    '#942010',\r\n    '#0b0038',\r\n    '#ffb21f',\r\n    '#ffbcb5v',\r\n    '#6ac954'\r\n];\r\n\r\nexport const gray = '#c0c0c0';","import React from \"react\";\r\nimport { Placemark } from 'react-yandex-maps';\r\nimport { colors, gray } from '../common/constants/colors';\r\n\r\nfunction Mark({ selectedStations }) {\r\n  return <div>\r\n    { selectedStations.map(station => {\r\n      const color = station.done ? gray : colors[station.colorForMap];\r\n\r\n      return <Placemark\r\n        geometry={station.place}\r\n        modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n        properties={{\r\n          balloonContentHeader: `${station.stationName}`,\r\n          balloonContent: `Продукт: ${station.productName} --- ${station.done ? 'Выполнено!' : `Надо: ${station.needCount}`}`,\r\n          balloonContentFooter: station.region,\r\n        }}\r\n        options={{\r\n          preset: 'islands#circleIcon',\r\n          iconColor: color,\r\n        }}\r\n      /> })}\r\n  </div>\r\n}\r\n\r\nexport default Mark;","const StationSelector = {\r\n  getSelectedByProductStations: state => state.station.selectedByProductStations,\r\n  getSelectedByRegionStations: state => state.station.selectedByRegionStations,\r\n};\r\n\r\nexport default StationSelector;","const TabSelector = {\r\n  getActiveTab: state => state.tab.activeTab,\r\n};\r\n\r\nexport default TabSelector;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { YMaps, Map } from 'react-yandex-maps';\r\nimport styles from '../styles.module.css';\r\n\r\nimport { PRODUCT_TAB, REGION_TAB } from '../common/constants/tabs';\r\nimport Marks from './Marks';\r\n\r\nimport StationSelector from '../resources/station/station.selector';\r\nimport TabSelector from '../resources/tab/tab.selector';\r\n\r\nfunction TinyMap({ selectedByProductStations, selectedByRegionStations, activeTab }) {\r\n  return <YMaps>\r\n    <Map className={styles.map} defaultState={{ center:[19.441468, 17.496825], zoom: 2 }}>\r\n      { activeTab === PRODUCT_TAB && <Marks selectedStations={selectedByProductStations}/>}\r\n      { activeTab === REGION_TAB && <Marks selectedStations={selectedByRegionStations}/>}\r\n    </Map>\r\n  </YMaps>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedByProductStations: StationSelector.getSelectedByProductStations(state),\r\n  selectedByRegionStations: StationSelector.getSelectedByRegionStations(state),\r\n  activeTab: TabSelector.getActiveTab(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(TinyMap);","const UserSelector = {\r\n  getCurrentUser: state => state.user.currentUser,\r\n};\r\n\r\nexport default UserSelector;","export const BASE_URL = 'https://stormy-brook-68283.herokuapp.com';","import axios from 'axios';\r\nimport { BASE_URL } from '../common/constants/baseURL';\r\n\r\nconst api = axios.create({\r\n    baseURL: BASE_URL,\r\n    timeout: 2000,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n\r\nexport default api;","import baseApi from './base.api';\r\n\r\nclass ProductApi {\r\n  getAllProducts = async () => {\r\n    return baseApi.get('/product');\r\n  };\r\n}\r\n\r\nexport default new ProductApi();","export const SWITCH_ON_PRODUCT_TABLE_VISIBILITY = 'SWITCH_ON_PRODUCT_TABLE_VISIBILITY';\r\n\r\nexport const PUSH_SELECTED_PRODUCT_ID = 'PUSH_SELECTED_PRODUCT_ID';\r\n\r\nexport const INC_PRODUCT_COLOR_INDEX = 'INC_PRODUCT_COLOR_INDEX';","import {\r\n  SWITCH_ON_PRODUCT_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_PRODUCT_ID,\r\n  INC_PRODUCT_COLOR_INDEX,\r\n} from './product.types';\r\n\r\nconst ProductActions = {\r\n  switchOnProductTableVisibility: () => dispatch => dispatch({ type: SWITCH_ON_PRODUCT_TABLE_VISIBILITY }),\r\n\r\n  pushSelectedProductId: productId => dispatch => dispatch({ type: PUSH_SELECTED_PRODUCT_ID, productId}),\r\n\r\n  incProductColorIndex: predIndex => dispatch => dispatch({ type: INC_PRODUCT_COLOR_INDEX, colorIndex: predIndex + 1 })\r\n};\r\n\r\nexport default ProductActions;","const ProductSelector = {\r\n  getProductTableVisibility: state => state.product.productTableVisibility,\r\n\r\n  getSelectedProductIds: state => state.product.selectedProductIds,\r\n\r\n  getNextProductColorIndex: state => state.product.nextProductColorIndex,\r\n};\r\n\r\nexport default ProductSelector;","export const PUSH_SELECTED_BY_PRODUCT_STATIONS = 'PUSH_SELECTED_BY_PRODUCT_STATIONS';\r\nexport const PUSH_SELECTED_BY_REGION_STATIONS = 'PUSH_SELECTED_BY_REGION_STATIONS';","import {\r\n  PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n  PUSH_SELECTED_BY_REGION_STATIONS,\r\n} from './station.types';\r\nimport { BASE_URL } from '../../common/constants/baseURL';\r\n\r\nconst StationActions = {\r\n  pushSelectedByProductStations: (productId, currentUser, colorForMap) => dispatch => \r\n    fetch(`${BASE_URL}/station/product/${productId}/${currentUser._id}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n    .then(response => response.json())\r\n    .then(stationsData => dispatch({\r\n      type: PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n      stationsData: stationsData.map(station => {\r\n        station.colorForMap = colorForMap;\r\n        return station;\r\n      }),\r\n    })),\r\n\r\n  pushSelectedByRegionStations: (regionId, currentUser, colorForMap) => dispatch => \r\n    fetch(`${BASE_URL}/station/region/${regionId}/${currentUser._id}`, {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n    .then(response => response.json())\r\n    .then(stationsData => dispatch({\r\n      type: PUSH_SELECTED_BY_REGION_STATIONS,\r\n      stationsData: stationsData.map(station => {\r\n        station.colorForMap = colorForMap;\r\n        return station;\r\n      }),\r\n    })),\r\n};\r\n\r\nexport default StationActions;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'antd/dist/antd.css';\r\nimport '../common/components/tableConfig/table.css';\r\nimport { Input, AutoComplete } from 'antd';\r\nimport ProductApi from '../api/product.api';\r\nimport ProductActions from '../resources/product/product.actions';\r\nimport ProductSelector from '../resources/product/product.selector';\r\nimport UserSelector from '../resources/user/user.selector';\r\nimport StationActions from '../resources/station/station.actions';\r\n\r\nfunction ProductSearch({\r\n  selectedProductIds,\r\n  currentUser,\r\n  nextProductColor,\r\n  incNextProductColor,\r\n  switchOnProductTableVisibility,\r\n  pushSelectedProductIds,\r\n  pushSelectedByProductStations,\r\n}) {\r\n  const [productsInSearch, setProductsInSearch] = useState([]);\r\n  const [allProducts, setAllProducts] = useState([]);\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const productsData = await ProductApi.getAllProducts();\r\n      const productsForSearch = productsData.data.map(product => {\r\n        return {\r\n          value: product._id,\r\n          label: product.name,\r\n        }\r\n      });\r\n      setAllProducts(productsForSearch);\r\n      setProductsInSearch(productsForSearch);\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const onSelect = productId => {\r\n    if (productId && !selectedProductIds.includes(productId)) {\r\n      pushSelectedByProductStations(productId, currentUser, nextProductColor);\r\n      switchOnProductTableVisibility();\r\n      pushSelectedProductIds(productId);\r\n      incNextProductColor(nextProductColor);\r\n    }\r\n  };\r\n\r\n  const onSearch = productName => {\r\n    setSelectedValue(productName);\r\n    const newProducts = allProducts.filter((product) => \r\n      product.label.toString().toLowerCase().indexOf(productName.toString().toLowerCase()) > -1\r\n    );\r\n    setProductsInSearch(newProducts);\r\n  };\r\n\r\n  return <div className=\"site-input-group-wrapper\">\r\n    <AutoComplete\r\n      dropdownMatchSelectWidth={252}\r\n      style={{\r\n        width: 300,\r\n      }}\r\n      options={productsInSearch}\r\n      onSelect={onSelect}\r\n      onSearch={onSearch}\r\n      value={selectedValue}\r\n    >\r\n      <Input.Search size=\"large\" placeholder=\"название продукта\" enterButton />\r\n    </AutoComplete>\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedProductIds: ProductSelector.getSelectedProductIds(state),\r\n  nextProductColor: ProductSelector.getNextProductColorIndex(state),\r\n\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  switchOnProductTableVisibility: ProductActions.switchOnProductTableVisibility,\r\n  pushSelectedProductIds: ProductActions.pushSelectedProductId,\r\n  incNextProductColor: ProductActions.incProductColorIndex,\r\n\r\n  pushSelectedByProductStations: StationActions.pushSelectedByProductStations,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductSearch)","import baseApi from './base.api';\r\n\r\nclass StationApi {\r\n  postNewStation = async newStationData => {\r\n    return baseApi.post('/station', newStationData);\r\n  };\r\n\r\n  putStationDone = async ({ stationId, currentUser, done }) => {\r\n    return (await baseApi.put(`/station/${stationId}/${currentUser._id}/done`, { done })).data.stationDone;\r\n  };\r\n}\r\n\r\nexport default new StationApi();","const Guest = {\r\n    _id: '6103dfdc5b78f439334b5825',\r\n    name: 'Гость',\r\n};\r\n\r\nexport default Guest;","import { Switch } from \"antd\";\r\nimport { connect } from 'react-redux';\r\nimport UserSelector from '../../../resources/user/user.selector';\r\nimport StationApi from '../../../api/station.api';\r\nimport Guest from \"../../constants/defaultUser\";\r\n\r\nfunction DoneSwitch({ station, currentUser }) {\r\n  function onChange(checked) {\r\n    StationApi.putStationDone({\r\n      stationId: station.stationId,\r\n      currentUser,\r\n      done: checked,\r\n    });\r\n  }\r\n\r\n  if (currentUser === Guest) {\r\n    return <div></div>\r\n  }\r\n  if (station.done) {\r\n    return <Switch onChange={onChange} defaultChecked/>\r\n  }\r\n  return <Switch onChange={onChange} />\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(DoneSwitch);","import StationDoneSwitch from \"./StationDoneSwitch\";\r\n\r\nconst tableColumns = [\r\n  {\r\n    title: 'Product Name',\r\n    dataIndex: 'productName',\r\n    sorter: (a, b) => {\r\n      if (a.productName > b.productName) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n  {\r\n    title: 'Station Name',\r\n    dataIndex: 'stationName',\r\n  },\r\n  {\r\n    title: 'Need Count',\r\n    dataIndex: 'needCount',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.needCount - b.needCount,\r\n  },\r\n  {\r\n    title: 'Done',\r\n    render: station => <StationDoneSwitch station={station} />\r\n  },\r\n  {\r\n    title: 'region',\r\n    dataIndex: 'region',\r\n    sorter: (a, b) => {\r\n      if (a.region > b.region) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    },\r\n  },\r\n];\r\n\r\nexport default tableColumns;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StationSelector from '../resources/station/station.selector';\r\nimport 'antd/dist/antd.css';\r\nimport { Table } from 'antd';\r\nimport tableColumns from '../common/components/tableConfig/tableColumns';\r\n\r\nfunction ProductTable({ selectedByProductStations }) {\r\n  return <Table\r\n    columns={tableColumns}\r\n    dataSource={selectedByProductStations}\r\n    size=\"middle\"\r\n  />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedByProductStations: StationSelector.getSelectedByProductStations(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProductTable);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProductSearch from './ProductSearch';\r\nimport ProductTable from './ProductTable';\r\nimport styles from '../styles.module.css';\r\nimport ProductSelector from '../resources/product/product.selector';\r\n\r\nfunction ProductChoice({ productTableVisability }) {\r\n  return <div>\r\n    <ProductSearch />\r\n    { productTableVisability && \r\n      <ProductTable\r\n        className={styles.table}\r\n      /> }\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  productTableVisability: ProductSelector.getProductTableVisibility(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProductChoice);","import baseApi from './base.api';\r\n\r\nclass RegionApi {\r\n  getAllRegions = async () => {\r\n    return baseApi.get('/region');\r\n  };\r\n}\r\n\r\nexport default new RegionApi();","export const SWITCH_ON_REGION_TABLE_VISIBILITY = 'SWITCH_ON_REGION_TABLE_VISIBILITY';\r\n\r\nexport const PUSH_SELECTED_REGIONS_ID = 'PUSH_SELECTED_REGIONS_ID';\r\n\r\nexport const INC_REGION_COLOR_INDEX = 'INC_REGION_COLOR_INDEX';","import {\r\n  SWITCH_ON_REGION_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_REGIONS_ID,\r\n  INC_REGION_COLOR_INDEX,\r\n} from './region.types';\r\n\r\nconst RegionActions = {\r\n  switchOnRegionTableVisibility: () => dispatch => dispatch({ type: SWITCH_ON_REGION_TABLE_VISIBILITY }),\r\n\r\n  pushSelectedRegionId: regionId => dispatch => dispatch({ type: PUSH_SELECTED_REGIONS_ID, regionId}),\r\n\r\n  incRegionColorIndex: predIndex => dispatch => dispatch({ type: INC_REGION_COLOR_INDEX, colorIndex: predIndex + 1 }),\r\n};\r\n\r\nexport default RegionActions;","const RegionSelector = {\r\n    getRegionTableVisibility: state => state.region.regionTableVisibility,\r\n  \r\n    getSelectedRegionIds: state => state.region.selectedRegionIds,\r\n\r\n    getNextRegionColorIndex: state => state.region.nextRegionColorIndex,\r\n  };\r\n  \r\n  export default RegionSelector;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'antd/dist/antd.css';\r\nimport '../common/components/tableConfig/table.css';\r\nimport { Input, AutoComplete } from 'antd';\r\nimport RegionApi from '../api/region.api';\r\nimport RegionActions from '../resources/region/region.actions';\r\nimport RegionSelector from '../resources/region/region.selector';\r\nimport UserSelector from '../resources/user/user.selector';\r\nimport StationActions from '../resources/station/station.actions';\r\n\r\nfunction RegionSearch({\r\n  selectedRegionIds,\r\n  currentUser,\r\n  nextRegionColor,\r\n  incProductColorIndex,\r\n  switchOnRegionTableVisibility,\r\n  pushSelectedRegionIds,\r\n  pushSelectedByRegionStations,\r\n}) {\r\n  const [regionsInSearch, setRegionsInSearch] = useState([]);\r\n  const [allRegions, setAllRegions] = useState([]);\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchRegions = async () => {\r\n      const regionsData = await RegionApi.getAllRegions();\r\n      const regionsForSearch = regionsData.data.map(region => {\r\n        return {\r\n          value: region._id,\r\n          label: region.name,\r\n        }\r\n      });\r\n      setAllRegions(regionsForSearch);\r\n      setRegionsInSearch(regionsForSearch);\r\n    }\r\n    fetchRegions();\r\n  }, []);\r\n\r\n  const onSelect = regionId => {\r\n    if (regionId && !selectedRegionIds.includes(regionId)) {\r\n      pushSelectedByRegionStations(regionId, currentUser, nextRegionColor);\r\n      switchOnRegionTableVisibility();\r\n      pushSelectedRegionIds(regionId);\r\n      incProductColorIndex(nextRegionColor);\r\n    }\r\n    console.log({ selectedRegionIds });\r\n  };\r\n\r\n  const onSearch = regionName => {\r\n    setSelectedValue(regionName);\r\n    const newRegions = allRegions.filter((region) => \r\n      region.label.toString().toLowerCase().indexOf(regionName.toString().toLowerCase()) > -1\r\n    );\r\n    setRegionsInSearch(newRegions);\r\n  };\r\n\r\n  return <div className=\"site-input-group-wrapper\">\r\n    <AutoComplete\r\n      dropdownMatchSelectWidth={252}\r\n      style={{\r\n        width: 300,\r\n      }}\r\n      options={regionsInSearch}\r\n      onSelect={onSelect}\r\n      onSearch={onSearch}\r\n      value={selectedValue}\r\n    >\r\n      <Input.Search size=\"large\" placeholder=\"название региона\" enterButton />\r\n    </AutoComplete>\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedRegionIds: RegionSelector.getSelectedRegionIds(state),\r\n  nextRegionColor: RegionSelector.getNextRegionColorIndex(state),\r\n\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  switchOnRegionTableVisibility: RegionActions.switchOnRegionTableVisibility,\r\n  pushSelectedRegionIds: RegionActions.pushSelectedRegionId,\r\n  incProductColorIndex: RegionActions.incRegionColorIndex,\r\n\r\n  pushSelectedByRegionStations: StationActions.pushSelectedByRegionStations,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegionSearch)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StationSelector from '../resources/station/station.selector';\r\nimport 'antd/dist/antd.css';\r\nimport { Table } from 'antd';\r\nimport tableColumns from '../common/components/tableConfig/tableColumns';\r\n\r\nfunction RegionTable({ selectedByRegionStations }) {\r\n  return <Table\r\n    columns={tableColumns}\r\n    dataSource={selectedByRegionStations}\r\n    size=\"middle\"\r\n  />;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  selectedByRegionStations: StationSelector.getSelectedByRegionStations(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(RegionTable);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport RegionSearch from './RegionSearch';\r\nimport RegionTable from './RegionTable';\r\nimport styles from '../styles.module.css';\r\nimport RegionSelector from '../resources/region/region.selector';\r\n\r\nfunction RegionChoice({ regionTableVisability }) {\r\n  return <div>\r\n    <RegionSearch />\r\n    { regionTableVisability && \r\n      <RegionTable\r\n        className={styles.table}\r\n      /> }\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    regionTableVisability: RegionSelector.getRegionTableVisibility(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(RegionChoice);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Guest from '../common/constants/defaultUser';\r\nimport { Form, Input, Button, Select, Switch, Typography } from 'antd';\r\nimport StationApi from '../api/station.api';\r\nimport UserSelector from '../resources/user/user.selector';\r\n\r\nfunction NewStation({ currentUser }){\r\n  \r\n  const onFinish = async newStationData => {\r\n    newStationData.userId = currentUser._id;\r\n    await StationApi.postNewStation(newStationData);\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return <Form \r\n    labelCol={{ span: 7 }}\r\n    wrapperCol={{ span: 14 }}\r\n    layout=\"horizontal\"\r\n    onFinish={onFinish}\r\n    onFinishFailed={onFinishFailed}>\r\n\r\n    <Form.Item label=\"Продукт\" name=\"productName\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Станция\" name=\"stationName\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Координаты\" name=\"place\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Регион\" name=\"region\">\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Сколько нужно\" name=\"needCount\">\r\n      <Select>\r\n        <Select.Option value={25}>25</Select.Option>\r\n        <Select.Option value={50}>50</Select.Option>\r\n        <Select.Option value={150}>150</Select.Option>\r\n        <Select.Option value={350}>350</Select.Option>\r\n        <Select.Option value={1000}>1000</Select.Option>\r\n      </Select>\r\n    </Form.Item>\r\n\r\n    <Form.Item label=\"Выполнено\" name=\"done\" valuePropName=\"checked\">\r\n      { currentUser._id !== Guest._id ? <Switch /> : <Typography.Text>Пожалуйста, войтите :)</Typography.Text> }\r\n    </Form.Item>\r\n\r\n    <Form.Item wrapperCol={{span: 14, offset: 7}}>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n      Добавить\r\n      </Button>\r\n    </Form.Item>\r\n\r\n  </Form>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewStation);\r\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n\r\nexport const LOG_IN = 'LOG_IN';","import { SET_CURRENT_USER, LOG_IN } from './user.types';\r\nimport api from '../../api/base.api';\r\n\r\nconst UserActions = {\r\n  setCurrentUser: id => dispatch => \r\n    api.get(`/user/${id}`)\r\n      .then(currentUser => dispatch({ type: SET_CURRENT_USER, currentUser })),\r\n\r\n  logIn: (username, password) => dispatch =>\r\n    api.post(`/user/login`, { username, password })\r\n      .then(response => response.data)\r\n      .then(currentUser => dispatch({ type: LOG_IN, currentUser })),\r\n};\r\n\r\nexport default UserActions;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Avatar, Button } from 'antd';\r\nimport UserActions from '../resources/user/user.actions';\r\nimport UserSelector from '../resources/user/user.selector';\r\n\r\nfunction User({ currentUser, setCurrentUser }) {\r\n\r\n  const changeUser = () => {\r\n    setCurrentUser('60e06fe6ad2cc121d81eb19a'); // Тонечка\r\n  };\r\n\r\n  return <div style={{\r\n      display: 'inline-block',\r\n      'flexFlow': 'column wrap',\r\n      float: 'right',\r\n    }}>\r\n    <Button size=\"small\" onClick={changeUser}\r\n      style={{\r\n        verticalAlign: 'middle',\r\n        margin: '5px',\r\n        border: 'none',\r\n      }}>\r\n      Сменить власть\r\n    </Button>\r\n    <Avatar size={50} style={{\r\n        backgroundColor: '#1890ff',\r\n        verticalAlign: 'middle'\r\n      }}>\r\n        {currentUser ? currentUser.name : 'Гость'}\r\n    </Avatar>\r\n  </div>\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setCurrentUser: UserActions.setCurrentUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User)","import React from 'react';\r\n\r\nexport default function Logo() {\r\n  return <h1 style={{\r\n    color: '#2B90EE',\r\n    height: '100%',\r\n    width: '30%',\r\n    float: 'left',\r\n  }}> Tiny-map </h1>\r\n}\r\n","import React from 'react';\r\nimport User from './User';\r\nimport Logo from './Logo'\r\n\r\nexport default function Header() {\r\n  return <div style={{ \r\n    width: '100%',\r\n    height: '45px',\r\n    justifyContent: 'space-between',\r\n    display: 'flex',\r\n  }}>\r\n    <Logo />\r\n    <User />\r\n  </div>\r\n};\r\n","export const CHANGE_ACTIVE_TAB = 'CHANGE_ACTIVE_TAB';","import {\r\n  CHANGE_ACTIVE_TAB,\r\n} from './tab.types';\r\n\r\nconst TabActions = {\r\n  changeActiveTab: newActiveTabKey => dispatch => dispatch({ type: CHANGE_ACTIVE_TAB, newActiveTabKey }),\r\n};\r\n\r\nexport default TabActions;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Tabs } from 'antd';\r\nimport {\r\n  PRODUCT_TAB,\r\n  REGION_TAB,\r\n  CREATE_STATION_TAB,\r\n} from '../common/constants/tabs';\r\nimport ProductChoice from '../productChoice/ProductChoice';\r\nimport RegionChoice from '../regionChoice/RegionChoice';\r\nimport NewStation from '../newStation/NewStation';\r\nimport Header from '../Header/Header';\r\nimport TabActions from '../resources/tab/tab.actions';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction MainMenu({ changeActiveTab }) {\r\n  const tabChange = (key) => {\r\n    changeActiveTab(key);\r\n  };\r\n\r\n  return <div>\r\n    <Header />\r\n    <Tabs defaultActiveKey=\"1\" onChange={tabChange} style={{ margin: '0px' }}>\r\n      <TabPane tab=\"По продуктам\" key={PRODUCT_TAB}>\r\n        <ProductChoice />\r\n      </TabPane>\r\n      <TabPane tab=\"По регионам\" key={REGION_TAB}>\r\n        <RegionChoice />\r\n      </TabPane>\r\n      <TabPane tab=\"Добавить новую станцию\" key={CREATE_STATION_TAB}>\r\n        <NewStation />\r\n      </TabPane>\r\n    </Tabs>\r\n  </div>\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeActiveTab: TabActions.changeActiveTab,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(MainMenu);\r\n","import { connect } from 'react-redux';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport styles from './LogIn.module.css';\r\nimport UserActions from '../resources/user/user.actions';\r\n\r\nconst LogIn = ({ logIn }) => {\r\n  const onFinish = ({ username, password }) => {\r\n    logIn(username, password);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      labelCol={{ span: 7 }}\r\n      wrapperCol={{ span: 14 }}\r\n      name=\"basic\"\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n      className={styles['login-form']}\r\n    >\r\n      <Form.Item\r\n        label=\"Имя пользователя\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Введите имя пользователя',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Пароль\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Введите пароль',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"remember\"\r\n        valuePropName=\"checked\"\r\n        wrapperCol={{\r\n          offset: 7,\r\n          span: 14,\r\n        }}\r\n      >\r\n        <Checkbox>Запомнить меня</Checkbox>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 7,\r\n          span: 14,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  logIn: UserActions.logIn,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LogIn);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './styles.module.css';\r\nimport TinyMap from './map/TinyMap';\r\n\r\nimport {\r\n  Routes,\r\n  Route,\r\n} from \"react-router\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport UserSelector from './resources/user/user.selector';\r\nimport MainMenu from './MainMenu/MainMenu';\r\nimport LogIn from './LogIn/LogIn';\r\n\r\nfunction App({ currentUser }) {\r\n  return (\r\n    <div className={styles.app}>\r\n      <TinyMap />\r\n      <div className={styles.menu}>\r\n        {currentUser ?\r\n          (<Router>\r\n            <Routes>\r\n              <Route path=\"/\" element={<MainMenu />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n            </Routes>\r\n          </Router>)\r\n          : (<Router>\r\n            <Routes>\r\n              <Route path=\"/login\" element={<LogIn />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n            </Routes>\r\n          </Router>)\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: UserSelector.getCurrentUser(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { LOG_IN, SET_CURRENT_USER } from \"./user.types\";\r\n\r\nconst initialState = {\r\n  currentUser: null,\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.currentUser,\r\n      };\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;","import {\r\n  SWITCH_ON_PRODUCT_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_PRODUCT_ID,\r\n  INC_PRODUCT_COLOR_INDEX,\r\n} from './product.types';\r\n\r\nconst initialState = {\r\n  productTableVisibility: false,\r\n  selectedProductIds: [],\r\n  nextProductColorIndex: 0,\r\n}\r\n\r\nconst productReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SWITCH_ON_PRODUCT_TABLE_VISIBILITY: \r\n      return {\r\n        ...state,\r\n        productTableVisibility: true,\r\n      };\r\n    \r\n    case PUSH_SELECTED_PRODUCT_ID: \r\n      return {\r\n        ...state,\r\n        selectedProductIds: [\r\n          ...state.selectedProductIds,\r\n          action.productId,\r\n        ]\r\n      };\r\n    \r\n    case INC_PRODUCT_COLOR_INDEX:\r\n      return {\r\n        ...state,\r\n        nextProductColorIndex: action.colorIndex,\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productReducer;","import {\r\n  SWITCH_ON_REGION_TABLE_VISIBILITY,\r\n  PUSH_SELECTED_REGIONS_ID,\r\n  INC_REGION_COLOR_INDEX,\r\n} from './region.types';\r\n\r\nconst initialState = {\r\n  regionTableVisibility: false,\r\n  selectedRegionIds: [],\r\n  nextRegionColorIndex: 0,\r\n}\r\n\r\nconst regionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SWITCH_ON_REGION_TABLE_VISIBILITY: \r\n      return {\r\n        ...state,\r\n        regionTableVisibility: true,\r\n      };\r\n\r\n    case PUSH_SELECTED_REGIONS_ID: \r\n      return {\r\n        ...state,\r\n        selectedRegionIds: [\r\n          ...state.selectedRegionIds,\r\n          action.regionId,\r\n        ]\r\n      };\r\n\r\n    case INC_REGION_COLOR_INDEX:\r\n      return {\r\n        ...state,\r\n        nextRegionColorIndex: action.colorIndex,\r\n      };\r\n\r\n    default: \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default regionReducer;","import {\r\n  PUSH_SELECTED_BY_PRODUCT_STATIONS,\r\n  PUSH_SELECTED_BY_REGION_STATIONS,\r\n} from './station.types';\r\n\r\nconst initialState = {\r\n  selectedByProductStations: [],\r\n  selectedByRegionStations: [],\r\n};\r\n\r\nconst StationReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case PUSH_SELECTED_BY_PRODUCT_STATIONS:\r\n      return {\r\n        ...state,\r\n        selectedByProductStations: [\r\n          ...state.selectedByProductStations,\r\n          ...action.stationsData,\r\n        ],\r\n      };\r\n    case PUSH_SELECTED_BY_REGION_STATIONS:\r\n      return {\r\n        ...state,\r\n        selectedByRegionStations: [\r\n          ...state.selectedByRegionStations,\r\n          ...action.stationsData,\r\n        ]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default StationReducer;","import {\r\n  CHANGE_ACTIVE_TAB,\r\n} from './tab.types';\r\nimport {\r\n  PRODUCT_TAB,\r\n} from '../../common/constants/tabs';\r\n\r\nconst initialState = {\r\n  activeTab: PRODUCT_TAB,\r\n};\r\n\r\nconst tabReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case CHANGE_ACTIVE_TAB:\r\n      return {\r\n        ...state,\r\n        activeTab: action.newActiveTabKey,\r\n      };\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default tabReducer;\r\n","import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport userReducer from './user/user.reducer';\r\nimport productReducer from './product/product.reducer';\r\nimport regionReducer from './region/region.reducer';\r\nimport stationReducer from './station/station.reducer';\r\nimport tabReducer from './tab/tab.reducer';\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  product: productReducer,\r\n  region: regionReducer,\r\n  station: stationReducer,\r\n  tab: tabReducer,\r\n});\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './resources/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    <style>{'#root {width: 100%} '}</style>\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles_app__2MKbF\",\"map\":\"styles_map__tTZXH\",\"menu\":\"styles_menu__2uBzr\",\"table\":\"styles_table__3ijJi\",\"username\":\"styles_username__39I6e\"};"],"sourceRoot":""}